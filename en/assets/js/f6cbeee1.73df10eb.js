"use strict";(self.webpackChunkthiagola_92_github_io=self.webpackChunkthiagola_92_github_io||[]).push([[3836],{74641:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2025/10/04/write-safely-files","metadata":{"permalink":"/en/blog/2025/10/04/write-safely-files","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2025-10-04-write-safely-files/index.md","source":"@site/blog/2025-10-04-write-safely-files/index.md","title":"Write Safely to Files","description":"Ano passado decidi explorar como garantir escrever em um arquivo sem que outros processos atrapalhem. Isto levou a cria\xe7\xe3o do post: Lock Files Process.","date":"2025-10-04T00:00:00.000Z","formattedDate":"October 4, 2025","tags":[{"label":"file","permalink":"/en/blog/tags/file"},{"label":"files","permalink":"/en/blog/tags/files"},{"label":"database","permalink":"/en/blog/tags/database"},{"label":"multiple","permalink":"/en/blog/tags/multiple"},{"label":"lock","permalink":"/en/blog/tags/lock"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["file","files","database","multiple","lock"]},"unlisted":false,"nextItem":{"title":"Discord Social SDK","permalink":"/en/blog/2025/06/03/discord-social-sdk"}},"content":"Ano passado decidi explorar como garantir escrever em um arquivo sem que outros processos atrapalhem. Isto levou a cria\xe7\xe3o do post: [Lock Files Process](../2024-07-29-lock-file-process/index.md).  \\n\\nAgora o problema que tenho refletido \xe9 sobre como editar arquivos de forma segura.  \\n\\n## Problem 1\\nSe eu possuo apenas um arquivo, eu posso utilizar locks do sistema operacional para evitar que outros processos leiam/escrevam enquanto eu estou escrevendo.  \\n\\n```\\nprocess_1\\n\u2514\u2500\u2500 file_a.json (get lock)\\nprocess_2\\n\u2514\u2500\u2500 file_a.json (wait lock)\\n```\\n\\n:::note\\nIsso n\xe3o impede que processos m\xe1 intencionados corrompam seu arquivo, pois eles ainda podem ignorar estas locks.  \\n:::\\n\\nMas o que acontece se tivermos no meio de escrever um arquivo grande e o computador desligar/travar? Existe o risco do nosso arquivo ficar escrito pela metade...  \\n\\n## Problem 2\\nVamos supor que temos a solu\xe7\xe3o do problema acima, como solucionamos para casos onde um comando da CLI precisa alterar diversos arquivo e o computador desliga/trava no meio?  \\n\\n```\\nprocess_1\\n\u251c\u2500\u2500 file_a.json (editing)\\n\u251c\u2500\u2500 file_b.json (editing)\\n\u2514\u2500\u2500 file_c.json (editing)\\n```\\n\\nIsto quer dizer que pode travar ap\xf3s terminar de editar um arquivo enquanto os outros n\xe3o:  \\n\\n```\\nprocess_1\\n\u251c\u2500\u2500 file_a.json (edited)\\n\u251c\u2500\u2500 file_b.json (editing)\\n\u2514\u2500\u2500 file_c.json (editing)\\n```\\n\\nLer do arquivo `file_a.json` poderia nos dar a ilus\xe3o que o comando da CLI funcionou quando na realidade nem tudo foi aplicado.  \\n\\n## Problem 3\\nO outro problema que tenho refletido \xe9 quando m\xfaltiplos processos precisam alterar m\xfaltiplos arquivos ao mesmo tempo.  \\n\\n> `process_1` precisa utilizar `file_a.json` e `file_b.json`  \\n> `process_2` precisa utilizar `file_a.json` e `file_b.json`  \\n\\n```\\nprocess_1\\n\u251c\u2500\u2500 file_a.json (get lock)\\n\u2514\u2500\u2500 file_b.json (get lock)\\nprocess_2\\n\u251c\u2500\u2500 file_a.json (wait lock)\\n\u2514\u2500\u2500 file_b.json\\n```\\n\\nNeste caso nenhum problema ocorre pois `process_2` vai ficar esperando `process_1` liberar a lock de `file_a.json` para continuar com suas tarefas. Isso \xe9 o mesmo que executar os processos sequencialmente.  \\n\\n> `process_1` precisa utilizar `file_a.json` e `file_b.json`  \\n> `process_2` precisa utilizar `file_b.json` e `file_c.json`  \\n\\n```\\nprocess_1\\n\u2514\u2500\u2500 file_a.json (get lock)\\nprocess_2\\n\u2514\u2500\u2500 file_b.json (get lock)\\nprocess_1\\n\u2514\u2500\u2500 file_b.json (wait lock)\\nprocess_2\\n\u2514\u2500\u2500 file_c.json (get lock)\\n```\\n\\nNeste caso, mesmo `process_1` come\xe7ando primeiro, ele vai ter que esperar `process_2` liberar a lock que foi pega no meio da execu\xe7\xe3o dele. Isso tamb\xe9m n\xe3o \xe9 um caso ruim, pois no final a lock deve ser liberada.  \\n\\n> `process_1` precisa utilizar `file_a.json` e `file_b.json`  \\n> `process_2` precisa utilizar `file_b.json` e `file_a.json`  \\n\\n```\\nprocess_1\\n\u2514\u2500\u2500 file_a.json (get lock)\\nprocess_2\\n\u2514\u2500\u2500 file_b.json (get lock)\\nprocess_1\\n\u2514\u2500\u2500 file_b.json (wait lock)\\nprocess_2\\n\u2514\u2500\u2500 file_a.json (wait lock)\\n```\\n\\n\xc9 neste caso em que um [deadlock](https://en.wikipedia.org/wiki/Deadlock_(computer_science)) ocorre. Onde ambos processos ficam esperando um pelo o outro e podem nunca sair do loop.  \\n\\nMesmo que eu considere qualquer timeout que os processos tenham, nada impede de acontecer novamente e novamente... Ent\xe3o n\xe3o \xe9 ideal s\xf3 esperar que n\xe3o aconte\xe7a.  \\n\\n## Solution 1\\nUma maneira de solucionar isto \xe9 escrever em arquivos tempor\xe1rios e no final substituir os originais.  \\n\\n```\\nprocess_1\\n\u251c\u2500\u2500 file_a.json\\n\u2514\u2500\u2500 file_a.temp\\n```\\n\\nVeja bem, enquanto voc\xea escreve nos arquivos tempor\xe1rios, os arquivos originais v\xe3o ficar intactos e sem risco de serem corrompidos em caso de falhas no sistema. Quando finalmente voc\xea terminar de escrever o que queria neles, voc\xea substitui os originais utilizando uma opera\xe7\xe3o at\xf3mica ([`mv`](https://man7.org/linux/man-pages/man1/mv.1.html) ou [`rename`](https://man7.org/linux/man-pages/man1/rename.1.html)).  \\n\\nBasicamente a l\xf3gica \xe9:  \\n\\n- Dado que temos o arquivo original (`xxxx.json`)\\n- Copie o conte\xfado do arquivo original para o tempor\xe1rio (`xxxx.temp`)\\n- Escreva sempre no arquivo tempor\xe1rio\\n- Substitua o arquivo original pelo tempor\xe1rio\\n\\nSe considerarmos que temos locks:  \\n\\n- Dado que temos o arquivo original (`xxxx.json`)\\n- **Pegue a lock do arquivo original**\\n- Copie o conte\xfado do arquivo original para o tempor\xe1rio (`xxxx.temp`)\\n- Escreva sempre no arquivo tempor\xe1rio\\n- Substitua o arquivo original pelo tempor\xe1rio\\n- **Solte a lock do arquivo original**\\n\\n:::warning\\nAmbas opera\xe7\xf5es `mv` e `rename` s\xe3o at\xf3micas quando se trata do mesmo volume (HD/SSD) pois \xe9 s\xf3 um redirecionamento do ponteiro. Se estivermos falando dessas opera\xe7\xf5es entre volumes diferentes, seria preciso que um volume copiasse para o outro volume antes e isso **n\xe3o** \xe9 at\xf3mico.  \\n:::\\n\\nPor\xe9m como estamos lidando com locks, e \xe9 necess\xe1rio saber se podemos renomear um arquivo com lock... A resposta \xe9 **sim para Linux/Macos** e **n\xe3o para Windows**.  \\n\\nIsso ocorre pois Windows utiliza mandatory lock (em vez de advisory lock), isso obriga todos os processos a respeitarem o acesso aquele arquivo e proibi a remo\xe7\xe3o do arquivo enquanto possuir uma lock.  \\n\\n### Solution 1+\\nPodemos contornar esse problema utilizando um arquivo de acesso como lock.  \\n\\n```\\nprocess_1\\n\u251c\u2500\u2500 file_a.json\\n\u251c\u2500\u2500 file_a.lock\\n\u2514\u2500\u2500 file_a.temp\\n```\\n\\nAgora nos criamos a regra interna que apenas aqueles com a lock do arquivo de acesso podem escrever no arquivo.  \\n\\n- Dado que temos o arquivo original (`xxxx.json`)\\n- **Pegue a lock do arquivo de acesso** (`xxxx.lock`)\\n- Copie o conte\xfado do arquivo original para o tempor\xe1rio (`xxxx.temp`)\\n- Escreva sempre no arquivo tempor\xe1rio\\n- Substitua o arquivo original pelo tempor\xe1rio\\n- **Solte a lock do arquivo de acesso**\\n\\n### Solution 1++\\nExiste um pequeno detalhe que eu esqueci de cobrir... Enquanto opera\xe7\xf5es as opera\xe7\xf5es `rename` e `mv` s\xe3o at\xf3micas na mem\xf3ria (RAM), isso **n\xe3o** quer dizer que sua mudan\xe7as j\xe1 foram para o storage (HD/SSD).  \\n\\nCPU trabalha com a mem\xf3ria e de tempos em tempos armazena as altera\xe7\xf5es no storage, ou seja, a gente chama `rename` e todos os processos j\xe1 v\xe3o poder ver isso como verdade... Mas n\xe3o quer dizer que as mudan\xe7as j\xe1 foram salvas no storage.  \\n\\nPor isto que precisamos utilizar comandos como `fsync` que for\xe7\xe3o o flush dos dados no nosso storage.  \\n\\n- Dado que temos o arquivo original (`xxxx.json`)\\n- Pegue a lock do arquivo de acesso (`xxxx.lock`)\\n- Copie o conte\xfado do arquivo original para o tempor\xe1rio (`xxxx.temp`)\\n- Escreva sempre no arquivo tempor\xe1rio\\n- **`fsync` no arquivo tempor\xe1rio**\\n- Substitua o arquivo original pelo tempor\xe1rio\\n- **`fsync` no diret\xf3rio do arquivo original**\\n- Solte a lock do arquivo de acesso\\n\\n*O primeiro `fsync` garante que o arquivo tempor\xe1rio esteja storage antes de substituir o original.*  \\n\\n:::danger\\nImagina se a gente usasse `rename`, sem ele ter sido armazenado no storage!  \\n\\nQuando voc\xea substitui o arquivo, voc\xea apenas est\xe1 substituindo ponteiros, ent\xe3o \xe9 bom voc\xea ter certeza que para onde ele existe no storage (caso contr\xe1rio voc\xea est\xe1 apontando para lixo).\\n:::\\n\\n*O segundo `fsync` atualiza o metadata do diret\xf3rio (os arquivos que ele possue).*  \\n\\n## Solution 2\\nPara garantir a atomicidade dessa altera\xe7\xe3o em conjunto, podemos criar um journal que ir\xe1 armazenar todos os arquivos que precisam ser substituidos e seus estados.  \\n\\nIremos definir 3 estados para nossos arquivos tempor\xe1rios:  \\n- WRITE\\n    - Processo pode estar copiando o arquivo original\\n    - Processo pode estar alterando o arquivo tempor\xe1rio\\n- REPLACE\\n    - Processo n\xe3o vai fazer mais altera\xe7\xf5es no arquivo tempor\xe1rio\\n    - Processo est\xe1 substituindo o arquivo original pelo tempor\xe1rio\\n- DELETE\\n    - Processo j\xe1 substituiu o arquivo original\\n    - Processo est\xe1 deletando o arquivo tempor\xe1rio\\n\\nOs arquivos tempor\xe1rio caminham pelos estados na ordem WRITE, REPLACE, DELETE.  \\n\\n```\\nprocess_1\\n\u2514\u2500\u2500 journal\\n    \u251c\u2500\u2500 file_a.temp (WRITE)\\n    \u251c\u2500\u2500 file_b.temp (WRITE)\\n    \u2514\u2500\u2500 file_c.temp (WRITE)\\n```\\n\\nEncontrar um arquivo no estado WRITE indica que o processo nunca terminou de escrever os tempor\xe1rios, ent\xe3o voc\xea pode descartar todos os arquivos tempor\xe1rios pois n\xe3o \xe9 poss\xedvel continuar de onde a tarefa parou.  \\n\\n```\\nprocess_1\\n\u2514\u2500\u2500 journal\\n    \u251c\u2500\u2500 file_a.temp (REPLACE)\\n    \u251c\u2500\u2500 file_b.temp (REPLACE)\\n    \u2514\u2500\u2500 file_c.temp (REPLACE)\\n```\\n\\nEncontrar um arquivo no estado REPLACE indica que \xe9 poss\xedvel terminar a tarefa pois o arquivo tempor\xe1rio j\xe1 terminou de ser alterado, basta voc\xea terminar de substituir o arquivo.  \\n\\n```\\nprocess_1\\n\u2514\u2500\u2500 journal\\n    \u251c\u2500\u2500 file_a.temp (DELETE)\\n    \u251c\u2500\u2500 file_b.temp (DELETE)\\n    \u2514\u2500\u2500 file_c.temp (DELETE)\\n```\\n\\nEncontrar um arquivo no estado DELETE indica que ele precisa ser removido pois j\xe1 foi utilizado como deveria.  \\n\\n\xc9 importante notar que todos os arquivos devem caminhar em conjunto pelas etapas. Por exemplo:  \\n\\n```\\nprocess_1\\n\u2514\u2500\u2500 journal\\n    \u251c\u2500\u2500 file_a.temp (REPLACE)\\n    \u251c\u2500\u2500 file_b.temp (WRITE)\\n    \u2514\u2500\u2500 file_c.temp (WRITE)\\n```\\n\\nO arquivo `file_a.temp` **n\xe3o** pode ir para o estado DELETE at\xe9 que todos os outros arquivos estejam no mesmo estado que ele (REPLACE).  \\n\\nA aus\xeancia dessa regra pode criar cen\xe1rios imposs\xedveis de se recuperar **ap\xf3s uma falha no sistema**. Por exemplo:  \\n\\n```\\nprocess_1\\n\u2514\u2500\u2500 journal\\n    \u251c\u2500\u2500 file_a.temp (DELETE)\\n    \u251c\u2500\u2500 file_b.temp (WRITE)\\n    \u2514\u2500\u2500 file_c.temp (WRITE)\\n```\\n\\n- N\xe3o temos como reverter a altera\xe7\xe3o no `file_a.temp` pois j\xe1 substituimos o arquivo\\n- N\xe3o podemos completar de escrever o conte\xfado de `file_b.temp` e `file_c.temp` pois n\xe3o sabemos o que estava sendo escrito\\n\\nO pr\xf3ximo problema que temos \xe9... Onde armazenar esse journal? Outro processos v\xe3o precisar ver ele para saber se precisam terminar alguma opera\xe7\xe3o passada.  \\n\\n### Solution 2+\\nPodemos armazenar o journal de cada processo em um arquivo dentro de um diret\xf3rio qualquer (iremos chamar o diret\xf3rio de `.journals`).  \\n\\n```\\n.journals\\n\u251c\u2500\u2500 <pid_0001>.journal\\n\u251c\u2500\u2500 <pid_0002>.journal\\n\u2514\u2500\u2500 <pid_0003>.journal\\n```\\n\\nUtilizamos o [PID](https://en.wikipedia.org/wiki/Process_identifier) de cada processo como nome dos arquivos (pois eles s\xe3o \xfanicos).  \\n\\nAgora precisamos garantir o tratamento de qualquer journal incompleto, para isto vamos definir regras que todo processo deve executar antes de come\xe7ar sua pr\xf3pria tarefa:  \\n\\n- Verifica se `<pid>.journal`\\n    - Se existir, n\xf3s sabemos que foi um processo antigo que n\xe3o finalizou ent\xe3o come\xe7amos o tratamento\\n- Verifica se outro jornal incompleto existe\\n    - Se existir, n\xf3s iniciamos o tratamento daquele journal\\n\\nComo sabemos que PIDs s\xe3o \xfanicos \xe9 f\xe1cil saber que um journal com o nosso PID \xe9 um journal incompleto. Mas como sabemos se outros journals s\xe3o incompletos ou possuem algu\xe9m processando?  \\n\\n### Solution 2++\\nPodemos utilizar locks para informar a outro processos que este journal est\xe1 em tratamento.  \\n\\n```\\n.journals\\n\u251c\u2500\u2500 <pid_0001>.journal (write lock)\\n\u251c\u2500\u2500 <pid_0002>.journal (write lock)\\n\u2514\u2500\u2500 <pid_0003>.journal (no lock)\\n```\\n\\nSe o processo encontrar um journal sem lock, n\xf3s teremos certeza que ningu\xe9m est\xe1 tratando ele no momento e devemos pegar o lock para n\xf3s e terminar o journal.  \\n\\n## Solution 3\\nPara garantir que n\xe3o exista deadlock, precisamos garantir que um processo pegue suas locks antes de outro processo tentar pegar as deles.  \\n\\nPara isto criaremos um arquivo que chamaremos de `.global.lock`, o qual todos os processos devem tentar pegar a lock antes de iniciar as tarefas.  \\n\\n- Se nosso processo n\xe3o conseguir a lock do `.global.lock`\\n    - Existe um processo pegando locks, devemos aguardar\\n- Caso contr\xe1rio\\n    - N\xf3s podemos pegar as locks que s\xe3o necess\xe1rias para nossa tarefa\\n\\n\xc9 importante que essa lock seja liberada ap\xf3s aquele processo pegar as locks que precisa (ou falhar em pegar), caso contr\xe1rio diversos processos podem acabar esperando pela libera\xe7\xe3o da `.global.lock`.  \\n\\n## Conclusion\\nEu n\xe3o comecei a escrever nada de c\xf3digo ainda mas posso garantir uma coisa... Vai ser lento.  \\n\\n- Read & Write de arquivos o tempo todo\\n- Lock & Unlock de arquivos o tempo todo\\n\\nTudo \xe9 receita para ser bem lento, n\xe3o \xe9 atoa que SQLite faz tudo em um arquivo e trabalha maior parte na mem\xf3ria RAM.  \\n\\nDito isto, isto vai ser um projeto interessante para mim.  \\n\\n![Rosto feliz](./happy.svg)  \\n\\n## References\\n- https://en.wikipedia.org/wiki/Deadlock_(computer_science)\\n- https://man7.org/linux/man-pages/man1/mv.1.html\\n- https://man7.org/linux/man-pages/man1/rename.1.html\\n- https://man7.org/linux/man-pages/man2/fsync.2.html\\n- https://en.wikipedia.org/wiki/File_locking\\n- https://en.wikipedia.org/wiki/Atomicity_(database_systems)\\n- https://en.wikipedia.org/wiki/Write-ahead_logging\\n- https://en.wikipedia.org/wiki/Transaction_log\\n- https://en.wikipedia.org/wiki/Rollback_(data_management)\\n- https://www.sqlite.org/tempfiles.html\\n- https://www.sqlite.org/lockingv3.html\\n- https://www.sqlite.org/wal.html"},{"id":"/2025/06/03/discord-social-sdk","metadata":{"permalink":"/en/blog/2025/06/03/discord-social-sdk","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2025-06-03-discord-social-sdk/index.md","source":"@site/blog/2025-06-03-discord-social-sdk/index.md","title":"Discord Social SDK","description":"Internamente Discord possui uma nomeclatura realmente confusa.","date":"2025-06-03T00:00:00.000Z","formattedDate":"June 3, 2025","tags":[{"label":"discord","permalink":"/en/blog/tags/discord"},{"label":"sdk","permalink":"/en/blog/tags/sdk"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["discord","sdk"]},"unlisted":false,"prevItem":{"title":"Write Safely to Files","permalink":"/en/blog/2025/10/04/write-safely-files"},"nextItem":{"title":"IPC","permalink":"/en/blog/2025/03/14/IPC"}},"content":"Internamente Discord possui uma nomeclatura realmente confusa.  \\n\\nO nome de uma feature qualquer do Discord, pode n\xe3o ser o mesmo dentro da SDK **ou**, at\xe9 mesmo, n\xe3o possuir um nome certo. Por exemplo, activities...  \\n\\n## Activity\\n![Site do Discord explicando o que \xe9 activity](activity.png)  \\n<small>(https://discord.com/developers/docs/activities/overview)</small>\\n\\nNa imagem podemos ver que a defini\xe7\xe3o dada \xe9:  \\n\\n> Activities are multiplayer games and social experiences that can be launched in Discord\\n\\nActivites eram essas atividades em grupo que n\xf3s poderiamos iniciar ao pressionar o bot\xe3o \\"Start an Activity\\" durante uma chamada de voz:  \\n\\n![Bot\xe3o \\"start an activity\\"](activity2.png)  \\n\\nE \xe9 justamente isto que **eu**, como usu\xe1rio do Discord, esperava que activity fosse ser para sempre. \\n\\n---\\n\\nRecentemente descobri que Discord decidiu generalizar o termo para:  \\n\\n***Qualquer atividade que o usu\xe1rio esteja fazendo e que tenha sido compartilhada com o Discord.***  \\n\\n\xc9 por isto que podemos encontrar v\xe1rias se\xe7\xf5es de atividades dentro do Discord:  \\nhttps://support.discord.com/hc/en-us/articles/7931156448919-Activity-Status-Recent-Activity  \\n\\nA nova SDK utiliza est\xe1 defini\xe7\xe3o nova, enquanto documenta\xe7\xf5es antigas do Discord ainda podem n\xe3o ter sido atualizadas.  \\n\\n## Guild (aka Server)\\n> Guilds in Discord represent an isolated collection of users and channels, and are often referred to as \\"servers\\" in the UI.  \\n\\nMeu palpite \xe9 que \\"server\\" seja um termo muito espec\xedfico dentro de computa\xe7\xe3o, ent\xe3o utilizar um termo de jogos internamente ajuda bastante. Maaaas n\xe3o \xe9 um termo que qualquer pessoa do dia a dia iria entender e por isto decidiram utilizar \\"server\\" na UI.  \\n\\nPara mim deveriam ter ficado com Guild por organiza\xe7\xe3o, mesmo que pessoas normais fossem achar nerd ou estranho.  \\n\\n---\\n\\nVale mencionar que recentemente tentaram utilizar o termo Guild para outra feature deles (que foi cancelada):  \\n\\n![FAQ do Discord explicando Guild](guild.png)  \\n<small>(https://support.discord.com/hc/en-us/articles/23187611406999-Guilds-FAQ)</small>  \\n\\n## Channel\\nNormalmente se imaginaria canais de texto e canais de voz, mas acontece que quase tudo \xe9 um channel:  \\n\\n- Canal de texto de um server\\n- Canal de voz de um server\\n- Categorizador dos servers\\n    - Sabe aquilo para voc\xea botar diversos canais de voz/texto em categorias?\\n- Threads\\n- Mensagem privada entre usu\xe1rios\\n- Mensagem em um grupo\\n- ...\\n\\n<small>(https://discord.com/developers/docs/resources/channel#channel-object-channel-types)</small>   \\n\\n## Lobby\\n\xc9 um grupo de usu\xe1rios... Fim.  \\n\\nUm lobby existe sem a necessidade dos usu\xe1rios estarem fazendo nada nele (activity/guild/channel/...). \xc9 o local onde multiplos usu\xe1rios decidiram se agrupar junto e ainda n\xe3o foi decidido o que v\xe3o fazer.  \\n\\nMeio dif\xedcil de imaginar isto na interface do Discord n\xe9?  \\n\\n# References\\n- [Activity](https://discord.com/developers/docs/activities/overview)\\n- [Activity blog](https://discord.com:2053/blog/server-activities-games-voice-watch-together)\\n- [Activity video 1](https://www.youtube.com/watch?v=POMIDMK6WfM)\\n- [Activity video 2](https://www.youtube.com/watch?v=8jD0dkCgF7k)\\n- [Activity status](https://support.discord.com/hc/en-us/articles/7931156448919-Activity-Status-Recent-Activity)\\n- [SDK Activity](https://discord.com/developers/docs/social-sdk/classdiscordpp_1_1Activity.html)\\n- [Guild](https://discord.com/developers/docs/resources/guild)\\n- [SDK Guild](https://discord.com/developers/docs/social-sdk/classdiscordpp_1_1GuildMinimal.html)\\n- [SDK Channel](https://discord.com/developers/docs/social-sdk/classdiscordpp_1_1ChannelHandle.html)\\n- [SDK Lobby](https://discord.com/developers/docs/social-sdk/classdiscordpp_1_1LobbyHandle.html)\\n- [SDK Call](https://discord.com/developers/docs/social-sdk/classdiscordpp_1_1Call.html)"},{"id":"/2025/03/14/IPC","metadata":{"permalink":"/en/blog/2025/03/14/IPC","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2025-03-14-IPC/index.md","source":"@site/blog/2025-03-14-IPC/index.md","title":"IPC","description":"(Interprocess Communication)","date":"2025-03-14T00:00:00.000Z","formattedDate":"March 14, 2025","tags":[{"label":"ipc","permalink":"/en/blog/tags/ipc"},{"label":"interprocess communication","permalink":"/en/blog/tags/interprocess-communication"},{"label":"inter-process communication","permalink":"/en/blog/tags/inter-process-communication"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["ipc","interprocess communication","inter-process communication"]},"unlisted":false,"prevItem":{"title":"Discord Social SDK","permalink":"/en/blog/2025/06/03/discord-social-sdk"},"nextItem":{"title":"Memory Allocation","permalink":"/en/blog/2025/03/13/memory-allocation"}},"content":"*(Interprocess Communication)*  \\n\\nExistem diversas maneiras de fazer dois processos distintos se comunicarem e isto torna bem dif\xedcil de escolher qual deles utilizar sem antes conhecermos o m\xednimo delas.  \\n\\n## Low Level\\n\\n### File\\n*Escrever os dados em um arquivo e esperar que outro processo leia o arquivo.*  \\n\\nPode ser estranho por ser muito simples mas acontece que passar dados entre processos n\xe3o precisa ser complicado.  \\n\\n:::note\\nInclusive, \xe9 como eu implementei [Mondot](https://github.com/thiagola92/Mondot) (GUI para MongoDB).  \\n:::\\n\\nExemplo:\\n- Processo 1\\n  - Constantemente verifica se o arquivo possui conte\xfado\\n  - Se notar que possui, exibe o conte\xfado na tela e esvazia o arquivo\\n- Processo 2\\n  - Constantemente verifica se o arquivo est\xe1 vazio\\n  - Se notar que est\xe1 vazio, escreve conte\xfado no arquivo\\n\\n```C\\n#include <stdio.h>\\n#include <stdlib.h>\\n#include <string.h>\\n\\nint BUFFER_SIZE = 256;\\n\\nint main(void) {\\n  FILE *file = fopen(\\"input.txt\\", \\"r+\\");\\n  char *buffer = (char *)malloc(BUFFER_SIZE);\\n  int count = 0;\\n\\n  memset(buffer, 0, BUFFER_SIZE);\\n\\n  printf(\\"Waiting message\\\\n\\");\\n\\n  do {\\n    fseek(file, 0, SEEK_SET);\\n    count = fread(buffer, sizeof(char), BUFFER_SIZE, file);\\n  } while (count == 0);\\n\\n  printf(\\"Reading message\\\\n\\\\n\\");\\n\\n  do {\\n    printf(\\"%s\\", buffer);\\n    count = fread(buffer, sizeof(char), BUFFER_SIZE, file);\\n\\n    if (count < BUFFER_SIZE) {\\n      buffer[count] = \'\\\\0\';\\n    }\\n\\n  } while (count != 0);\\n\\n  printf(\\"\\\\n\\\\nClearing file\\\\n\\");\\n  freopen(\\"input.txt\\", \\"w\\", file);\\n  fclose(file);\\n\\n  return 0;\\n}\\n```\\n\\n```C\\n#include <stdio.h>\\n#include <stdlib.h>\\n#include <string.h>\\n\\nint BUFFER_SIZE = 256;\\n\\nint main(void) {\\n  FILE *file = fopen(\\"../process1/input.txt\\", \\"w+\\");\\n  char *buffer = (char *)malloc(BUFFER_SIZE);\\n  int count = 0;\\n\\n  memset(buffer, 0, BUFFER_SIZE);\\n\\n  printf(\\"Waiting file to be empty\\\\n\\");\\n\\n  do {\\n    fseek(file, 0, SEEK_SET);\\n    count = fread(buffer, sizeof(char), BUFFER_SIZE, file);\\n  } while (count != 0);\\n\\n  printf(\\"Writing message\\\\n\\");\\n  fprintf(file, \\"Hello world\\");\\n  fclose(file);\\n\\n  return 0;\\n}\\n```\\n\\nNote que neste exemplo eu leio e escrevo no arquivo constantemente, por\xe9m isto \xe9 apenas um exemplo!  \\n\\nA realidade \xe9 que n\xf3s devemos ler ou escrever no arquivo na frequ\xeancia que acharmos necess\xe1rio para nosso programa. S\xf3 quero que voc\xea entenda que este m\xe9todo IPC \xe9 sobre processos usarem arquivos para interagir uns com os outros.  \\n\\n### File Locking\\n*Escrever os dados em um arquivo e esperar que outro processo leia o arquivo **por\xe9m respeitando as travas**.*  \\n\\nUm grande problema da maneira anterior \xe9 dois processos interagirem exatamente no mesmo momento com o arquivo. Imagine que um processo comece a ler enquanto um outro n\xe3o terminou de escrever, isso far\xe1 com que ele leia conte\xfado incompleto.  \\n\\nA maneira de travar arquivos varia em cada sistema operacional. Por exemplo, no Linux temos:  \\n- `flock`\\n- `lockf`\\n- `fcntl`\\n\\nUtilizaremos `lockf` para aprimorar o exemplo utilizado para arquivos:  \\n- Processo 1\\n  - Constantemente:\\n    - Espera obter a trava para o arquivo\\n    - Verifica se o arquivo possui conte\xfado\\n    - Libera a trava do arquivo **se ele n\xe3o tiver**\\n  - Se notar que possui, exibe o conte\xfado na tela, esvazia o arquivo e **libera a trava**\\n- Processo 2\\n  - Constantemente:\\n    - Espera obter a trava para o arquivo\\n    - Verifica se o arquivo possui conte\xfado\\n    - Libera a trava do arquivo **se ele tiver**\\n  - Se notar que est\xe1 vazio, escreve conte\xfado no arquivo e **libera a trava**\\n\\n```C\\n#include <fcntl.h>\\n#include <stdio.h>\\n#include <stdlib.h>\\n#include <string.h>\\n#include <unistd.h>\\n\\nint BUFFER_SIZE = 256;\\n\\nint main(void) {\\n  int fd = open(\\"input.txt\\", O_RDWR);\\n  char *buffer = (char *)malloc(BUFFER_SIZE);\\n  int count = 0;\\n\\n  memset(buffer, 0, BUFFER_SIZE);\\n\\n  printf(\\"Waiting message\\\\n\\");\\n\\n  while (1) {\\n    lockf(fd, F_LOCK, 0);\\n    lseek(fd, 0, SEEK_SET);\\n    count = read(fd, buffer, BUFFER_SIZE);\\n\\n    if (count != 0) {\\n        break;\\n    }\\n\\n    lockf(fd, F_ULOCK, 0);\\n  }\\n\\n  printf(\\"Reading message\\\\n\\\\n\\");\\n\\n  do {\\n    printf(\\"%s\\", buffer);\\n    count = read(fd, buffer, BUFFER_SIZE);\\n\\n    if (count < BUFFER_SIZE) {\\n      buffer[count] = \'\\\\0\';\\n    }\\n\\n  } while (count != 0);\\n\\n  printf(\\"\\\\n\\\\nClearing file\\\\n\\");\\n  ftruncate(fd, 0);\\n  lockf(fd, F_ULOCK, 0);\\n  close(fd);\\n\\n  return 0;\\n}\\n```\\n\\n```C\\n#include <fcntl.h>\\n#include <stdio.h>\\n#include <stdlib.h>\\n#include <string.h>\\n#include <unistd.h>\\n\\nint BUFFER_SIZE = 256;\\n\\nchar* MESSAGE = \\"Hello world\\";\\n\\nint main(void) {\\n  int fd = open(\\"input.txt\\", O_RDWR);\\n  char *buffer = (char *)malloc(BUFFER_SIZE);\\n  int count = 0;\\n\\n  memset(buffer, 0, BUFFER_SIZE);\\n\\n  printf(\\"Waiting file to be empty\\\\n\\");\\n\\n  while (1) {\\n    lockf(fd, F_LOCK, 0);\\n    lseek(fd, 0, SEEK_SET);\\n    count = read(fd, buffer, BUFFER_SIZE);\\n\\n    if (count == 0) {\\n        break;\\n    }\\n\\n    lockf(fd, F_ULOCK, 0);\\n  }\\n\\n  printf(\\"Writing message\\\\n\\");\\n  ftruncate(fd, 0);\\n  lseek(fd, 0, SEEK_SET);\\n  write(fd, MESSAGE, strlen(MESSAGE));\\n  lockf(fd, F_ULOCK, 0);\\n  close(fd);\\n\\n  return 0;\\n}\\n```\\n\\n### Signal\\n*Enviar um signal ao processo/thread para uma fun\xe7\xe3o tratar*  \\n\\nDiferente de outros IPC, signal n\xe3o \xe9 focado em comunica\xe7\xe3o no n\xedvel de aplica\xe7\xe3o, ent\xe3o n\xe3o \xe9 muito utilizado para enviar dados, normalmente apenas para notificar outro processo da ocorr\xeancia de algo.  \\n\\nA melhor maneira de ter uma id\xe9ia da utilidade dos signals \xe9 vendo o `signal.h` do sistema operacional. No caso do Linux:  \\n\\n```C title=\\"bits/signum-generic.h\\"\\n/* We define here all the signal names listed in POSIX (1003.1-2008);\\n   as of 1003.1-2013, no additional signals have been added by POSIX.\\n   We also define here signal names that historically exist in every\\n   real-world POSIX variant (e.g. SIGWINCH).\\n\\n   Signals in the 1-15 range are defined with their historical numbers.\\n   For other signals, we use the BSD numbers.\\n   There are two unallocated signal numbers in the 1-31 range: 7 and 29.\\n   Signal number 0 is reserved for use as kill(pid, 0), to test whether\\n   a process exists without sending it a signal.  */\\n\\n/* ISO C99 signals.  */\\n#define\\tSIGINT\\t\\t2\\t/* Interactive attention signal.  */\\n#define\\tSIGILL\\t\\t4\\t/* Illegal instruction.  */\\n#define\\tSIGABRT\\t\\t6\\t/* Abnormal termination.  */\\n#define\\tSIGFPE\\t\\t8\\t/* Erroneous arithmetic operation.  */\\n#define\\tSIGSEGV\\t\\t11\\t/* Invalid access to storage.  */\\n#define\\tSIGTERM\\t\\t15\\t/* Termination request.  */\\n\\n/* Historical signals specified by POSIX. */\\n#define\\tSIGHUP\\t\\t1\\t/* Hangup.  */\\n#define\\tSIGQUIT\\t\\t3\\t/* Quit.  */\\n#define\\tSIGTRAP\\t\\t5\\t/* Trace/breakpoint trap.  */\\n#define\\tSIGKILL\\t\\t9\\t/* Killed.  */\\n#define\\tSIGPIPE\\t\\t13\\t/* Broken pipe.  */\\n#define\\tSIGALRM\\t\\t14\\t/* Alarm clock.  */\\n\\n/* Archaic names for compatibility.  */\\n#define\\tSIGIO\\t\\tSIGPOLL\\t/* I/O now possible (4.2 BSD).  */\\n#define\\tSIGIOT\\t\\tSIGABRT\\t/* IOT instruction, abort() on a PDP-11.  */\\n#define\\tSIGCLD\\t\\tSIGCHLD\\t/* Old System V name */\\n\\n/* Not all systems support real-time signals.  bits/signum.h indicates\\n   that they are supported by overriding __SIGRTMAX to a value greater\\n   than __SIGRTMIN.  These constants give the kernel-level hard limits,\\n   but some real-time signals may be used internally by glibc.  Do not\\n   use these constants in application code; use SIGRTMIN and SIGRTMAX\\n   (defined in signal.h) instead.  */\\n\\n/* Include system specific bits.  */\\n#include <bits/signum-arch.h>\\n```\\n\\n```C title=\\"bits/signum-arch.h\\"\\n/* Adjustments and additions to the signal number constants for\\n   most Linux systems.  */\\n\\n#define SIGSTKFLT\\t16\\t/* Stack fault (obsolete).  */\\n#define SIGPWR\\t\\t30\\t/* Power failure imminent.  */\\n\\n/* Historical signals specified by POSIX. */\\n#define SIGBUS\\t\\t 7\\t/* Bus error.  */\\n#define SIGSYS\\t\\t31\\t/* Bad system call.  */\\n\\n/* New(er) POSIX signals (1003.1-2008, 1003.1-2013).  */\\n#define SIGURG\\t\\t23\\t/* Urgent data is available at a socket.  */\\n#define SIGSTOP\\t\\t19\\t/* Stop, unblockable.  */\\n#define SIGTSTP\\t\\t20\\t/* Keyboard stop.  */\\n#define SIGCONT\\t\\t18\\t/* Continue.  */\\n#define SIGCHLD\\t\\t17\\t/* Child terminated or stopped.  */\\n#define SIGTTIN\\t\\t21\\t/* Background read from control terminal.  */\\n#define SIGTTOU\\t\\t22\\t/* Background write to control terminal.  */\\n#define SIGPOLL\\t\\t29\\t/* Pollable event occurred (System V).  */\\n#define SIGXFSZ\\t\\t25\\t/* File size limit exceeded.  */\\n#define SIGXCPU\\t\\t24\\t/* CPU time limit exceeded.  */\\n#define SIGVTALRM\\t26\\t/* Virtual timer expired.  */\\n#define SIGPROF\\t\\t27\\t/* Profiling timer expired.  */\\n#define SIGUSR1\\t\\t10\\t/* User-defined signal 1.  */\\n#define SIGUSR2\\t\\t12\\t/* User-defined signal 2.  */\\n\\n/* Nonstandard signals found in all modern POSIX systems\\n   (including both BSD and Linux).  */\\n#define SIGWINCH\\t28\\t/* Window size change (4.3 BSD, Sun).  */\\n```\\n\\nPor padr\xe3o alguns signals j\xe1 possuem comportamentos pr\xe9-definidos. Por exemplo: `SIGINT`.  \\n\\n:::info\\nQuando executando um programa pelo terminal, se voc\xea apertar `Ctrl+C` o signal enviado para o processo \xe9 o `SIGINT`.  \\n:::\\n\\nFica a sua escolha se voc\xea deseja sobreescrever o comportamento de um signal (caso ele tenha um comportamento padr\xe3o).  \\n\\n:::warning\\nExistem dois signals que n\xe3o podem ter o comportamento sobreescrito: `SIGKILL` e `SIGSTOP`.   \\n:::\\n\\nQuando um Signal \xe9 recebido pelo seu processo, o kernel pausa o fluxo normal do seu programa para executar a fun\xe7\xe3o que voc\xea definiu para aquele signal. Caso voc\xea n\xe3o tenha definido alguma fun\xe7\xe3o, o comportamento padr\xe3o \xe9 executado (o qual pode ser ignorar o signal).  \\n\\nSignals permitem que voc\xea envie um inteiro ou ponteiro junto deles.  \\n\\nNo caso de comunica\xe7\xe3o entre processos, apenas o inteiro costuma ser \xfatil pois n\xe3o podemos acessar o espa\xe7o de mem\xf3ria de outro processo.  \\n\\n:::note\\nPor\xe9m se estivermos utilizando para comunica\xe7\xe3o entre threads, enviar o endere\xe7o de um dado espec\xedfico \xe9 bem \xfatil.  \\n:::\\n\\nExistem dois signals reservados para o uso da aplica\xe7\xe3o/usu\xe1rio: `SIGUSR1` e `SIGUSR2`. Podemos utiliza-los para a comunica\xe7\xe3o de nossos processo.\\n\\nPor exemplo, enviar um n\xfamero entre processos:  \\n\\n- Processo 1\\n  - Exibe o PID no terminal\\n  - Espera em loop pelo signal com o n\xfamero\\n  - Encerrar ao receber o n\xfamero\\n- Processo 2\\n  - L\xea o PID passado por argumento\\n  - Envia o n\xfamero para o processo desejado utilizadno o signal `SIGUSR1`\\n\\n```C\\n#include <signal.h>\\n#include <stdbool.h>\\n#include <stdio.h>\\n#include <stdlib.h>\\n#include <unistd.h>\\n\\nbool loop = true;\\n\\n// Normally the function would only receive a number as paramter.\\n// But we setted flag SA_SIGINFO into our sigaction.\\nvoid on_user_signal(int signal_number, siginfo_t *signal_info, void *x) {\\n  printf(\\"Received signal: %d\\\\n\\", signal_number);\\n  printf(\\"Together with number: %d\\\\n\\", signal_info->si_value.sival_int);\\n\\n  loop = false;\\n}\\n\\nint main(void) {\\n  struct sigaction signal_action;\\n  signal_action.sa_flags = SA_SIGINFO;\\n  signal_action.sa_sigaction = on_user_signal;\\n\\n  // sigaction() is recommended nowadays instead of signal().\\n  sigaction(SIGUSR1, &signal_action, NULL);\\n\\n  printf(\\"My PID: %d\\\\n\\", getpid());\\n  printf(\\"Waiting signal\\\\n\\");\\n\\n  while (loop) {\\n  }\\n\\n  return 0;\\n}\\n```\\n\\n```C\\n#include <signal.h>\\n#include <stdio.h>\\n#include <stdlib.h>\\n\\nint NUMBER = 42;\\n\\nint main(int argc, char **args) {\\n  if (argc != 2) {\\n    printf(\\"Needs to pass PID through arguments\\\\n\\");\\n    return 1;\\n  }\\n\\n  union sigval signal_value = {NUMBER};\\n  int pid = atoi(args[1]);\\n\\n  printf(\\"Sending signal to PID: %d\\\\n\\", pid);\\n  printf(\\"Together with number: %d\\\\n\\", NUMBER);\\n  sigqueue(pid, SIGUSR1, signal_value);\\n\\n  return 0;\\n}\\n```\\n\\n### Pipe\\n*Ler e escrever no pipe de outro processo filho/pai*  \\n\\n:::warning\\nPara entender bem pipe, recomendo entender bem file descriptor (o que eu n\xe3o entendia muito bem).  \\n\\nRecomenda\xe7\xe3o: https://www.youtube.com/watch?v=rW_NV6rf0rM\\n:::\\n\\nO conceito de pipes \xe9 bem simples, voc\xea escreve em um lado do pipe e para algu\xe9m ler do outro lado dele.  \\n\\nPodemos criar um pipe com o comando `pipe()`:  \\n\\n```C\\n#include <stdio.h>\\n#include <unistd.h>\\n\\nint main(void) {\\n  int file_descriptors[2];\\n\\n  pipe(file_descriptors);\\n\\n  printf(\\"Pipe input: %d\\\\n\\", file_descriptors[0]);\\n  printf(\\"Pipe output: %d\\\\n\\", file_descriptors[1]);\\n\\n  return 0;\\n}\\n```\\n\\nO comando `pipe()` inseri dois file descriptors, um para a entrada do pipe e outro para a sa\xedda do pipe, no nosso array. O comando tamb\xe9m retorna -1 em caso de erro, mas eu irei ignorar tratamentos de erros nesses exemplos.  \\n\\n:::info\\nO que \xe9 um file descriptor? \xc9 um n\xfamero inteiro utilizado pelo seu processo para pedir ao sistema operacional por acesso a um arquivo. \xc9 preciso entender que quando voc\xea escreve/l\xea de um arquivo, voc\xea na verdade est\xe1 pedindo para o sistema operacional fazer isto para voc\xea.  \\n\\nO sistema operacional possue uma tabela com todos os files descriptors de cada processo (e outras informa\xe7\xf5es relacionadas ao arquivo).  \\n\\n| processo id | file descriptor | file position | ... |\\n| ---         | ---             | ---           | --- |\\n| 1034        | 3               | 0             | ... |\\n| 567         | 7               | 10            | ... |\\n| 3945        | 4               | 4959          | ... |\\n| 12034       | 3               | 283           | ... |\\n\\nEnt\xe3o toda vez que voc\xea deseja abrir um arquivo, o sistema operacional te entrega um file descriptor. Este file descriptor \xe9 como se fosse um ticket que permite voc\xea pedir ao sistema operacional por intera\xe7\xf5es com aquele arquivo (\\"Oi sistema operacional, eu gostaria de escrever no arquivo relacionado a este ticket\\").  \\n:::\\n\\nCome\xe7amos com o m\xednimo de IPC quando utilizando `pipe()` com `fork()`:  \\n\\n```C\\n#include <stdio.h>\\n#include <sys/wait.h>\\n#include <unistd.h>\\n\\nint main(void) {\\n  char message[3];\\n  int file_descriptors[2];\\n\\n  pipe(file_descriptors);\\n\\n  if (fork()) {\\n    // Parent\\n    wait(NULL);\\n    read(file_descriptors[0], message, 3);\\n    printf(\\"Message: %s\\\\n\\", message);\\n  } else {\\n    // Child\\n    write(file_descriptors[1], \\"hi\\", 3);\\n  }\\n\\n  return 0;\\n}\\n```\\n\\nCada processo possui seus pr\xf3prios file descriptors, que por sua vez levam a um arquivo/pipe/etc. Por\xe9m quando fazemos um `fork()`, nossas entradas na tabela de file descriptors tamb\xe9m \xe9 clonada.  \\n\\nPor exemplo, vamos supor que o ID do processo pai \xe9 1034 e o filho nasceu com o ID 1035. Quando o filho nasce, ele herda todos os files descriptors:  \\n\\n| processo id | file descriptor | file position | ... | leva ao pipe |\\n| ---         | ---             | ---           | --- | ---          |\\n| 1034        | 3               | 0             | ... | 1000         |\\n| 1035        | 3               | 0             | ... | 1000         |\\n\\nOu seja, o file descriptor com n\xfamero 3 do pai e do filho ir\xe3o levar ao mesmo arquivo/pipe/etc.  \\n\\nIsto n\xe3o quer dizer que todos os file descriptors futuros seram compartilhados! Por exemplo:  \\n\\n```C\\n#include <sys/wait.h>\\n#include <unistd.h>\\n\\nint main(void) {\\n  int file_descriptors[2];\\n  int more_file_descriptors[2];\\n\\n  pipe(file_descriptors);\\n\\n  if (fork()) {\\n    // Parent\\n    pipe(more_file_descriptors);\\n    wait(NULL);\\n  } else {\\n    // Child\\n    pipe(more_file_descriptors);\\n  }\\n\\n  return 0;\\n}\\n```\\n\\nAo chamar `pipe()` dentro do pai ou do filho, voc\xea est\xe1 pedindo para o sistema operacional criar um pipe para aquele processo. O pai e filho receberam pipes distintos embora possuam o mesmo file descriptor (justamente pois file descriptors s\xe3o identificadores \xfanicos do processo).  \\n\\n| processo id | file descriptor | file position | ... | leva ao pipe |\\n| ---         | ---             | ---           | --- | ---          |\\n| 1034        | 3               | 0             | ... | 1000         |\\n| 1034        | 4               | 0             | ... | 2000         |\\n| 1034        | 5               | 0             | ... | 2000         |\\n| 1035        | 3               | 0             | ... | 1000         |\\n| 1035        | 4               | 0             | ... | 3000         |\\n| 1035        | 5               | 0             | ... | 3000         |\\n\\n### Named Pipe (FIFO)\\n*Ler e escrever no pipe de outro processo*  \\n\\nA diferen\xe7a deste pipe para o anterior \xe9 que qualquer processo pode se ligar a ele, seja para escrever ou ler, pois ele \xe9 praticamente um arquivo no sistema.\\n\\nO comando utilizado para criar o este pipe \xe9 `mkfifo()` e da mesma maneira que arquivos tem permiss\xf5es... Voc\xea deve passar as permiss\xf5es do arquivo como par\xe2metro, no nosso caso irei passar `0666` (rw-rw-rw).  \\n\\nLembrando que um pipe s\xf3 \xe9 um pipe se tiver pelo menos um lado de entrada e outro de sa\xedda, ou seja, fun\xe7\xf5es de escrita/leitura do pipe ir\xe3o ficar travadas at\xe9 que o outro lado do pipe exista.  \\n\\nEnquanto n\xe3o tiver ningu\xe9m lendo do pipe, o comando `write()` ir\xe1 ficar em loop esperando algu\xe9m para ler.  \\nEnquanto n\xe3o tiver ningu\xe9m escrevendo no pipe, o comando `read()` ir\xe1 ficar em loop esperando algu\xe9m come\xe7ar a escrever.  \\n\\n- Processo 1\\n  - Tenta criar o named pipe com devidas permiss\xf5es\\n  - Abre o named pipe para escrita\\n  - Escreve no arquivo a mensagem\\n- Processo 2\\n  - Tenta criar o named pipe com devidas permiss\xf5es\\n  - Abre o named pipe para leitura\\n  - Le do arquivo a mensagem\\n\\n```C\\n#include <stdio.h>\\n#include <unistd.h>\\n#include <sys/types.h>\\n#include <sys/stat.h>\\n#include <fcntl.h>\\n\\nint main(void) {\\n  mkfifo(\\"pipefile\\", 0666);\\n\\n  int file_descriptor = open(\\"pipefile\\", O_WRONLY);\\n  write(file_descriptor, \\"hi\\", 3);\\n  printf(\\"Message sent\\\\n\\");\\n  \\n  return 0;\\n}\\n```\\n\\n```C\\n#include <stdio.h>\\n#include <unistd.h>\\n#include <sys/types.h>\\n#include <sys/stat.h>\\n#include <fcntl.h>\\n\\nint main(void) {\\n  char message[3];\\n\\n  mkfifo(\\"pipefile\\", 0666);\\n\\n  int file_descriptor = open(\\"pipefile\\", O_RDONLY);\\n  read(file_descriptor, &message, 3);\\n  printf(\\"Message: %s\\\\n\\", message);\\n  \\n  return 0;\\n}\\n```\\n\\n\xc9 poss\xedvel ter mais que um processo lendo do mesmo pipe mas \xe9 incerto de quem receber\xe1 o conte\xfado ou se dois processos ir\xe3o receber o mesmo conte\xfado.  \\n\\nTamb\xe9m \xe9 poss\xedvel n\xe3o ficar em loop esperando algu\xe9m come\xe7ar a ler/escrever do outro lado do pipe, basta fazer um *or* quando abrindo o pipe (`O_WRONLY | O_NDELAY` ou `O_RDONLY | O_NDELAY`).  \\n\\n:::info\\nOriginalmente chamado de FIFO pelo comportamento cl\xe1ssico [\\"first in, first out\\"](https://en.wikipedia.org/wiki/FIFO_(computing_and_electronics)), por\xe9m atualmente \xe9 mais conhecido pelo nome *named pipe* que deixa implicito que se comporta basicamente igual a um pipe.  \\n\\nOriginalmente criado utilizando a fun\xe7\xe3o `mknod()` e passando como argumento `S_IFIFO` para especificar o tipo de arquivo. Justamente por est\xe1 fun\xe7\xe3o suportar diversos tipos:  \\n\\n| #define  | value   | file type        |\\n| -------- | ------- | ---------------- |\\n| S_IFSOCK | 0140000 | socket           |\\n| S_IFLNK  | 0120000 | symbolic link    |\\n| S_IFREG  | 0100000 | regular file     |\\n| S_IFBLK  | 0060000 | block device     |\\n| S_IFDIR  | 0040000 | directory        |\\n| S_IFCHR  | 0020000 | character device |\\n| S_IFIFO  | 0010000 | FIFO             |\\n:::\\n\\n### Message Queue\\n*Armazenar dados na fila para outro processo retirar*\\n\\nA maior diferen\xe7a deste m\xe9todo para os anteriores \xe9 o foco em transfer\xeancia de dados estruturados em vez de inteiro/string, o que torna muito importante que o receptor conhe\xe7a o formato exato dos dados. O formato dos dados \xe9 bem simples:  \\n\\n```c\\nstruct message {\\n  long message_type;\\n  struct m {\\n    // Add as many fields you want here.\\n  } message;\\n}\\n```\\n\\nO **primeiro campo** da estrutura deve ser um `long` positivo e serve para o receptor conseguir filtrar pelas mensagens que deseja receber.  \\n\\nO receptor passa para a fila um valor e com isto a fila sabe qual mensagem pegar para ele:  \\n\\n| Valor  |                                                                                          | `if`                     |\\n| ------ | ---------------------------------------------------------------------------------------- | ------------------------ |\\n| 0      | Receptor quer a pr\xf3xima mensagem da fila, n\xe3o importa qual seja o tipo                   | `true`                   |\\n| > 0    | Receptor quer a pr\xf3xima mensagem da fila com aquele tipo                                 | `message_type == X`      |\\n| < 0    | Receptor quer a pr\xf3xima mensagem da fila com tipo menor ou igual ao absoluto deste valor | `message_type <= abs(X)` |\\n\\n:::danger\\nEu repito, o primeiro campo **deve** ser um n\xfamero POSITIVO.  \\n\\nMesmo que o receptor v\xe1 utilizar 0, por querer qualquer mensagem, voc\xea como emissor deve botar um n\xfamero positivo.  \\n\\nA fila n\xe3o permite que voc\xea bote mensagens com o primeiro campo zero...  \\n:::\\n\\nO **segundo campo** da estrutura pode ser qualquer tipo, pois no momento de inser\xe7\xe3o na fila voc\xea ir\xe1 informar o tamanho dos dados seguintes ao `long`.  \\n\\nIsto quer dizer que n\xf3s poderiamos estruturar de infinitas maneiras nossa mensagem:  \\n\\n```c\\nstruct message {\\n  long message_type;\\n  char data[10];    // 10 bytes\\n}\\n```\\n\\n```c\\nstruct message {\\n  long message_type;\\n  int data;         // 4 bytes\\n}\\n```\\n\\n```c\\nstruct message {\\n  long message_type;\\n  struct d {\\n    char name[10];  // 10 bytes\\n    int age;        // 4 bytes\\n  } data;           // total: 14 bytes\\n}\\n```\\n\\nPois podemos calcular o tamanho de qualquer dado/tipo com `sizeof`:  \\n\\n```c\\nchar data[10];\\n\\nsizeof(data);       // Option 1\\nsizeof(char) * 10;  // Option 2\\n```\\n\\n```c\\nint data;\\n\\nsizeof(data);       // Option 1\\nsizeof(int);        // Option 2\\n```\\n\\n```c\\nstruct d {\\n  char name[10];\\n  int age;\\n} data;\\n\\nsizeof(data);        // Option 1\\nsizeof(struct d);    // Option 2\\n```\\n\\nSe qualquer processo pode se conectar a uma fila, ent\xe3o \xe9 preciso evitar que processos esbarrem em filas de outros processos. Imagina se meu processo insere algum dado no formato X e outro processo insere na minha fila algum dado no formato Y... Quem ler dessa fila tera s\xe9rios erros.  \\n\\nPara evitar isto, uma fila \xe9 identificada por uma chave (do tipo `long`) que \xe9 gerada apartir de duas informa\xe7\xf5es:\\n- `pathname` que \xe9 um caminho para um arquivo que identifica essa aplica\xe7\xe3o\\n  - Normalmente o caminho esperado da aplica\xe7\xe3o: `/home/thiagola92/.local/bin/application`\\n  - O arquivo precisa existir, caso contr\xe1rio ir\xe1 falhar\\n- `proj_id` que \xe9 um inteiro (onde os 8 menores bits s\xe3o utilizados)\\n  - Normalmente pessoas botam uma letra qualquer: `\'A\'` ou `\'b\'`\\n\\nAs chances de duas aplica\xe7\xf5es formarem a mesma chave \xe9 bem baixo.  \\n\\nVamos aos c\xf3digos\\n\\n- Processo 1\\n  - Cria a message queue\\n  - Escreve mensagem na fila\\n- Processo 2\\n  - Acessa a message queue\\n  - Le mensagem da fila\\n  - Destroi a fila\\n\\n```C\\n#include <stdio.h>\\n#include <sys/ipc.h>\\n#include <sys/msg.h>\\n#include <sys/types.h>\\n\\nstruct message_data {\\n  int a;\\n  char b[256];\\n  float c;\\n};\\n\\nstruct message {\\n  long type;\\n  struct message_data data;\\n};\\n\\nint main(void) {\\n  size_t data_size = sizeof(struct message_data);\\n  struct message message = {\\n      1,\\n      {10, \\"example\\", 5.5},\\n  };\\n\\n  key_t key = ftok(\\"./send_msg.c\\", \'A\');\\n  int message_queue_id = msgget(key, 0666 | IPC_CREAT);\\n  msgsnd(message_queue_id, &message, data_size, 0);\\n\\n  return 0;\\n}\\n```\\n\\n```C\\n#include <stdio.h>\\n#include <sys/ipc.h>\\n#include <sys/msg.h>\\n#include <sys/types.h>\\n\\nstruct message_data {\\n  int a;\\n  char b[256];\\n  float c;\\n};\\n\\nstruct message {\\n  long type;\\n  struct message_data data;\\n};\\n\\nint main(void) {\\n  int data_size = sizeof(struct message_data);\\n  struct message msg;\\n\\n  key_t key = ftok(\\"./send_msg.c\\", \'A\');\\n  int msg_queue_id = msgget(key, 0666);\\n  msgrcv(msg_queue_id, &msg, data_size, 0, 0);\\n\\n  printf(\\"  a: %d\\\\n  b: %s\\\\n  c: %f\\", msg.data.a, msg.data.b, msg.data.c);\\n\\n  // Destroy message queue.\\n  msgctl(msg_queue_id, IPC_RMID, NULL);\\n\\n  return 0;\\n}\\n```\\n\\n\xc9 importante destroir a fila quando n\xe3o for mais utiliza-la, pois ela n\xe3o \xe9 destruida quando o seu processo encerra.  \\n\\n### Shared Memory\\n\\n### Socket\\n\\n## High Level\\nPor quest\xe3o de pregui\xe7a, n\xe3o vou escrever sobre outras maneiras como:  \\n\\n- Remote Procedure Call\\n- HTTP API\\n- WebSocket\\n\\n## References\\n- https://beej.us/guide/bgipc/\\n- https://en.wikipedia.org/wiki/Inter-process_communication\\n- https://www.youtube.com/watch?v=Y2mDwW2pMv4\\n- https://www.youtube.com/watch?v=83M5-NPDeWs\\n- https://man7.org/linux/man-pages/man2/sigaction.2.html\\n- https://man7.org/linux/man-pages/man3/sigqueue.3.html\\n- https://en.wikipedia.org/wiki/Signal_(IPC)\\n- https://en.wikipedia.org/wiki/Pipeline_(Unix)\\n- https://en.wikipedia.org/wiki/File_descriptor\\n- https://man7.org/linux/man-pages/man3/mkfifo.3.html\\n- https://man7.org/linux/man-pages/man2/mknod.2.html\\n- https://man7.org/linux/man-pages/man7/inode.7.html"},{"id":"/2025/03/13/memory-allocation","metadata":{"permalink":"/en/blog/2025/03/13/memory-allocation","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2025-03-13-memory-allocation/index.md","source":"@site/blog/2025-03-13-memory-allocation/index.md","title":"Memory Allocation","description":"Aloca\xe7\xe3o de mem\xf3ria se trata de pedir ao sistema operacional por espa\xe7o de mem\xf3ria RAM para utilizarmos durante a execu\xe7\xe3o do nosso programa.","date":"2025-03-13T00:00:00.000Z","formattedDate":"March 13, 2025","tags":[{"label":"memory","permalink":"/en/blog/tags/memory"},{"label":"allocation","permalink":"/en/blog/tags/allocation"},{"label":"free","permalink":"/en/blog/tags/free"},{"label":"referecing couting","permalink":"/en/blog/tags/referecing-couting"},{"label":"garbage collector","permalink":"/en/blog/tags/garbage-collector"},{"label":"ownership","permalink":"/en/blog/tags/ownership"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["memory","allocation","free","referecing couting","garbage collector","ownership"]},"unlisted":false,"prevItem":{"title":"IPC","permalink":"/en/blog/2025/03/14/IPC"},"nextItem":{"title":"Bubbletea and Bubbles","permalink":"/en/blog/2024/11/05/bubbles-and-bubbletea"}},"content":"Aloca\xe7\xe3o de mem\xf3ria se trata de pedir ao sistema operacional por espa\xe7o de mem\xf3ria RAM para utilizarmos durante a execu\xe7\xe3o do nosso programa.  \\n\\n:::note\\nN\xe3o confundir com dispositivos de armazenamentos como HDD e SSD, onde nossa intera\xe7\xe3o com eles customa ser por escrita e leitura de arquivos.  \\n:::\\n\\n## Static Allocation\\nSe refere a alocar espa\xe7o para todos os dados que j\xe1 se sabe que ser\xe3o necess\xe1rios desdo in\xedcio do seu programa.  \\n\\nO espa\xe7o necess\xe1rio \xe9 descoberto durante a compila\xe7\xe3o de um programa e armazenado em conjunto do bin\xe1rio para que j\xe1 seja carregada na mem\xf3ria na inicializa\xe7\xe3o do programa.  \\n\\nCompilador ir\xe1 identificar:\\n- Literais\\n- Vari\xe1veis est\xe1ticas/globais\\n- C\xf3digo de Fun\xe7\xf5es\\n\\nPegando o seguinte c\xf3digo como exemplo:  \\n\\n```C\\nstatic int executions = 0;\\n\\nvoid run(int p) {\\n    printf(\\"Running\\");\\n    executions += 1;\\n}\\n\\nint main(void) {\\n    run(1);\\n    run(5);\\n    run(10);\\n    return 0;\\n}\\n```\\n\\nPara que seu programe funcione, o compilador consegue identificar que ser\xe1 necess\xe1rio espa\xe7o para o literal `\\"Running\\"`, vari\xe1vel est\xe1tica `executions` e o c\xf3digo da fun\xe7\xe3o `run()`.  \\n\\nA mem\xf3ria alocada \xe9 separada em dois segmentos:\\n- Data Segment\\n    - Vari\xe1veis est\xe1ticas\\n- Text Segment\\n    - Literais\\n    - C\xf3digo de fun\xe7\xf5es\\n\\nData segments funcionam como espa\xe7o de mem\xf3ria normal, onde podem ter seus valores atualizado/modificados.  \\n\\nText segments s\xe3o armazenados uma vez e apenas utilizados para leitura durante a execu\xe7\xe3o do seu programa.  \\n\\n---\\n\\n**Vari\xe1veis est\xe1ticas** caem na primeira categoria pois a qualquer momento podemos fazer algo como `executions += 1`.  \\n\\n**Literais** caem na segunda pois sempre precisaremos daquele exato literal quando o c\xf3digo passar por aquela linha de c\xf3digo `printf(\\"Running\\")`, ent\xe3o n\xe3o queremos que ele seja modificado de maneira nenhuma.  \\n\\n**C\xf3digo de fun\xe7\xf5es** s\xe3o somente leitura pois estamos falando da base para se criar fun\xe7\xf5es conforme o necess\xe1rio. O que eu quero dizer com isto? Toda vez que executarmos uma fun\xe7\xe3o, utilizaremos o c\xf3digo da fun\xe7\xe3o como base para alocar mem\xf3ria para aquela execu\xe7\xe3o da fun\xe7\xe3o!  \\n\\n:::info\\n> Por que n\xe3o fazer com que todas as chamadas da fun\xe7\xf5es utilizem o mesmo espa\xe7o?  \\n\\nCada chamada pode ter comportamento diferente por causa de par\xe2metros ou fatores externos. Isto quer dizer arriscariamos colis\xe3o entre as execu\xe7\xf5es, o que poderia trazer resultados diferentes.  \\n\\nImagine que seu c\xf3digo possue uma fun\xe7\xe3o recursiva, agora voc\xea corre o risco das chamadas a ela mesma alterarem uma vari\xe1vel que era essencial dela.  \\n:::\\n\\n## Stack Allocation\\nSe refere a alocar espa\xe7o na **Stack**.  \\n\\nNo in\xedcio do programa, um espa\xe7o na mem\xf3ria \xe9 reservado para dados tempor\xe1rios ou curto tempo de vida, este espa\xe7o reservado \xe9 chamado de Stack. Utilizar mais espa\xe7o do que o reservado ir\xe1 causar **Stack Overflow**.  \\n\\nIsto \xe9 necess\xe1rio pois nosso c\xf3digo pode se ramificar de diversas maneiras, tornando imposs\xedvel descobrir toda a mem\xf3ria que ser\xe1 utilizada durante a etapa de compila\xe7\xe3o.  \\n\\nPegando o seguinte c\xf3digo como exemplo:  \\n\\n```C\\nint func1(int a, int b) {\\n    return a + b;\\n}\\n\\nint func2(int a, int b) {\\n    int x = a * 3;\\n    int y = b * 2;\\n    return x + y;\\n}\\n\\nint run(int a, int b) {\\n    if(a > 10) {\\n        return func1();\\n    } else {\\n        return func2();\\n    }\\n}\\n```\\n\\nQuando uma fun\xe7\xe3o \xe9 chamada, o programa insere na Stack vari\xe1veis daquela fun\xe7\xe3o.  \\n\\nNo caso da `func1()`: `a`, `b`.  \\nNo caso da `func2()`: `a`, `b`, `x`, `y`.  \\n\\nAo sair da fun\xe7\xe3o, o programa remove esses valores da Stack.  \\n\\n\xc9 importante notar que como o espa\xe7o da Stack j\xe1 foi alocada no in\xedcio do programa, inserir e remover da Stack s\xe3o opera\xe7\xf5es r\xe1pidas.  \\n\\nQuando CPUs precisam de dados da mem\xf3ria RAM, elas pegam um bloco de dados de cada vez. O ideal \xe9 que nessa pegada j\xe1 tivesse tudo que a CPU precisaria, para ajudar nisto Stacks seguem o modelo (LIFO, *last-in, first-out*).  \\n\\nPegando a `func2()` como exemplo:  \\n\\n| Stack |\\n| ----- |\\n| `a` |\\n| `b` |\\n| `x` |\\n| `y` |\\n\\nPodemos notar que inserimos na stack na ordem em que encontramos as vari\xe1veis, justamente para quando a CPU pegar um bloco de mem\xf3ria a chance de pegar tudo aumentar.  \\n\\nPor outro lado, note que essa arquitetura impede que nossas vari\xe1veis possam crescer de tamanho (`b` n\xe3o poderia crescer de tamanho pois o espa\xe7o seguinte j\xe1 est\xe1 reservado por `x`), por isto os valores inseridos na Stack precisam ter tamanho **fixo**.  \\n\\n## Explicit Memory Management\\nSe refere a alocar espa\xe7o na **Heap**.  \\n\\nExistem casos onde precisamos que a mem\xf3ria possa crescer ou diminuir tamanho, justamente pois n\xe3o temos como saber o quanta mem\xf3ria ser\xe1 necess\xe1ria (e armazenar toda a mem\xf3ria RAM para si mesmo seria rude).  \\n\\n\xc9 importante notar que o sistema operacional \xe9 respons\xe1vel por gerenciar a mem\xf3ria, ent\xe3o precisamos pedir a ele por espa\xe7o de mem\xf3ria RAM para utilizar.  \\n\\nPor exemplo, note como utilizamos a fun\xe7\xe3o `malloc()` para pedir ao sistema operacional por espa\xe7o para 3 inteiros:  \\n\\n```C\\nint run() {\\n    int *v = (int*)malloc(sizeof(int) * 3);\\n    v[0] = 10;\\n    v[1] = 100;\\n    v[2] = 1000;\\n    free(v);\\n\\n    return 0;\\n}\\n```\\n\\nFazer uma requisi\xe7\xe3o por N espa\xe7os de mem\xf3ria ao sistema operacional, nos garante N espa\xe7o de mem\xf3ria, ou seja, podemos receber mais espa\xe7o de mem\xf3ria que o necess\xe1rio (estou ignorando o caso onde a mem\xf3ria RAM est\xe1 cheia).  \\n\\nEste comportamento tem como objeto minimizar a quantidade de requisi\xe7\xf5es feitas ao sistema operacional por mem\xf3ria, pois estas requisi\xe7\xf5es custam bastante tempo.  \\n\\nVamos pegar outro exemplo:  \\n\\n```C\\nint run() {\\n    int *v = (int*)malloc(sizeof(int) * 3);\\n    v[0] = 10;\\n    v[1] = 100;\\n    v[2] = 1000;\\n    v[3] = 10000; // New line.\\n    free(v);\\n\\n    return 0;\\n}\\n```\\n\\nExiste a chance deste c\xf3digo dar erro e a chance de n\xe3o dar, tudo depende de quanta mem\xf3ria RAM o sistema operacional nos deu. Se ele tiver nos dado exatamente 3, um erro de **Segmentation fault** vai aparecer pois o sistema operacional n\xe3o nos permite acessar mem\xf3ria RAM que ele n\xe3o nos entregou.  \\n\\nPor outro lado, grande chance de n\xe3o dar erro pois sistema operacional costumam enviar bem mais que o necess\xe1rio. O seguinte c\xf3digo tem bem mais chance de dar erro:  \\n\\n```C\\nint run() {\\n    int *v = (int*)malloc(sizeof(int) * 3);\\n    v[0] = 10;\\n    v[1] = 100;\\n    v[2] = 1000;\\n    v[3] = 10000;\\n    v[100000] = 100000; // New line.\\n    free(v);\\n\\n    return 0;\\n}\\n```\\n\\nImportante notar que `v` cont\xe9m o endere\xe7o da mem\xf3ria RAM requisitada ao sistema operacional (o endere\xe7o na Heap), por\xe9m o valor de `v`, o endere\xe7o` \xe9 armazenado na Stack pois \xe9 uma espa\xe7o de mem\xf3ria fixo (um endere\xe7o tem um tamanho fixo de mem\xf3ria).  \\n\\nO grande problema que aparece com o uso da Heap \xe9 garantir que o seu programa libere a mem\xf3ria obtida, pois \xe9 bem comum de usu\xe1rios da linguagem esquecerem de devolver a mem\xf3ria (`free()`).  \\n\\nPara evitar este tipo de problema, algumas t\xe9cnicas para ger\xeanciar mem\xf3ria foram criados:  \\n\\n- Garbage Collection\\n- Reference Counting\\n- Ownership Model\\n\\n## Garbage Collection\\n\xc9 uma t\xe9cnica onde toda a responsabilidade de alocar e liberar mem\xf3ria (`malloc()` e `free()`) \xe9 passada ao **Garbage Collector**, onde ele deve conseguir detectar que a mem\xf3ria n\xe3o est\xe1 mais sendo usada e libera-la.  \\n\\n:::info\\nA requisi\xe7\xe3o de mem\xf3ria (`malloc()`) sempre \xe9 feita pelo usu\xe1rio, mesmo em linguagens que possuem Garbage Collector embutido.  \\n\\nPode n\xe3o ser t\xe3o claro notar estes pedidos de aloca\xe7\xe3o:  \\n\\n- Python\\n    - `example = []`\\n- GDScript\\n    - `var example = []`\\n- Java\\n    - `Obj example = new ArrayList<Obj>();`\\n:::\\n\\n\xc9 poss\xedvel implementar um Garbage Collector em linguagens que n\xe3o possuem um embutido, por\xe9m por n\xe3o ser embutido, bibliotecas de terceiros podem acabar por n\xe3o utiliza-lo e vazamento de mem\xf3ria pode acontecer de qualquer maneira.  \\n\\n:::note\\nPor exemplo, para a linguagem de programa\xe7\xe3o C podemos encontrar este pequeno projeto:  \\nhttps://github.com/orangeduck/tgc  \\n:::\\n\\nA grande desvantagem desta t\xe9cnica \xe9 que pausas no seu programa precisam ser feitas para que o Garbage Collector tenha tempo de an\xe1lisar mem\xf3rias que n\xe3o est\xe3o mais em uso.  \\n\\n## Reference Counting\\nNesta t\xe9cnica, toda aloca\xe7\xe3o de mem\xf3ria inclue um contador para sabermos quantas vezes aquele espa\xe7o alocado est\xe1 sendo referenciado. Quando o contador chega a zero, uma chamada para liberar a mem\xf3ria \xe9 feita (`free()`).  \\n\\nA quantidade de refer\xeancias aumenta a qualquer momento que algu\xe9m aponta para aquele espa\xe7o de mem\xf3ria. Por exemplo:  \\n\\n```GDScript\\nfunc _ready() -> void:\\n\\tvar x = RefCounted.new()\\n\\tvar y = x\\n\\tvar z = [x]\\n\\tprint(x.get_reference_count()) # Three\\n\\ty = null\\n\\tz = []\\n\\tprint(x.get_reference_count()) # One\\n```\\n\\nCada vez que algu\xe9m refer\xeancia o espa\xe7o de mem\xf3ria alocado por pedido da segunda linha, o contador cresce.  \\n\\n```GDScript\\nfunc _ready() -> void:\\n\\tvar x = RefCounted.new()\\n\\tvar y = x\\n\\tvar z = [x]\\n\\tprint(x.get_reference_count()) # Three\\n\\ty = null\\n\\tz = []\\n\\tprint(x.get_reference_count()) # One\\n```\\n\\nCada vez que algu\xe9m para de refer\xeanciar aquele espa\xe7o de mem\xf3ria, o contador desce.  \\n\\n```GDScript\\nfunc _ready() -> void:\\n\\tvar x = RefCounted.new()\\n\\tvar y = x\\n\\tvar z = [x]\\n\\tprint(x.get_reference_count()) # Three\\n\\ty = x\\n\\tx = null\\n\\tprint(y.get_reference_count()) # One\\n\\ty = x\\n\\tx = null\\n\\tprint(y.get_reference_count()) # One\\n```\\n\\n\xc9 importante notar que o contador n\xe3o existe com a vari\xe1vel inicial, no caso `x`, ent\xe3o a qualquer momento podemos fazer com que a vari\xe1vel inicial deixe de refer\xeanciar e continuaremos sem problemas de usar aquela mem\xf3ria!  \\n\\nO lado negativo \xe9 que a cada refer\xeancia a est\xe1 vari\xe1vel, precisamos aumentar/diminuir o contador. O que pode ser custoso quando tem que se fazer isso para **toda** mem\xf3ria da Heap.  \\n\\n:::warn\\nA t\xe9cnica mais simples de reference counting tamb\xe9m n\xe3o \xe9 bom em lidar com **reference cycles**. Quando refer\xeancias apontam entre sim, o que faz com que os contadores nunca cheguem a zero.  \\n:::\\n\\n## Ownership Model\\nDiferente das maneiras anteriores onde o programador n\xe3o precisa pensar sobre a libera\xe7\xe3o de mem\xf3ria, neste caso temos que seguir regras que no final ajudam o compilador a determinar quando que a mem\xf3ria deve ser liberada.  \\n\\nComo isto \xe9 feito durante a etapa de compila\xe7\xe3o, a execu\xe7\xe3o do seu software n\xe3o sofre perda de desempenho e qualquer erro relacionado ao assunto \xe9 pego durante a compila\xe7\xe3o.  \\n\\nA documenta\xe7\xe3o da linguagem Rust deixa claro as regras:\\n\\n- Cada valor possue um dono\\n- Valores apenas podem possuir um dono\\n- Quando o dono sai do escopo, o valor \xe9 liberado\\n\\n:::info\\nA primeira regra parece ser apenas uma introdu\xe7\xe3o de que existe o conceito de dono.  \\nA segunda \xe9 para deixar claro que um valor n\xe3o pode ter m\xfaltiplos donos.  \\nA terceira nos deixa claro quando o compilador ir\xe1 adicionar a libera\xe7\xe3o de mem\xf3ria.  \\n:::\\n\\n## References\\n- https://en.wikipedia.org/wiki/Memory_management\\n- https://en.wikipedia.org/wiki/Stack-based_memory_allocation\\n- https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)\\n- https://en.wikipedia.org/wiki/Reference_counting\\n- https://www.youtube.com/watch?v=N3o5yHYLviQ\\n- https://www.youtube.com/watch?v=ioJkA7Mw2-U\\n- https://doc.rust-lang.org/book/ch04-01-what-is-ownership.html"},{"id":"/2024/11/05/bubbles-and-bubbletea","metadata":{"permalink":"/en/blog/2024/11/05/bubbles-and-bubbletea","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-11-05-bubbles-and-bubbletea/index.md","source":"@site/blog/2024-11-05-bubbles-and-bubbletea/index.md","title":"Bubbletea and Bubbles","description":"The Elm Architecture","date":"2024-11-05T00:00:00.000Z","formattedDate":"November 5, 2024","tags":[{"label":"bubbles","permalink":"/en/blog/tags/bubbles"},{"label":"bubbletea","permalink":"/en/blog/tags/bubbletea"},{"label":"go","permalink":"/en/blog/tags/go"},{"label":"golang","permalink":"/en/blog/tags/golang"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["bubbles","bubbletea","go","golang"]},"unlisted":false,"prevItem":{"title":"Memory Allocation","permalink":"/en/blog/2025/03/13/memory-allocation"},"nextItem":{"title":"Godot GUI Tips","permalink":"/en/blog/2024/10/26/godot-gui-tips"}},"content":"## The Elm Architecture\\n*(MVU, Model-View-Update)*  \\n\\nA arquitetura se resume a 3 partes:\\n- **Model**: Conjuntos de dados sobre o estado da aplica\xe7\xe3o\\n- **View**: Converte os dados do model para algo visual\\n- **Update**: Reage a atualiza\xe7\xf5es para atualizar os dados do model\\n\\nSeja qual for a sua aplica\xe7\xe3o (CLI, TUI, GUI, ...), ela \xe9 respons\xe1vel por receber o que o usu\xe1rio deve visualizar e por notificar atualiza\xe7\xf5es vindas do usu\xe1rio:  \\n\\n![MVU](mvu.svg)  \\n\\n\\n## Bubbletea\\n\xc9 respons\xe1vel por rodar em loop a arquitetura Elm. Todo o c\xf3digo para isto se resume a:  \\n\\n```go\\npackage main\\n\\nimport tea \\"github.com/charmbracelet/bubbletea\\"\\n\\nfunc main() {\\n    program := tea.NewProgram(\\n        MyStruct{} // Here you pass your model.\\n    )\\n\\n    _, err := program.Run()\\n\\n    if err != nil {\\n        print(err.Error())\\n    }\\n}\\n```\\n\\nEntenda que **Model** \xe9 terminologia para representar uma cole\xe7\xe3o de dados e \xe9 por isto que **Bubbletea** utiliza structs para representar models.  \\n\\n### Models Structure\\nModels dentro do Bubbletea devem seguir a seguinte estrutura:  \\n\\n```go\\ntype MyStruct struct {\\n    // Fields.\\n}\\n\\nfunc (m MyStruct) Init() tea.Cmd {\\n    // Run on initialization.\\n}\\n\\nfunc (m MyStruct) Update(msg tea.Msg) (tea.Model, tea.Cmd) {\\n    // Process a message.\\n}\\n\\nfunc (m MyStruct) View() string {\\n    // Write to screen.\\n}\\n```\\n\\nPodemos ver que \xe9 dividido em 4 partes:  \\n- Uma `struct` respons\xe1vel por representar o **Model** da arquitetura Elm\\n- Um m\xe9todo `Init()` \xfanico da estrutura bubbletea\\n- Um m\xe9todo `Update()` respons\xe1vel por representar o **Update** da arquitetura Elm\\n- Um m\xe9todo `View()` respons\xe1vel por representar o **View** da arquitetura Elm\\n\\n:::info\\nEm muitos tutoriais, pessoas tamb\xe9m incluem uma fun\xe7\xe3o respons\xe1vel por criar o model e configura-lo com os padr\xf5es desejados:  \\n\\n```go\\nfunc newMyStruct() MyStruct {\\n    return MyStruct{\\n        // Set default fields values here\\n    }\\n}\\n\\nfunc main() {\\n    program := tea.NewProgram(newMyStruct()) // Use here\\n}\\n```\\n:::\\n\\n### Keys\\nTeclas pressionadas no teclado v\xe3o para o mesmo lugar que todas intera\xe7\xf5es (`Update()`), l\xe1 resta a voc\xea reconhecer como sendo um pressionamento de tecla.  \\n\\n```go\\nfunc (m MyStruct) Update(msg tea.Msg) (tea.Model, tea.Cmd) {\\n    switch msg := msg.(type) {\\n    case tea.KeyMsg:\\n        if msg.String() == \\"ctrl+c\\" {\\n            return m, tea.Quit\\n        }\\n    }\\n\\n    return m, nil\\n}\\n```\\n\\nNo exemplo podemos ver que possuimos um `switch` para nos ajudar a identificar o tipo da mensagem, isso \xe9 necess\xe1rio pois a mensagem pode ter qualquer tipo (n\xe3o necessariamente uma mensagem de pressionamento de tecla).  \\n\\nMensagens de teclas dentro do Bubbletea podem ser convertido para strings, o que nos da uma string de f\xe1cil entedimento por\xe9m nem sempre uma a\xe7\xe3o est\xe1 ligada a apenas um atalho, ent\xe3o pode ser \xfatil sabermos como ligar diversos atalhos a uma a\xe7\xe3o:  \\n\\n```go\\nvar quit = key.NewBinding(\\n    key.WithKeys(\\"ctrl+c\\", \\"ctrl+q\\", \\"q\\")\\n)\\n\\n// ...\\n\\nfunc (m MyStruct) Update(msg tea.Msg) (tea.Model, tea.Cmd) {\\n    switch msg := msg.(type) {\\n    case tea.KeyMsg:\\n        switch {\\n        case key.Matches(msg, quit):\\n            return m, tea.Quit\\n        }\\n    }\\n\\n    return m, nil\\n}\\n```\\n\\n:::tip\\nEm vez de criar uma vari\xe1vel para cada atalho, voc\xea pode agrupar todas em uma que simbolize todo o mapeamento dos atalhos:  \\n\\n```go\\nvar keyMap struct {\\n    Up   key.Binding\\n    Down key.Binding\\n    Quit key.Binding\\n}\\n\\nvar keys = keyMap{\\n    Up: key.NewBinding(\\n        key.WithKeys(\\"up\\", \\"w\\"),\\n    ),\\n    Down: key.NewBinding(\\n        key.WithKeys(\\"down\\", \\"s\\"),\\n    ),\\n    Quit: key.NewBinding(\\n        key.WithKeys(\\"ctrl+c\\", \\"ctrl+q\\", \\"q\\"),\\n    ),\\n}\\n\\n// ...\\n\\nfunc (m MyStruct) Update(msg tea.Msg) (tea.Model, tea.Cmd) {\\n    switch msg := msg.(type) {\\n    case tea.KeyMsg:\\n        switch {\\n        case key.Matches(msg, keys.Quit):\\n            return m, tea.Quit\\n        case key.Matches(msg, keys.Down):\\n            // Do something\\n        case key.Matches(msg, keys.Up):\\n            // Do something\\n    }\\n\\n    return m, nil\\n}\\n```\\n:::\\n\\n## Bubbles\\n\xc9 uma cole\xe7\xe3o de models com parte da l\xf3gica j\xe1 preparada.  \\n\\nOlhando a assinatura das fun\xe7\xf5es e structs do [spinner](https://github.com/charmbracelet/bubbles/blob/master/spinner/spinner.go), podemos ver que ele implementa:  \\n\\n- **Model**: `type Model struct`\\n- **Update**: `func (m Model) Update(msg tea.Msg) (Model, tea.Cmd)`\\n- **View**: `func (m Model) View() string`\\n\\nEle implementa quase todas as partes necess\xe1rias para ser executado diretamente no Bubbletea, a \xfanica parte que est\xe1 faltando \xe9 `Init()`. Por que isso?  \\n\\nAcontece que spinner n\xe3o tem inten\xe7\xe3o de ser um modelo perfeito para ser utilizado diretamente pelo Bubbletea, pois n\xe3o faz sentido criar um programa Bubbletea que apenas exibe um spinner.  \\n\\nPor\xe9m podemos criar nosso pr\xf3prio model que utiliza este spinner:  \\n\\n```go\\ntype MyStruct struct {\\n\\tspinner spinner.Model\\n}\\n\\nfunc newSpinner() MyStruct {\\n\\treturn MyStruct{\\n\\t\\tspinner: spinner.New(),\\n\\t}\\n}\\n\\nfunc (m MyStruct) Init() tea.Cmd {\\n\\treturn m.spinner.Tick // spinner requires this to start\\n}\\n\\nfunc (m MyStruct) Update(msg tea.Msg) (tea.Model, tea.Cmd) {\\n\\tvar cmd tea.Cmd\\n\\n\\tswitch msg := msg.(type) {\\n\\tcase tea.KeyMsg:\\n\\t\\tif msg.String() == \\"ctrl+c\\" {\\n\\t\\t\\treturn m, tea.Quit\\n\\t\\t}\\n\\tdefault:\\n\\t\\tm.spinner, cmd = m.spinner.Update(msg)\\n\\t}\\n\\n\\treturn m, cmd\\n}\\n\\nfunc (m MyStruct) View() string {\\n\\treturn m.spinner.View()\\n}\\n\\nfunc main() {\\n    program := tea.NewProgram(\\n        MyStruct{\\n            spinner: spinner.New(),\\n        }\\n    )\\n\\n    _, err := program.Run()\\n\\n    if err != nil {\\n        print(err.Error())\\n    }\\n}\\n```\\n\\nNote como basicamente reutilizamos tudo do spinner para fazer nosso model:  \\n- Nossa `struct` \xe9 o spinner sozinho\\n- Nossa `View()` apenas chama a `View()` do spinner\\n- Nosso `Update()` chama `Update()` do spinner e detecta se o atalho para sair foi pressionado\\n\\nComo podemos ver os componentes do Bubbles foram feitos para serem utilizados pelos seus models (e n\xe3o pelo Bubbletea diretamente). Imagine o susto de algu\xe9m executando o spinner diretamente e ele nunca fechando pois ningu\xe9m processa `ctrl+c` para sair.  \\n\\n## References\\n- https://guide.elm-lang.org/architecture/\\n- https://github.com/charmbracelet/bubbletea\\n- https://github.com/charmbracelet/bubbles\\n- https://www.youtube.com/watch?v=5lxQJS3b38w\\n- https://www.youtube.com/watch?v=ERaZi0YvBRs"},{"id":"/2024/10/26/godot-gui-tips","metadata":{"permalink":"/en/blog/2024/10/26/godot-gui-tips","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-10-26-godot-gui-tips/index.md","source":"@site/blog/2024-10-26-godot-gui-tips/index.md","title":"Godot GUI Tips","description":"1 - Performance","date":"2024-10-26T00:00:00.000Z","formattedDate":"October 26, 2024","tags":[{"label":"godot","permalink":"/en/blog/tags/godot"},{"label":"gui","permalink":"/en/blog/tags/gui"},{"label":"tips","permalink":"/en/blog/tags/tips"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["godot","gui","tips"]},"unlisted":false,"prevItem":{"title":"Bubbletea and Bubbles","permalink":"/en/blog/2024/11/05/bubbles-and-bubbletea"},"nextItem":{"title":"Web Crawler","permalink":"/en/blog/2024/10/10/web-crawler"}},"content":"## 1 - Performance\\nMude o modo de renderiza\xe7\xe3o para *Compatibility*, n\xe3o \xe9 como se voc\xea fosse precisar de qualquer renderiza\xe7\xe3o al\xe9m do b\xe1sico para desenhar uma janela na tela.  \\n\\n![Compatibility](compatibility.png)  \\n\\nAtive *Application > Run > Low Processor Mode* para que tenha um delay entre as renderiza\xe7\xf5es da janela e apenas renderizar se alguma mudan\xe7a for detectada. Em jogos a tela muda constantemente, ent\xe3o esse tipo de delay e valida\xe7\xe3o s\xf3 atrapalham mas como estamos falando de GUI que altera bem menos, isto ajuda muito.  \\n\\n![Low Processor Mode](low_processor_mode.png)  \\n\\n## 2 - Window Title Bar\\nPor padr\xe3o o nosso sistema operacional nos provid\xeancia o gr\xe1fico b\xe1sico de uma janela e nos deixa respons\xe1vel por desenhar o conte\xfado dentro dela.  \\n\\n![Not borderless](not_borderless.png)  \\n\\nO lado positivo \xe9 que isto nos provid\xeancia o b\xe1sico de uma janela, como aqueles 3 bot\xf5es no topo da direita (minimizar, m\xe1ximizar, fechar, ...).  \\n\\nPor\xe9m note que, dependendo do sistema operacional, mais op\xe7\xf5es podem estar dispon\xedveis! Se eu clicar com o bot\xe3o direito na title bar do topo, podemos ver mais a\xe7\xf5es:  \\n\\n![Not borderless again](not_borderless_again.png)  \\n\\nSe ativarmos *Display > Window > Size > Borderless*, o sistema operacional deixar\xe1 de adicionar a title bar no topo:  \\n\\n![Borderless](borderless.png)  \\n\\nBasicamente ele est\xe1 assumindo que voc\xea mesmo ir\xe1 desenhar a title bar no topo caso queira (normalmente em jogos isto n\xe3o faz sentido).  \\n\\n:::info\\nBorderless ou n\xe3o, ainda se trata de uma janela no seu sistema operacional ent\xe3o alguns atalhos podem continuar funcionando (`Super + Up/Down/Left/Right`, `Alt + Space`).  \\n:::\\n\\n## 3 - Multiple Windows\\nJanelas abertas s\xe3o tratadas como processos filhos, ou seja, o encerramento de uma janela pai ir\xe1 encerrar os filhos.  \\n\\nCaso queiramos ter m\xfaltiplas janelas id\xeanticas, igual a editores de textos e navegadores, precisamos ter certeza que a janela principal (processo inicial) n\xe3o possa ser encerrado da maneira padr\xe3o (clickando no bot\xe3o de fechar).  \\n\\nPodemos resolver isto escondendo a janela principal e apenas exibindo as subwindows.  \\n\\nAtive *Display > Window > Size > Transparent* para que o fundo cinza padr\xe3o n\xe3o seja renderizado durante a execu\xe7\xe3o.  \\n\\n![Transparent background](transparent.png)  \\n\\n:::note\\nAcredito que a cor padr\xe3o do canvas \xe9 preto, por isto deixar de pintar vai deixar a janela preta\\n:::\\n\\nAtive *Display > Window > Per Pixel Transparency > Allowed* para que o fundo realmente seja transparente (caso contr\xe1rio vai ficar o canvas preto).  \\n\\n![Per Pixel Transparency](per_pixel_transparency.png)  \\n\\n:::warning\\nExiste uma configura\xe7\xe3o que eu ainda n\xe3o entendi a necessidade: *Rendering > Viewport > Transparent Background*.  \\n\\nMas a documenta\xe7\xe3o menciona ela como necess\xe1ria.  \\n:::\\n\\n**Como visto na sess\xe3o anterior...**  \\n\\nAtive Display > Window > Size > Borderless para o sistema operacional deixar\xe1 de adicionar a title bar no topo.  \\n\\n![Invisible](invisible.png)  \\n\\nEmbora ela esteja transparente, ela ainda \xe9 uma janela como as outras. Podemos conferir que ela ainda aparece quando apertando Alt+Tab (ou apenas apertando Alt no Ubuntu).  \\n\\n![Window invisible but exist](window_invisible.png)  \\n\\nAgora n\xf3s temos que tratar inputs!\\n\\n**Primeiro** podemos notar que se est\xe1 janela for posta na frente de outra, ela n\xe3o ir\xe1 deixar de consumir os seus clicks (mesmo que voc\xea queira selecionar algo na janela de tr\xe1s).  \\n\\nPara resolver isto podemos alterar janela raiz (criada quando seu programa inicia) para repassar adiante clicks do mouse.  \\n\\n```gdscript\\nfunc _ready() -> void:\\n\\tget_window().mouse_passthrough = true\\n```\\n\\n**Segundo** podemos notar que ela ainda est\xe1 processando teclas (pode ser selecionada pelo `Alt + Tab`, fechada por `Alt + F4`, maximizada com `Super + Up`, etc).  \\n\\nAtive *Display > Window > Size > No Focus* para que ela n\xe3o possa ser focada (at\xe9 por atalhos).  \\n\\n![Process invisible](process_invisible.png)  \\n\\nLembre que fechar o processo pai fecha todos os filhos, por\xe9m fechar todos os filhos n\xe3o fecha o pai.\\n\\nIsto quer dizer que o processo pai continua rodando mesmo se o usu\xe1rio fechar todas as janelas filhas. Agora o usu\xe1rio apenas conseguiria encerrar o programa pelo \\"gerenciador de tarefas\\" ou terminal.  \\n\\nPara tratar isto podemos ligar um signal a um m\xe9todo respons\xe1vel por notar quando a quantidade de filhos mudar e encerrar o programa se necess\xe1rio.  \\n\\n![Signal child_order_changed](child_order_changed.png)\\n\\n```gdscript\\nfunc _on_child_order_changed() -> void:\\n\\tif get_child_count() == 0:\\n\\t\\tget_tree().quit()\\n```\\n\\n:::note\\nIsto \xe9 apenas uma maneira de tratar!  \\n\\nN\xf3s poderiamos checar a cada frame se todas as janelas foram fechadas, poderiamos fazer os filhos avisarem o pai quando fossem encerrados, etc.  \\n:::\\n\\nAgora precisamos entender que cada janela aberta \xe9 uma subwindow. Existem dois tipos de subwindows:\\n1. Subwindows\\n\\t- Quando sua janela pede ao sistema operacional para criar uma janela filha dela\\n\\t- Sua janela filha vai possuir a title bar padr\xe3o de janelas\\n2. Embed subwindows\\n\\t- Quando sua janela simula outra janela dentro dela mesmo\\n\\t- Isto impossibilita ela de ser mover para fora da janela pai\\n\\nSe estamos tratando de uma aplica\xe7\xe3o que possui m\xfaltiplas janelas, precisamos que ela se mova para fora da janela pai. Caso contr\xe1rio isso ocorreria:  \\n\\n![Subwindow + Half subwindow](subwindow_one_half.png)  \\n\\nA janela 2 est\xe1 saindo do limite da janela pai.  \\n\\nPoderiamos inicializar a janela pai maximizada para evitar isto por\xe9m outros problemas iriam aparecer, por exemplo: Janela pai ignorar clicks e teclas, tornando imposs\xedvel interagir com as janelas simuladas nele.  \\n\\nDesative *Display > Window > Subwindows > Embed Subwindows* para que as subwindows sejam tratadas como janelas reais pelo sistema operacional (em vez de simuladas pela janela pai).  \\n\\n![Subwindows](subwindows.png)  \\n\\nMas se quisermos ter uma title bar de janela \xfanica para as nossas janelas? Podemos fazer o mesmo que fizemos com janela principal, torna-la borderless.  \\n\\n![subwindows borderless](subwindows_borderless.png)  \\n\\nDentro das propriedades da Janela, ative *Flags > Borderless*.  \\n\\n![subwindows borderless activate](subwindows_borderless2.png)  \\n\\nAgora n\xf3s seriamos respons\xe1veis por criar a title bar no topo da janela. Desta maneira poderiamos fazer uma title bar \xfanica igual ao Google Chrome ou Steam!  \\n\\n## 4 - Custom Title Bar\\nTer uma title bar pr\xf3pria \xe9 relativamente raro hoje em dia, pois muitas vezes requer reinventar a roda sem trazer benif\xedcios reais.  \\n\\nMas isto n\xe3o quer dizer que nenhuma aplica\xe7\xe3o faz isto:  \\n![Custom Title Bars](custom_title_bars.png)  \\n<sub>(Steam, GNOME Files, Google Chrome)</sub>  \\n\\nNote que as 3 aplica\xe7\xf5es aproveitaram o espa\xe7o para provid\xeanciar mais informa\xe7\xf5es e funcionalidades ao usu\xe1rio. Por\xe9m n\xf3s vamos focar em pelo menos reproduzir o b\xe1sico:  \\n1. Exibir titulo\\n2. Provid\xeanciar bot\xf5es de minimizar, maximizar e fechar\\n3. Double click maximizar\\n4. Arrastar a title bar deve mover a janela\\n5. Redimensionar janela se arrastar as bordas\\n\\nDepois disso voc\xea deve ser capaz de adicionar ou remover mais utilidades conforme a sua vontade.  \\n\\n:::warning\\nEstarei partindo do princ\xedpio que queremos customizar uma title bar na janela principal, por isto o c\xf3digo utiliza `get_window()`, mas adapta\xe7\xf5es podem ser necess\xe1rias caso esteja tratando subwindows.  \\n:::\\n\\n### Exibir Titulo\\nBasta utilizar o node Label.  \\n\\n### Minimize, Maximize, Close Buttons\\nBasta utilizar 3 nodes Button tratando o signal `pressed`:  \\n\\n```gdscript\\nfunc _on_minimize_pressed() -> void:\\n\\tget_window().mode = Window.MODE_MINIMIZED\\n\\n\\nfunc _on_maximize_pressed() -> void:\\n\\tif get_window().mode == Window.MODE_MAXIMIZED:\\n\\t\\tget_window().mode = Window.MODE_WINDOWED\\n\\telse:\\n\\t\\tget_window().mode = Window.MODE_MAXIMIZED\\n\\n\\nfunc _on_close_pressed() -> void:\\n\\tget_tree().quit()\\n```\\n\\n:::tip subwindows tip\\n\xc9 importante tratar o signal `close_requested` vindo da janela, pois \xe9 por ele que voc\xea recebe notifica\xe7\xf5es que o usu\xe1rio tentou fechar de outras maneiras (taskbar do windows, etc).  \\n:::\\n\\n### Double Click Maximize\\nContainer n\xe3o possui signal para isto diretamente por\xe9m podemos utilizar o signal mais geral `gui_input`.  \\n\\n```gdscript\\nfunc _on_minimize_pressed() -> void:\\n\\t...\\n\\n\\nfunc _on_maximize_pressed() -> void:\\n\\t...\\n\\n\\nfunc _on_close_pressed() -> void:\\n\\t...\\n\\n\\n// highlight-start\\nfunc _on_title_bar_gui_input(event: InputEvent) -> void:\\n\\tif event is InputEventMouseButton:\\n\\t\\t_on_title_bar_mouse_button(event)\\n\\n\\nfunc _on_title_bar_mouse_button(event: InputEventMouseButton) -> void:\\n\\tif event.button_index == MOUSE_BUTTON_LEFT and event.double_click:\\n\\t\\t_on_title_bar_double_click()\\n\\n\\nfunc _on_title_bar_double_click() -> void:\\n\\tmatch get_window().mode:\\n\\t\\tWindow.MODE_MAXIMIZED:\\n\\t\\t\\tget_window().mode = Window.MODE_WINDOWED\\n\\t\\t_:\\n\\t\\t\\tget_window().mode = Window.MODE_MAXIMIZED\\n// highlight-end\\n```\\n\\nJ\xe1 estamos dividindo em fun\xe7\xf5es menores pois os passos seguintes ir\xe3o adicionar mais funcionalidades nestas fun\xe7\xf5es gerais.  \\n\\n### Drag Window\\nA princ\xedpio, arrastar a janela pode ser resumido em saber duas coisas:  \\n- Saber se o click do mouse est\xe1 sendo pressionado\\n- Onde que o click estava quando come\xe7ou\\n\\n```gdscript\\n// highlight-start\\nvar _title_bar_dragging: bool = false\\n\\nvar _title_bar_dragging_start: Vector2i\\n// highlight-end\\n\\n\\nfunc _on_minimize_pressed() -> void:\\n\\t...\\n\\n\\nfunc _on_maximize_pressed() -> void:\\n\\t...\\n\\n\\nfunc _on_close_pressed() -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_gui_input(event: InputEvent) -> void:\\n\\tif event is InputEventMouseButton:\\n\\t\\t_on_title_bar_mouse_button(event)\\n\\t// highlight-start\\n\\telif event is InputEventMouseMotion:\\n\\t\\t_on_title_bar_mouse_motion(event)\\n\\t// highlight-end\\n\\n\\nfunc _on_title_bar_mouse_button(event: InputEventMouseButton) -> void:\\n\\tif event.button_index == MOUSE_BUTTON_LEFT and event.double_click:\\n\\t\\t_on_title_bar_double_click()\\n\\t// highlight-start\\n\\telif event.button_index == MOUSE_BUTTON_LEFT and event.pressed:\\n\\t\\t_title_bar_dragging = true\\n\\t\\t_title_bar_dragging_start = get_global_mouse_position()\\n\\telif event.button_index == MOUSE_BUTTON_LEFT and not event.pressed:\\n\\t\\t_title_bar_dragging = false\\n\\t// highlight-end\\n\\n\\nfunc _on_title_bar_double_click() -> void:\\n\\t...\\n\\n\\n// highlight-start\\nfunc _on_title_bar_mouse_motion(_event: InputEventMouseMotion) -> void:\\n\\tif _title_bar_dragging:\\n\\t\\t_on_title_bar_dragged()\\n\\n\\nfunc _on_title_bar_dragged() -> void:\\n\\tmatch get_window().mode:\\n\\t\\tWindow.MODE_WINDOWED:\\n\\t\\t\\tget_window().position += get_global_mouse_position() as Vector2i - _title_bar_dragging_start\\n// highlight-end\\n```\\n\\n:::tip subwindows tip\\n**Primeiro**: Talvez seja bom mover para o centro da tela a janela pois a posi\xe7\xe3o poder n\xe3o estar correta durante a inicializa\xe7\xe3o (bug?):  \\n\\n```gdscript\\nfunc _ready() -> void:\\n\\tget_window().move_to_center()\\n```\\n\\n**Segundo**: Talvez seja necess\xe1rio utilizar `get_local_mouse_position()` em vez de `get_global_mouse_position()` pois deve ser necess\xe1rio o canvas da pr\xf3pria subwindow.  \\n:::\\n\\nEsse foi apenas o essencial sobre arrastar, agora podemos pensar em implementar detalhes sobre a a\xe7\xe3o de arrastar janelas.  \\n\\nPor exemplo: Quando o usu\xe1rio tentar arrastar uma janela m\xe1ximizada, ela automaticamente sai do m\xe1ximizado e se posiciona para que o mouse esteja proporcionalmente na posi\xe7\xe3o correta.   \\n\\n```gdscript\\nvar _title_bar_dragging: bool = false\\n\\nvar _title_bar_dragging_start: Vector2i\\n\\n// highlight-next-line\\nvar _title_bar_dragging_adjustment: float = 0\\n\\n\\nfunc _on_minimize_pressed() -> void:\\n\\t...\\n\\n\\nfunc _on_maximize_pressed() -> void:\\n\\t...\\n\\n\\nfunc _on_close_pressed() -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_gui_input(event: InputEvent) -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_mouse_button(event: InputEventMouseButton) -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_double_click() -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_mouse_motion(event: InputEventMouseMotion) -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_dragged() -> void:\\n\\tmatch get_window().mode:\\n\\t\\tWindow.MODE_WINDOWED:\\n\\t\\t\\tget_window().position += get_global_mouse_position() as Vector2i - _title_bar_dragging_start\\n// highlight-start\\n\\t\\tWindow.MODE_MAXIMIZED:\\n\\t\\t\\t_title_bar_dragging_adjustment = get_global_mouse_position().x / get_window().size.x\\n\\t\\t\\tget_window().mode = Window.MODE_WINDOWED\\n\\n\\nfunc _on_resized() -> void:\\n\\tif _title_bar_dragging_adjustment != 0:\\n\\t\\tget_window().position += (get_global_mouse_position() as Vector2i)\\n\\t\\tget_window().position.x -= get_window().size.x * _title_bar_dragging_adjustment\\n\\t\\t_title_bar_dragging_start = get_global_mouse_position()\\n\\t\\t_title_bar_dragging_adjustment = 0\\n// highlight-end\\n```\\n\\n:::note\\nLembre de se conectar ao sinal `_on_resized`.\\n:::\\n\\n### Resize Window (old)\\nRedimensionar pode ser facilmente implementado se utilizarmos o node `MarginContainer` que nos permite adicionar bordas \xe0s laterais, estas ser\xe3o nossas bordas que devem reagir ao mouse.  \\n\\nNodes do tipo `Control` possuem l\xf3gica para lidar com inputs do mouse, eles podem consumir ou passar ao node de cima as input do mouse.  \\n\\nIsso quer dizer que qualquer input do mouse na nossa janela (que n\xe3o tiver sido consumida) chegar\xe1 ao nosso `MarginContainer`. Isto n\xe3o \xe9 o que queremos, para n\xf3s s\xf3 \xe9 interessante que chegue inputs interagindo com a borda do nosso container.  \\n\\nPodemos resolver isto parando o consumo de inputs no container logo abaixo do `MarginContainer`:  \\n\\n![Margin](margin.png)  \\n\\n:::note\\nExistem `Control`s que por padr\xe3o param o consumo do mouse neles, por exemplo: `Panel`.  \\n:::\\n\\nAgora temos certeza que intera\xe7\xf5es vindo do signal `gui_input` s\xe3o intera\xe7\xf5es diretas com o `MarginContainer`.  \\n\\n```gdscript\\n// highlight-start\\nenum Margin {\\n\\tNONE,\\n\\tTOP,\\n\\tRIGHT,\\n\\tBOTTOM,\\n\\tLEFT,\\n\\tTOP_RIGHT,\\n\\tTOP_LEFT,\\n\\tBOTTOM_RIGHT,\\n\\tBOTTOM_LEFT,\\n}\\n\\nvar _margin_dragging: bool = false\\n\\nvar _margin_dragging_edge_start: Vector2i\\n\\nvar _margin_dragging_origin_limit: Vector2i\\n\\nvar _margin_selected: Margin\\n// highlight-end\\n\\nvar _title_bar_dragging: bool = false\\n\\nvar _title_bar_dragging_start: Vector2i\\n\\nvar _title_bar_dragging_adjustment: float = 0\\n\\n// highlight-start\\nfunc _get_current_margin(mouse_position: Vector2) -> Margin:\\n\\tvar margin: Margin = Margin.NONE\\n\\t\\n\\tif get_global_mouse_position().x < get_theme_constant(\\"margin_left\\"):\\n\\t\\tmargin = Margin.LEFT\\n\\telif get_global_mouse_position().x > size.x - get_theme_constant(\\"margin_right\\"):\\n\\t\\tmargin = Margin.RIGHT\\n\\t\\n\\tif get_global_mouse_position().y < get_theme_constant(\\"margin_top\\"):\\n\\t\\tmatch margin:\\n\\t\\t\\tMargin.LEFT:\\n\\t\\t\\t\\treturn Margin.TOP_LEFT\\n\\t\\t\\tMargin.NONE:\\n\\t\\t\\t\\treturn Margin.TOP\\n\\t\\t\\tMargin.RIGHT:\\n\\t\\t\\t\\treturn Margin.TOP_RIGHT\\n\\telif get_global_mouse_position().y > size.y - get_theme_constant(\\"margin_bottom\\"):\\n\\t\\tmatch margin:\\n\\t\\t\\tMargin.LEFT:\\n\\t\\t\\t\\treturn Margin.BOTTOM_LEFT\\n\\t\\t\\tMargin.NONE:\\n\\t\\t\\t\\treturn Margin.BOTTOM\\n\\t\\t\\tMargin.RIGHT:\\n\\t\\t\\t\\treturn Margin.BOTTOM_RIGHT\\n\\t\\n\\treturn margin\\n\\n\\nfunc _on_gui_input(event: InputEvent) -> void:\\n\\tif event is InputEventMouseButton:\\n\\t\\t_on_mouse_button(event)\\n\\telif event is InputEventMouseMotion:\\n\\t\\t_on_mouse_motion(event)\\n\\n\\nfunc _on_mouse_button(event: InputEventMouseButton) -> void:\\n\\tif event.button_index == MOUSE_BUTTON_LEFT and event.pressed:\\n\\t\\t_margin_dragging = true\\n\\t\\t_margin_selected = _get_current_margin(event.position)\\n\\t\\t_margin_dragging_edge_start = get_window().position + get_window().size\\n\\t\\t_margin_dragging_origin_limit = _margin_dragging_edge_start - get_window().min_size\\n\\telif event.button_index == MOUSE_BUTTON_LEFT and not event.pressed:\\n\\t\\t_margin_dragging = false\\n\\n\\nfunc _on_mouse_motion(event: InputEventMouseMotion) -> void:\\n\\tif _margin_dragging:\\n\\t\\t_on_dragged(event)\\n\\telse:\\n\\t\\t_on_hover(event)\\n\\n\\nfunc _on_dragged(event: InputEventMouseMotion) -> void:\\n\\tif get_window().mode != Window.MODE_WINDOWED:\\n\\t\\treturn\\n\\t\\n\\tmatch _margin_selected:\\n\\t\\tMargin.TOP:\\n\\t\\t\\tget_window().position.y = min(\\n\\t\\t\\t\\tget_window().position.y + event.position.y,\\n\\t\\t\\t\\t_margin_dragging_origin_limit.y\\n\\t\\t\\t)\\n\\t\\t\\t\\n\\t\\t\\tget_window().size.y = _margin_dragging_edge_start.y - get_window().position.y\\n\\t\\tMargin.RIGHT:\\n\\t\\t\\tget_window().size.x = event.position.x\\n\\t\\tMargin.BOTTOM:\\n\\t\\t\\tget_window().size.y = event.position.y\\n\\t\\tMargin.LEFT:\\n\\t\\t\\tget_window().position.x = min(\\n\\t\\t\\t\\tget_window().position.x + event.position.x,\\n\\t\\t\\t\\t_margin_dragging_origin_limit.x\\n\\t\\t\\t)\\n\\t\\t\\t\\n\\t\\t\\tget_window().size.x = _margin_dragging_edge_start.x - get_window().position.x\\n\\t\\tMargin.TOP_RIGHT:\\n\\t\\t\\tget_window().position.y = min(\\n\\t\\t\\t\\tget_window().position.y + event.position.y,\\n\\t\\t\\t\\t_margin_dragging_origin_limit.y\\n\\t\\t\\t) # Top\\n\\t\\t\\t\\n\\t\\t\\tget_window().size = Vector2i(\\n\\t\\t\\t\\tevent.position.x, # Right\\n\\t\\t\\t\\t_margin_dragging_edge_start.y - get_window().position.y, # Top\\n\\t\\t\\t)\\n\\t\\tMargin.TOP_LEFT:\\n\\t\\t\\tget_window().position = Vector2i(\\n\\t\\t\\t\\tmin(\\n\\t\\t\\t\\t\\tget_window().position.x + event.position.x,\\n\\t\\t\\t\\t\\t_margin_dragging_origin_limit.x\\n\\t\\t\\t\\t), # Left,\\n\\t\\t\\t\\tmin(\\n\\t\\t\\t\\t\\tget_window().position.y + event.position.y,\\n\\t\\t\\t\\t\\t_margin_dragging_origin_limit.y\\n\\t\\t\\t\\t), # Top\\n\\t\\t\\t)\\n\\n\\t\\t\\tget_window().size = Vector2i(\\n\\t\\t\\t\\t_margin_dragging_edge_start.x - get_window().position.x, # Left\\n\\t\\t\\t\\t_margin_dragging_edge_start.y - get_window().position.y, # Top\\n\\t\\t\\t)\\n\\t\\tMargin.BOTTOM_RIGHT:\\n\\t\\t\\tget_window().size = Vector2i(\\n\\t\\t\\t\\tevent.position.x, # Right\\n\\t\\t\\t\\tevent.position.y, # Bottom\\n\\t\\t\\t)\\n\\t\\tMargin.BOTTOM_LEFT:\\n\\t\\t\\tget_window().position.x += event.position.x # Left\\n\\t\\t\\tget_window().size = Vector2i(\\n\\t\\t\\t\\t_margin_dragging_edge_start.x - get_window().position.x, # Left\\n\\t\\t\\t\\tevent.position.y, # Bottom\\n\\t\\t\\t)\\n\\n\\nfunc _on_hover(event: InputEventMouseMotion) -> void:\\n\\tmatch _get_current_margin(event.position):\\n\\t\\tMargin.NONE:\\n\\t\\t\\tmouse_default_cursor_shape = Control.CURSOR_ARROW\\n\\t\\tMargin.TOP:\\n\\t\\t\\tmouse_default_cursor_shape = Control.CURSOR_VSIZE\\n\\t\\tMargin.RIGHT:\\n\\t\\t\\tmouse_default_cursor_shape = Control.CURSOR_HSIZE\\n\\t\\tMargin.BOTTOM:\\n\\t\\t\\tmouse_default_cursor_shape = Control.CURSOR_VSIZE\\n\\t\\tMargin.LEFT:\\n\\t\\t\\tmouse_default_cursor_shape = Control.CURSOR_HSIZE\\n\\t\\tMargin.TOP_RIGHT:\\n\\t\\t\\tmouse_default_cursor_shape = Control.CURSOR_BDIAGSIZE\\n\\t\\tMargin.TOP_LEFT:\\n\\t\\t\\tmouse_default_cursor_shape = Control.CURSOR_FDIAGSIZE\\n\\t\\tMargin.BOTTOM_RIGHT:\\n\\t\\t\\tmouse_default_cursor_shape = Control.CURSOR_FDIAGSIZE\\n\\t\\tMargin.BOTTOM_LEFT:\\n\\t\\t\\tmouse_default_cursor_shape = Control.CURSOR_BDIAGSIZE\\n// highlight-end\\n\\n\\nfunc _on_minimize_pressed() -> void:\\n\\t...\\n\\n\\nfunc _on_maximize_pressed() -> void:\\n\\t...\\n\\n\\nfunc _on_close_pressed() -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_gui_input(event: InputEvent) -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_mouse_button(event: InputEventMouseButton) -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_double_click() -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_mouse_motion(_event: InputEventMouseMotion) -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_dragged() -> void:\\n\\t...\\n\\n\\nfunc _on_resized() -> void:\\n\\t...\\n```\\n\\nDentro das fun\xe7\xf5es novas, muitas possuem a mesma l\xf3gica utilizada para arrastar janela. Por\xe9m duas possuem l\xf3gica nova: `_get_current_margin()` e `_on_dragged()`  \\n\\n**A primeira** \xe9 respons\xe1vel por identificar a borda a qual o mouse se encontra (varias valida\xe7\xf5es para identificar a posi\xe7\xe3o do mouse em rela\xe7\xe3o as bordas).  \\n\\n**A segunda** \xe9 a l\xf3gica de redimensionar, para resolver ela \xe9 recomendado primeiro resolver a l\xf3gica para cima, direita, baixo e esquerda (as diagonais s\xe3o combina\xe7\xf5es das l\xf3gicas das outras).  \\n\\n:::info\\n> Por que redimensionar n\xe3o \xe9 suave igual a outras aplica\xe7\xf5es?  \\n\\nIsto ocorre pois nem sempre a **movimenta\xe7\xe3o** e o **redimensionamento** n\xe3o ocorrem na mesma frame.  \\n\\nPor enquanto n\xe3o \xe9 poss\xedvel de se resolver isto pelo Godot.  \\n:::\\n\\n### Resize Window (new)\\nA maneira anterior adiciona um grande problema: Utilizar `MarginContainer` adiciona margins vazias a sua janela e tornava imposs\xedvel delas encostarem nas bordas do monitor.  \\n\\nEst\xe1 outra maneira envolve estruturar uma cena com todas as bordas necess\xe1rias.  \\n\\n![Margin Scene](./margin_scene.png)  \\n\\n```gdscript\\n// highlight-start\\nenum Margin {\\n\\tTOP,\\n\\tRIGHT,\\n\\tBOTTOM,\\n\\tLEFT,\\n\\tTOP_RIGHT,\\n\\tTOP_LEFT,\\n\\tBOTTOM_RIGHT,\\n\\tBOTTOM_LEFT,\\n}\\n\\n@export var margin_top: int = 0:\\n\\tset(m):\\n\\t\\tmargin_top = m\\n\\t\\t\\n\\t\\tif not get_node_or_null(\\"%Top\\"):\\n\\t\\t\\treturn\\n\\t\\t\\n\\t\\t%TopLeft.custom_minimum_size.y = m\\n\\t\\t%Top.custom_minimum_size.y = m\\n\\t\\t%TopRight.custom_minimum_size.y = m\\n\\n@export var margin_right: int = 0:\\n\\tset(m):\\n\\t\\tmargin_right = m\\n\\t\\t\\n\\t\\tif not get_node_or_null(\\"%Right\\"):\\n\\t\\t\\treturn\\n\\t\\t\\n\\t\\t%TopRight.custom_minimum_size.x = m\\n\\t\\t%Right.custom_minimum_size.x = m\\n\\t\\t%BottomRight.custom_minimum_size.x = m\\n\\n@export var margin_bottom: int = 0:\\n\\tset(m):\\n\\t\\tmargin_bottom = m\\n\\t\\t\\n\\t\\tif not get_node_or_null(\\"%Bottom\\"):\\n\\t\\t\\treturn\\n\\t\\t\\n\\t\\t%BottomLeft.custom_minimum_size.y = m\\n\\t\\t%Bottom.custom_minimum_size.y = m\\n\\t\\t%BottomRight.custom_minimum_size.y = m\\n\\n@export var margin_left: int = 0:\\n\\tset(m):\\n\\t\\tmargin_left = m\\n\\t\\t\\n\\t\\tif not get_node_or_null(\\"%Left\\"):\\n\\t\\t\\treturn\\n\\t\\t\\n\\t\\t%TopLeft.custom_minimum_size.x = m\\n\\t\\t%Left.custom_minimum_size.x = m\\n\\t\\t%BottomLeft.custom_minimum_size.x = m\\n\\nvar _margin_dragging: bool = false\\n\\nvar _margin_dragging_edge_start: Vector2i\\n\\nvar _margin_dragging_origin_limit: Vector2i\\n\\nvar _margin_hovered: Margin\\n// highlight-end\\n\\nvar _title_bar_dragging: bool = false\\n\\nvar _title_bar_dragging_start: Vector2i\\n\\nvar _title_bar_dragging_adjustment: float = 0\\n\\n// highlight-start\\nfunc _process(_delta: float) -> void:\\n\\tif _margin_dragging:\\n\\t\\t_on_dragged()\\n\\n\\nfunc _on_dragged() -> void:\\n\\tif get_window().mode != Window.MODE_WINDOWED:\\n\\t\\treturn\\n\\t\\n\\tvar mouse_position: Vector2i = get_global_mouse_position() as Vector2i\\n\\t\\n\\tmatch _margin_hovered:\\n\\t\\tMargin.TOP:\\n\\t\\t\\tget_window().position.y = min(\\n\\t\\t\\t\\tget_window().position.y + mouse_position.y,\\n\\t\\t\\t\\t_margin_dragging_origin_limit.y\\n\\t\\t\\t)\\n\\t\\t\\t\\n\\t\\t\\tget_window().size.y = _margin_dragging_edge_start.y - get_window().position.y\\n\\t\\tMargin.RIGHT:\\n\\t\\t\\tget_window().size.x = mouse_position.x\\n\\t\\tMargin.BOTTOM:\\n\\t\\t\\tget_window().size.y = mouse_position.y\\n\\t\\tMargin.LEFT:\\n\\t\\t\\tget_window().position.x = min(\\n\\t\\t\\t\\tget_window().position.x + mouse_position.x,\\n\\t\\t\\t\\t_margin_dragging_origin_limit.x\\n\\t\\t\\t)\\n\\t\\t\\t\\n\\t\\t\\tget_window().size.x = _margin_dragging_edge_start.x - get_window().position.x\\n\\t\\tMargin.TOP_RIGHT:\\n\\t\\t\\tget_window().position.y = min(\\n\\t\\t\\t\\tget_window().position.y + mouse_position.y,\\n\\t\\t\\t\\t_margin_dragging_origin_limit.y\\n\\t\\t\\t) # Top\\n\\t\\t\\t\\n\\t\\t\\tget_window().size = Vector2i(\\n\\t\\t\\t\\tmouse_position.x, # Right\\n\\t\\t\\t\\t_margin_dragging_edge_start.y - get_window().position.y, # Top\\n\\t\\t\\t)\\n\\t\\tMargin.TOP_LEFT:\\n\\t\\t\\tget_window().position = Vector2i(\\n\\t\\t\\t\\tmin(\\n\\t\\t\\t\\t\\tget_window().position.x + mouse_position.x,\\n\\t\\t\\t\\t\\t_margin_dragging_origin_limit.x\\n\\t\\t\\t\\t), # Left,\\n\\t\\t\\t\\tmin(\\n\\t\\t\\t\\t\\tget_window().position.y + mouse_position.y,\\n\\t\\t\\t\\t\\t_margin_dragging_origin_limit.y\\n\\t\\t\\t\\t), # Top\\n\\t\\t\\t)\\n\\n\\t\\t\\tget_window().size = Vector2i(\\n\\t\\t\\t\\t_margin_dragging_edge_start.x - get_window().position.x, # Left\\n\\t\\t\\t\\t_margin_dragging_edge_start.y - get_window().position.y, # Top\\n\\t\\t\\t)\\n\\t\\tMargin.BOTTOM_RIGHT:\\n\\t\\t\\tget_window().size = Vector2i(\\n\\t\\t\\t\\tmouse_position.x, # Right\\n\\t\\t\\t\\tmouse_position.y, # Bottom\\n\\t\\t\\t)\\n\\t\\tMargin.BOTTOM_LEFT:\\n\\t\\t\\tget_window().position.x += mouse_position.x # Left\\n\\t\\t\\tget_window().size = Vector2i(\\n\\t\\t\\t\\t_margin_dragging_edge_start.x - get_window().position.x, # Left\\n\\t\\t\\t\\tmouse_position.y, # Bottom\\n\\t\\t\\t)\\n\\n\\nfunc _on_top_left_gui_input(event: InputEvent) -> void:\\n\\t_margin_hovered = Margin.TOP_LEFT\\n\\t_on_margin_gui_input(event)\\n\\n\\nfunc _on_top_gui_input(event: InputEvent) -> void:\\n\\t_margin_hovered = Margin.TOP\\n\\t_on_margin_gui_input(event)\\n\\n\\nfunc _on_top_right_gui_input(event: InputEvent) -> void:\\n\\t_margin_hovered = Margin.TOP_RIGHT\\n\\t_on_margin_gui_input(event)\\n\\n\\nfunc _on_left_gui_input(event: InputEvent) -> void:\\n\\t_margin_hovered = Margin.LEFT\\n\\t_on_margin_gui_input(event)\\n\\n\\nfunc _on_right_gui_input(event: InputEvent) -> void:\\n\\t_margin_hovered = Margin.RIGHT\\n\\t_on_margin_gui_input(event)\\n\\n\\nfunc _on_bottom_left_gui_input(event: InputEvent) -> void:\\n\\t_margin_hovered = Margin.BOTTOM_LEFT\\n\\t_on_margin_gui_input(event)\\n\\n\\nfunc _on_bottom_gui_input(event: InputEvent) -> void:\\n\\t_margin_hovered = Margin.BOTTOM\\n\\t_on_margin_gui_input(event)\\n\\n\\nfunc _on_bottom_right_gui_input(event: InputEvent) -> void:\\n\\t_margin_hovered = Margin.BOTTOM_RIGHT\\n\\t_on_margin_gui_input(event)\\n\\n\\nfunc _on_margin_gui_input(event: InputEvent) -> void:\\n\\tif event is InputEventMouseButton:\\n\\t\\t_on_margin_mouse_button(event)\\n\\n\\nfunc _on_margin_mouse_button(event: InputEventMouseButton) -> void:\\n\\tif event.button_index == MOUSE_BUTTON_LEFT and event.pressed:\\n\\t\\t_margin_dragging = true\\n\\t\\t_margin_dragging_edge_start = get_window().position + get_window().size\\n\\t\\t_margin_dragging_origin_limit = _margin_dragging_edge_start - get_window().min_size\\n\\telif event.button_index == MOUSE_BUTTON_LEFT and not event.pressed:\\n\\t\\t_margin_dragging = false\\n// highlight-end\\n\\n\\nfunc _on_minimize_pressed() -> void:\\n\\t...\\n\\n\\nfunc _on_maximize_pressed() -> void:\\n\\t...\\n\\n\\nfunc _on_close_pressed() -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_gui_input(event: InputEvent) -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_mouse_button(event: InputEventMouseButton) -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_double_click() -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_mouse_motion(_event: InputEventMouseMotion) -> void:\\n\\t...\\n\\n\\nfunc _on_title_bar_dragged() -> void:\\n\\t...\\n\\n\\nfunc _on_resized() -> void:\\n\\t...\\n```\\n\\n:::warning\\nEu n\xe3o passei a limpo o c\xf3digo acima, usei como base o de outro projeto que eu possuia.  \\n\\nIsto quer dizer que posso ter esquecido de alterar algum nome de fun\xe7\xe3o e vari\xe1vel corretamente ou seguindo o mesmo padr\xe3o visto anteriormente.  \\n:::\\n\\n### Icon\\nImagem n\xe3o \xe9 minha \xe1rea e existe tanta configura\xe7\xe3o para isto que eu fico perdido. O que eu fa\xe7o \xe9 utilizar um SVG pois ele se adapta a qualuer tamanho.  \\n\\nDito isto, para mim ainda foi necess\xe1rio configurar como Godot importaria meu icone. A parte que eu n\xe3o esperava era ter que reduzir a escala para conseguir algo mais liso.  \\n\\n![Icon settings](./icon_scale.png)  \\n\\nOriginalmente eu estava usando a escala 1.0  \\n\\n![Icon before](./icon_before.png)  \\n\\nQuando alterei para 0.2 obtive uma icone mais liso  \\n\\n![Icon before](./icon_after.png)  \\n\\n:::note\\nN\xe3o \xe9 todo sistema operacional que utiliza icones na title bar.\\n:::\\n\\n## 5 - Drag and Drop (DND)\\nPodemos dividir em dois tipos:\\n- Drag from Godot\\n- Drag from Operating System\\n\\nEntenda que n\xe3o \xe9 poss\xedvel simplesmente arrastar um item de uma aplica\xe7\xe3o para outra e esperar que a receptora entenda aquele tipo de dado.  \\n\\nPor exemplo, imagine que n\xf3s puxemos a aba do terminal do VSCode para o Godot.  \\n\\n![VSCode terminal](vscode_terminal.png)  \\n\\nEmbora VSCode nos permita arrastar est\xe1 aba e reposiciona-la dentro do pr\xf3prio VSCode, o Godot n\xe3o entende o que \xe9 est\xe1 aba (definitivamente n\xe3o \xe9 um Node ou Control).  \\n\\nPara resolver este problema, o sistema operacional age como intermedi\xe1rios entre as aplica\xe7\xf5es, for\xe7ando a aplica\xe7\xe3o a formatar de uma maneira esperada pelo OS antes de transferir entre aplica\xe7\xf5es\\n\\n:::note\\nIsto quer dizer que cada sistema operacional possue seu formato de transfer\xeancia (normalmente as bibliotecas abstraem isto).  \\n:::\\n\\nPor outro lado, quando toda a opera\xe7\xe3o de DND \xe9 dentro do Godot, n\xe3o precisamos nos preocupar com formatar da maneira que o sistema operacional deseja e podemos passar os dados em um formato conhecido pelo Godot.  \\n\\n### DND: Godot -> Godot\\n![DND Godot](dnd_godot.svg)  \\n\\nNo momento que voc\xea come\xe7a a arrastar qualquer [Control](https://docs.godotengine.org/en/stable/classes/class_control.html), Godot ir\xe1 chamar o m\xe9todo [`_get_drag_data()`](https://docs.godotengine.org/en/stable/classes/class_control.html#class-control-private-method-get-drag-data) daquele Control.  \\n\\nExemplo:  \\n\\n```gdscript\\nextends TextureRect\\n\\n\\nfunc _get_drag_data(at_position: Vector2) -> Variant:\\n\\treturn texture\\n```\\n\\n- Se o m\xe9todo retornar `null`, Godot entender\xe1 que n\xe3o existe conte\xfado sendo arrastado\\n\\t- Por padr\xe3o este m\xe9todo virtual retorna `null`\\n- Se o m\xe9todo retornar qualquer outro dado, Godot entender\xe1 que existe conte\xfado sendo arrastado\\n\\nNeste momento Godot lan\xe7a a notifica\xe7\xe3o [NOTIFICATION_DRAG_BEGIN](https://docs.godotengine.org/en/stable/classes/class_node.html#class-node-constant-notification-drag-begin) para todos os [Nodes](https://docs.godotengine.org/en/stable/classes/class_node.html).  \\n\\n:::info\\nEste tipo de notifica\xe7\xe3o \xe9 muito utilizada em GUI\'s pois nos permite destacar uma \xe1rea onde o conte\xfado pode ser solto.  \\n\\nPor exemplo, Godot detecta que voc\xea est\xe1 arrastando algo v\xe1lido para aquele campo e cria uma borda azul para deixar claro que \xe9 poss\xedvel soltar o conte\xfado l\xe1.  \\n\\n![Godot blue border](godot_blue_border.png)  \\n:::\\n\\nAgora que estamos no estado \\"dragging\\", sempre que passarmos o mouse em cima de um Control, Godot ir\xe1 chamar o m\xe9todo [`_can_drop_data()`](https://docs.godotengine.org/en/stable/classes/class_control.html#class-control-private-method-can-drop-data) para saber se \xe9 poss\xedvel soltar conte\xfado nele.  \\n\\nExemplo:  \\n\\n```gdscript\\nextends Button\\n\\n\\nfunc _can_drop_data(at_position: Vector2, data: Variant) -> bool:\\n\\treturn data is Texture\\n```\\n\\n- Se o m\xe9todo retornar `false`, Godot entender\xe1 que n\xe3o suporta o conte\xfado sendo arrastado\\n\\t- Por padr\xe3o este m\xe9todo virtual retorna `false`\\n- Se o m\xe9todo retornar `true`, Godot entender\xe1 que suporta o conte\xfado sendo arrastado\\n\\n:::info\\n\xc9 normal ver o mouse mudar de apar\xeancia para destacar que o conte\xfado pode ser largado naquele local.  \\n:::\\n\\nNo momento que soltarmos o conte\xfado, Godot ir\xe1 chamar o m\xe9todo [`_drop_data()`](https://docs.godotengine.org/en/stable/classes/class_control.html#class-control-private-method-drop-data) **apenas** se passou na valida\xe7\xe3o do m\xe9todo `_can_drop_data()`.  \\n\\nExemplo:  \\n\\n```gdscript\\nextends Button\\n\\n\\nfunc _can_drop_data(at_position: Vector2, data: Variant) -> bool:\\n\\treturn data is Texture\\n\\n\\nfunc _drop_data(at_position: Vector2, data: Variant) -> void:\\n\\ticon = data\\n```\\n\\nAp\xf3s soltar o click, independente se tiver sido de algo v\xe1lido, Godot ir\xe1 emitir a notifica\xe7\xe3o [NOTIFICATION_DRAG_END](https://docs.godotengine.org/en/stable/classes/class_node.html#class-node-constant-notification-drag-end) para todos os Nodes.  \\n\\n:::info\\n\xc9 poss\xedvel conseguir informa\xe7\xf5es ao vivo do estado do dragging na [Viewport](https://docs.godotengine.org/en/stable/classes/class_viewport.html).  \\n\\n- [`gui_get_drag_data()`](https://docs.godotengine.org/en/stable/classes/class_viewport.html#class-viewport-method-gui-get-drag-data)\\n\\t- O dado sendo arrastado\\n- [`gui_is_drag_successful()`](https://docs.godotengine.org/en/stable/classes/class_viewport.html#class-viewport-method-gui-is-drag-successful)\\n\\t- O resultado do \xfaltimo drag\\n- [`gui_is_dragging()`](https://docs.godotengine.org/en/stable/classes/class_viewport.html#class-viewport-method-gui-is-dragging)\\n\\t- O estado atual do drag\\n:::\\n\\n### DND: OS -> Godot\\n![DND OS](dnd_os.svg)  \\n\\nNo momento Godot apenas suporta **drop** do **file manager**, ao fazer isto sua janela ir\xe1 receber os para os arquivos passados.  \\n\\n:::info\\nEsta a\xe7\xe3o ocorre entre sistema operacional e as janelas da nossa aplica\xe7\xe3o, mas \xe9 importante entender que est\xe1 janela **n\xe3o** pode ser [embedded](https://docs.godotengine.org/en/stable/classes/class_viewport.html#class-viewport-property-gui-embed-subwindows).  \\n\\nIsso \xe9 necess\xe1rio pois \\"embed window\\" \xe9 apenas uma simula\xe7\xe3o de janela dentro da nossa aplica\xe7\xe3o, logo n\xe3o \xe9 vista como janela pelo OS.  \\n:::\\n\\nO node [Window](https://docs.godotengine.org/en/stable/classes/class_window.html) possui o sinal [files_dropped](https://docs.godotengine.org/en/stable/classes/class_window.html#class-window-signal-files-dropped) para avisar quando um ou mais arquivos s\xe3o largados na janela.  \\n\\nSabendo isto podemos conectar uma fun\xe7\xe3o a este sinal da janela principal:  \\n\\n```gdscript\\nfunc _ready() -> void:\\n\\tget_window().files_dropped.connect(_on_files_dropped)\\n\\n\\nfunc _on_files_dropped(files: PackedStringArray) -> void:\\n\\tpass\\n```\\n\\n:::note\\nSe estivessemos falando de uma subwindow, poderiamos utilizar a pr\xf3pria interface do Godot para conectar.  \\n:::\\n\\nUm detalhe a se notar \xe9 que neste caso n\xe3o recebemos a posi\xe7\xe3o onde os arquivos foram largados, ent\xe3o precisariamos calcular manualmente se est\xe1 dentro da \xe1rea esperada.  \\n\\n```gdscript\\nfunc _ready() -> void:\\n\\tget_window().files_dropped.connect(_on_files_dropped)\\n\\n\\nfunc _on_files_dropped(files: PackedStringArray) -> void:\\n\\tif Rect2(global_position, size).has_point(get_global_mouse_position()):\\n\\t\\tpass\\n```\\n\\nEste c\xf3digo pode ser adicionado a qualquer Control para que ele trate drops nele.  \\n\\n### DND: OS -> Godot Web\\n\\nExistem dois comportamentos dos navegadores que tornam esse processo um pouco diferente do acima:  \\n- A posi\xe7\xe3o global do mouse **n\xe3o** \xe9 atualizada enquanto o usu\xe1rio estiver arrastando arquivo(s)\\n- O navegador cria c\xf3pias tempor\xe1rias dos arquivos arrastados e ele podem ser **deletados** na frame seguinte\\n\\nUma maneira de resolver o primeiro problema \xe9 esperar atualiza\xe7\xe3o de movimento do mouse antes de tratar qualquer l\xf3gica do drop.  \\n\\n```gdscript\\nfunc _ready() -> void:\\n\\tget_tree().root.window_input.connect(_on_window_input)\\n\\tget_window().files_dropped.connect(_on_files_dropped)\\n\\n\\nfunc _on_window_input(event: InputEvent) -> void:\\n\\tif event is InputEventMouseMotion:\\n\\t\\tmouse_moved.emit()\\n\\n\\nfunc _on_files_dropped(files: PackedStringArray) -> void:\\n\\tawait mouse_moved\\n\\n\\tif Rect2(global_position, size).has_point(get_global_mouse_position()):\\n\\t\\tpass\\n```\\n\\nPor\xe9m ao fazer isto existe **grande** chance do segundo problema atacar (deletar os arquivos tempor\xe1rios). Uma poss\xedvel solu\xe7\xe3o \xe9 ler os arquivos antes do `await`:  \\n\\n```gdscript\\nfunc _ready() -> void:\\n\\tget_tree().root.window_input.connect(_on_window_input)\\n\\tget_window().files_dropped.connect(_on_files_dropped)\\n\\n\\nfunc _on_window_input(event: InputEvent) -> void:\\n\\tif event is InputEventMouseMotion:\\n\\t\\tmouse_moved.emit()\\n\\n\\nfunc _on_files_dropped(files: PackedStringArray) -> void:\\n\\tvar filebytes := FileAccess.get_file_as_bytes(files[0])\\n\\n\\tawait mouse_moved\\n\\n\\tif Rect2(global_position, size).has_point(get_global_mouse_position()):\\n\\t\\tpass\\n```\\n\\nNeste exemplo, estou apenas pegando os bytes do primeiro arquivo e armazenando numa vari\xe1vel mas voc\xea deve adaptar para o seu caso de uso.  \\n\\n## 6 - Debug\\n\xc9 poss\xedvel literalmente visualizar o quanto a sua aplica\xe7\xe3o se redesenha na tela.  \\n\\n![Debug canvas options](./debug_canvas.png)  \\n\\nIsto pode ser \xfatil para te alertar se algum control seu est\xe1 se redesenhando demais.  \\n\\n:::warning\\nAtualmente isto apenas funciona quando utilizando o modo de renderiza\xe7\xe3o \\"Mobile\\" e este modo afeta o desempenho do Godot.  \\n\\nMinha recomenda\xe7\xe3o seria apenas utilizar durante as etapas de testes.  \\n:::\\n\\n## 7 - Undo & Redo\\nGodot fornece uma classe para lidar com desfazer & refazer a\xe7\xf5es: [`UndoRedo`](https://docs.godotengine.org/en/stable/classes/class_undoredo.html).  \\n\\nEsta classe funciona registrando a\xe7\xf5es, que representam aquilo que pode ser desfeito ou refeito.  \\n\\n![UndoRedo actions timeline](undo_redo_actions.svg)  \\n\\n\xc9 importante entender que a\xe7\xf5es s\xe3o aglomerados de opera\xe7\xf5es que ser\xe3o executadas quando `undo()`/`redo()` for chamado.  \\n\\n```gdscript\\nvar undo_redo = UndoRedo.new()\\n\\nfunc do_something():\\n\\tundo_redo.create_action(\\"Action name\\")\\n\\n\\t# DO\\n\\tundo_redo.add_do_method(_method_a)\\n\\tundo_redo.add_do_method(_method_b)\\n\\tundo_redo.add_do_method(_method_c)\\n\\tundo_redo.add_do_property(_object_a, \\"propery_name\\", \\"yes\\")\\n\\tundo_redo.add_do_property(_object_b, \\"propery_name\\", 100)\\n\\n\\t# UNDO\\n\\tundo_redo.add_undo_method(_method_d)\\n\\tundo_redo.add_undo_method(_method_e)\\n\\tundo_redo.add_undo_method(_method_f)\\n\\tundo_redo.add_undo_property(_object_a, \\"propery_name\\", \\"no\\")\\n\\tundo_redo.add_undo_property(_object_b, \\"propery_name\\", 0)\\n\\n\\tundo_redo.commit_action()\\n```\\n\\nEst\xe1s opera\xe7\xf5es podem ser chamadas de m\xe9todos ou defini\xe7\xf5es de propriedades, mas resta a voc\xea definir as opera\xe7\xf5es que desfazem/refazem aquela a\xe7\xe3o.  \\n\\nQuando uma nova a\xe7\xe3o \xe9 adicionada, todas a\xe7\xf5es que estavam na frente s\xe3o deletadas.  \\n\\n![UndoRedo new action timeline](undo_redo_new_action.svg)  \\n\\nExistem casos que a a\xe7\xe3o envolve liberar (`queue_free()`) um `Node`. Isto criaria um grande problema, pois desfazer est\xe1 opera\xe7\xe3o seria recriar um node id\xeantico ao deletado. Imagina o trabalho que daria \\"settar\\" todas as propriedades que aquele node tinha... N\xe3o quero nem come\xe7ar a pensar.  \\n\\nAcontece que `UndoRedo` j\xe1 provid\xeancia uma solu\xe7\xe3o simples para isto: \\n- [`add_do_reference()`](https://docs.godotengine.org/en/stable/classes/class_undoredo.html#class-undoredo-method-add-do-reference)\\n- [`add_undo_reference()`](https://docs.godotengine.org/en/stable/classes/class_undoredo.html#class-undoredo-method-add-undo-reference)  \\n\\nEm vez de liberar o objeto, voc\xea entrega ele ao `UndoRedo` que ficar\xe1 encarregado de libera-lo dependendo se ele ainda ser\xe1 necess\xe1rio ou n\xe3o para o `UndoRedo`.  \\n\\nVamos supor que as a\xe7\xf5es seis e sete do exemplo anterior tivessemos chamado `add_do_reference()` (normalmente utilizado quando sua a\xe7\xe3o cria nodes).  \\n\\n![UndoRedo add do reference](undo_redo_add_ref.svg)  \\n\\nNo momento que a a\xe7\xe3o oito do exemplo anterior tivesse aparecido, os nodes teriam sido liberados pois n\xe3o existiria mais caminho para eles.  \\n\\n![UndoRedo new action timeline when there is nodes added as reference](undo_redo_new_action2.svg)  \\n\\nEnquanto isso, `add_undo_reference()` \xe9 utilizado para o oposto (normalmente utilizado quando sua a\xe7\xe3o deleta nodes).  \\n\\n![UndoRedo add undo reference](undo_redo_add_ref2.svg)  \\n\\nOs nodes teriam liberados da mem\xf3ria, mas est\xe3o sendo mantidos nas a\xe7\xf5es para caso o usu\xe1rio fa\xe7a `undo()`.  \\n\\nNesse caso a \xfanica hora em que eles v\xe3o ser liberados da mem\xf3ria, \xe9 quando o hist\xf3rico de undo for deletado.  \\n\\n> E se eu voltar para a a\xe7\xe3o 4 e criar uma nova a\xe7\xe3o?  \\n\\nSe voc\xea voltou at\xe9 a a\xe7\xe3o 4, ent\xe3o voc\xea desfez a dele\xe7\xe3o deles e est\xe1 segurando eles em algum lugar... A a\xe7\xe3o n\xe3o precisa mais segurar a refer\xeancia mas n\xe3o existe motivo para ela liberar a mem\xf3ria dela.  \\n\\n:::note  \\nSe voc\xea est\xe1 desenvolvendo um addon/gdextension para Godot, a recomenda\xe7\xe3o \xe9 utilizar o [EditorUndoRedoManager](https://docs.godotengine.org/en/stable/classes/class_editorundoredomanager.html) (UndoRedo interno do Godot).  \\n:::\\n\\n## References\\n- https://www.youtube.com/watch?v=cJ5Rkk5fnGg\\n- https://learn.microsoft.com/en-us/windows/apps/design/input/drag-and-drop\\n- https://www.freedesktop.org/wiki/Specifications/XDND/"},{"id":"/2024/10/10/web-crawler","metadata":{"permalink":"/en/blog/2024/10/10/web-crawler","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-10-10-web-crawler/index.md","source":"@site/blog/2024-10-10-web-crawler/index.md","title":"Web Crawler","description":"Crawler: Respons\xe1vel por navegar entre websites utilizando links encontrados neles mesmos","date":"2024-10-10T00:00:00.000Z","formattedDate":"October 10, 2024","tags":[{"label":"web","permalink":"/en/blog/tags/web"},{"label":"scraping","permalink":"/en/blog/tags/scraping"},{"label":"scrapers","permalink":"/en/blog/tags/scrapers"},{"label":"crawlers","permalink":"/en/blog/tags/crawlers"},{"label":"crawler","permalink":"/en/blog/tags/crawler"},{"label":"browser","permalink":"/en/blog/tags/browser"},{"label":"html","permalink":"/en/blog/tags/html"},{"label":"http","permalink":"/en/blog/tags/http"},{"label":"css","permalink":"/en/blog/tags/css"},{"label":"xpath","permalink":"/en/blog/tags/xpath"},{"label":"puppeteer","permalink":"/en/blog/tags/puppeteer"},{"label":"playwright","permalink":"/en/blog/tags/playwright"},{"label":"selenium","permalink":"/en/blog/tags/selenium"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["web","scraping","scrapers","crawlers","crawler","browser","html","http","css","xpath","puppeteer","playwright","selenium"]},"unlisted":false,"prevItem":{"title":"Godot GUI Tips","permalink":"/en/blog/2024/10/26/godot-gui-tips"},"nextItem":{"title":"Godot Drama","permalink":"/en/blog/2024/10/01/godot-drama"}},"content":"**Crawler**: Respons\xe1vel por navegar entre websites utilizando links encontrados neles mesmos  \\n**Scraper**: Respons\xe1vel por extrair informa\xe7\xf5es importantes dos websites navegados  \\n\\nCrawling \xe9 ess\xeancial para scraping, pois voc\xea n\xe3o tem como conseguir extrair informa\xe7\xf5es de um site sem navegar para ele antes.  \\nScraping n\xe3o \xe9 ess\xeancial para crawling, pois os dados do site podem ser irrelevantes para voc\xea.  \\n\\nPor exemplo:  \\n- Google utiliza um crawler para navegar a internet e indexar p\xe1ginas delas, por\xe9m n\xe3o extrai as informa\xe7\xf5es dos websites em si\\n- OpenAI utiliza scraper para pegar os videos do youtube e utilizar na intelig\xeancia artificial deles\\n\\nSe eu tivesse que separar crawlers em categorias, seria:\\n- **Browser**: Utilizando um browser real para crawlear\\n- **Raw**: Simulando um browser atr\xe1ves de requisi\xe7\xf5es pela internet\\n\\nHoje em dia simular um navegador \xe9 incrivelmente dif\xedcil ent\xe3o a maneira **raw** \xe9 bem menos potente e fornece muito menos funcionalidades.  \\n\\n## Browser\\nExistem 3 ferramentas famosas de automa\xe7\xe3o de navegadores:  \\n- [Selenium](https://www.selenium.dev/)\\n- [Puppeteer](https://pptr.dev/)\\n- [Playwright](https://playwright.dev/)\\n\\n\xc9 importante notar que elas todas se declaram para usos de testes, por\xe9m ainda assim s\xe3o muito utilizadas para web scraping.  \\n\\n### Selenium\\nCriado em ~2004 mas que continua a oferecer suporte para todos os navegadores e diversas linguagens (n\xe3o necessariamente bem).  \\n\\nMuito do seu estilo vem do fato de ter sido criado utilizando Java e depois adaptado para outras linguagens.  \\n\\n```javascript title=\\"javascript\\"\\nimport { Browser, Builder, By } from \\"selenium-webdriver\\";\\n\\nconst driver = await new Builder().forBrowser(Browser.CHROME).build()\\nawait driver.get(\'https://www.etiquetaunica.com.br/\')\\nawait driver.manage().setTimeouts({implicit: 1000});\\n\\nlet hamburguerButton = await driver.findElement(By.xpath(\'//*[@id=\\"headerWrapper\\"]/div[1]/button[1]\'))\\nawait hamburguerButton.click()\\n\\nlet brandButton = await driver.findElement(By.xpath(\'//*[@id=\\"menu\\"]/div/div[2]/ul/li[7]/a\'))\\nawait brandButton.click()\\n```\\n\\n### Puppeteer\\nCriado pela Google em ~2017 para fornecer automa\xe7\xe3o ao Google Chrome utilizando JavaScript.  \\n\\nNote que o locator favorito deles envolve utilizar CSS.  \\n\\n```javascript title=\\"javascript\\"\\nimport puppeteer from \\"puppeteer\\";\\n\\nconst browser = await puppeteer.launch({headless: false})\\nconst page = await browser.newPage()\\n\\nawait page.setViewport({ width: 1600, height: 1024 })\\nawait page.goto(\'https://gringa.com.br/\')\\nawait page.locator(\'#section-header > div > div.Header__FlexItem.Header__FlexItem--fill.Header__FlexItem_left--mobile > nav > ul > li:nth-child(3) > a\').click()\\n```\\n\\n### Playwright\\nCriado pela Microsoft em ~2020 para fornecer automa\xe7\xe3o em diversos navegador. O estilo \xe9 bem parecido ao do Puppeteer pois boa parte dos desenvolvedores vieram do Puppeteer \ud83e\udd23.  \\n\\nA linguagem prim\xe1ria de programa\xe7\xe3o dele \xe9 JavaScript, por\xe9m fornece suporte a diversas outras (n\xe3o necessariamente bem).  \\n\\n```javascript title=\\"javascript\\"\\nimport { chromium, devices } from \\"playwright\\";\\n\\nconst browser = await chromium.launch({ channel: \'chrome\', headless: false })\\nconst context = await browser.newContext(devices[\'Desktop Chrome\'])\\nconst page = await context.newPage()\\n\\nawait page.goto(\'https://canseivendi.com.br/\')\\nawait page.getByRole(\'link\', {name: \'Marcas\'}).click()\\n```\\n\\n## Raw\\nNeste caso o mais importante \xe9 voc\xea possuir uma boa quantidade de bibliotecas que o ajudem a realizar a tarefa! O b\xe1sico \xe9 conseguir requisitar a p\xe1gina na internet e parsear o conte\xfado HTML.  \\n\\n```python title=\\"python\\"\\nimport httpx\\nfrom parsel import Selector\\n\\nUSER_AGENT = \\"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\\"\\n\\nresponse = httpx.get(\\n    \\"https://canseivendi.com.br/bolsas\\",\\n    headers={\\"user-agent\\": USER_AGENT},\\n)\\n\\nselector = Selector(text=response.text)\\nnames = selector.xpath(\'//div[@class=\\"name\\"]/a/text()\').getall()\\nlinks = selector.xpath(\'//div[@class=\\"name\\"]/a/@href\').getall()\\nprices = selector.xpath(\'//div[@class=\\"cash\\"]/text()\').getall()\\n```\\n\\nNeste exemplo escolhi utilizar a biblioteca [httpx](https://github.com/encode/httpx) (criada por [Encode](https://www.encode.io/)) e [parsel](https://github.com/scrapy/parsel) (criado por [Scrapy](https://scrapy.org/)), mas fica a sua escolha as bibliotecas para as tarefas.  \\n\\n:::note\\nNavegadores fazem muito mais que apenas uma requisi\xe7\xe3o! Uma p\xe1gina leva uma rea\xe7\xe3o em cadeia de requisi\xe7\xf5es por conte\xfados delas.  \\n\\nPor exemplo, ao receber uma p\xe1gina HTML e o navegador identificar uma imagem nela (`<img src=\\"photo.jpg\\">`), ele precisa fazer uma requisi\xe7\xe3o dessa imagem ao site.  \\n\\nAgora imagina que isto acontece para diversos tipos de conte\xfados da p\xe1gina:  \\n- Imagens: `<img src=\\"myimage.jpg\\">`\\n- Audio: `<audio></audio>`\\n- Videos: `<video></video>`\\n- CSS: `<link rel=\\"stylesheet\\" href=\\"mystyle.css\\">`\\n- JavaScript: `<script src=\\"myscripts.js\\"><\/script>`\\n- Iframe: `<iframe src=\\"url\\"></iframe>`\\n:::\\n\\n## Cat and Mouse Game\\nTer os dados do seu site scrapeado por bots n\xe3o \xe9 algo bom, pois eles geram grande tr\xe1fego e nenhum lucro (n\xe3o estou falando de [scalping](https://en.wikipedia.org/wiki/Ticket_resale#Automated_scalping_bots)).  \\n\\nPor isto \xe9 normal ver websites tentando identificar bots para bloquea-los e bots fingindo serem usu\xe1rios normais do dia a dia.  \\n\\nAcontece que muitas vezes isso envolve simular comportamentos de um usu\xe1rio e simular um navegador, onde ambos n\xe3o s\xe3o tarefas f\xe1ceis.  \\n\\nAqui uma lista **pequena** de coisas a se pensar:\\n- Simular Navegador\\n    - Construir Headers\\n    - Analisar HTML\\n    - Executar JavaScript\\n    - Variar fingerprint\\n- Simular Usu\xe1rio\\n    - Resolver Captchas\\n    - Movimento do mouse\\n    - Velocidade digitando\\n- Ap\xf3s ser bloqueado\\n    - Alterar comportamento/t\xe1tica\\n        - Para n\xe3o ser bloqueado novamente\\n    - Utilizar Proxy\\n\\nUma da melhor maneira de saber como atacar \xe9 sabendo como os sites se protegem... O que \xe9 algo que eu tenho pouco conhecimento ent\xe3o vou terminar aqui \ud83e\udd23.  \\n\\n## References\\n- https://substack.thewebscraping.club/p/browser-fingerprinting-test-online"},{"id":"/2024/10/01/godot-drama","metadata":{"permalink":"/en/blog/2024/10/01/godot-drama","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-10-01-godot-drama/index.md","source":"@site/blog/2024-10-01-godot-drama/index.md","title":"Godot Drama","description":"Pesquisa limitada pelo fato de Twitter ainda estar bloqueado no Brasil.","date":"2024-10-01T00:00:00.000Z","formattedDate":"October 1, 2024","tags":[{"label":"godot","permalink":"/en/blog/tags/godot"},{"label":"drama","permalink":"/en/blog/tags/drama"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["godot","drama"]},"unlisted":false,"prevItem":{"title":"Web Crawler","permalink":"/en/blog/2024/10/10/web-crawler"},"nextItem":{"title":"Terminal Tools","permalink":"/en/blog/2024/09/03/terminal-tools"}},"content":":::note\\nPesquisa limitada pelo fato de Twitter ainda estar bloqueado no Brasil.  \\n:::\\n\\nAproveitando que eu estava olhando o drama em cima de Godot e assistindo Ace Attorney... Resolvi brincar com o site [https://objection.lol](https://objection.lol).  \\n\\n### Video  \\n\\n[![](./ace_godot.png)](https://youtu.be/gXn0ktIHXcw)  \\n\\n## Details\\n\\n[![](./godot.png)](https://godotengine.org/)  \\n\\n[![](./open-source.webp)](https://opensource.org/osd)  \\n\\n## Twitter\\n\\n![](./twitter2.webp)  \\n\\n![](./twitter1.webp)  \\n\\n![](./twitter-grummz.png)  \\n\\n## Discord\\n\\n![](./twitter-gamesnosh.png)  \\n\\n![](./discord-xananax4.png)  \\n\\n![](./discord-new-old.png)  \\n\\n![](./twitter-xananax.png)   \\n\\n![](./discord-xananax2.png)  \\n\\n![](./discord-xananax3.png)  \\n\\n## Godot Foundation\\n\\n![](./foundation1.webp)  \\n\\n![](./foundation2.webp)  \\n\\n## Website\\n\\njun-17  \\n![](./web-archive-jun-17.png)  \\n\\njul-08  \\n![](./web-archive-jul-08.png)  \\n\\noct-11  \\n![](./web-archive-oct-11.png)  \\n\\n![](./server-start.png)  \\n\\n![](./more-community1.png)  \\n\\n![](./more-community2.png)  \\n\\n## Fork\\n\\n![](./redot.jpeg)  \\n\\n![](./redot-org.png)  \\n\\n![](./godot-org.png)  \\n\\n![](./twitter-redot.png)  \\n\\n## SMS\\n\\n![](./msgs-pigdev.png)  \\n\\n![](./msgs-pigdev2.png)  \\n\\n![](./msgs-pigdev3.png)  \\n\\n## Docs\\n\\n[![](./web-archive-docs.png)](https://web.archive.org/web/20200718193653/https://docs.godotengine.org/en/2.1/learning/features/misc/encrypting_save_games.html)  \\n\\n[![](./github-clayjohn.png)](https://github.com/godotengine/godot-docs/pull/2512)  \\n\\n## Twitter++\\n\\n![](./twitter-starkium.png)  \\n\\n![](./twitter-cos.png)  \\n\\n![](./twitter-sherief.png)  \\n\\n![](./twitter-petter.png)  \\n\\n![](./twitter-artur.png)  \\n\\n![](./twitter-perma-banned.png)  \\n\\n![](./twitter-perma-banned2.png)  \\n\\n![](./twitter-grummz2.png)  \\n\\n![](./twitter-nat.png)  \\n\\n![](./twitter-cuteandfunny.png)  \\n\\n![](./twitter-redot2.png)  \\n\\n![](./twitter-redot3.png)  \\n\\n## BlueSky\\n\\n![](./bluesky-mittenokitten.png)  \\n\\n![](./bluesky-yuri.png)  \\n\\n## Google\\n\\n![](./google-github.png)  \\n\\n## Discord++\\n\\n![](./discord-remi.png)  \\n\\n![](./discord-esc.png)  \\n\\n## Youtube\\n\\n- Asmongold\\n    - https://www.youtube.com/watch?v=ZXlWz09tqgs\\n    - https://www.youtube.com/watch?v=k5oh_AZ64k4\\n- Rev\\n    - https://www.youtube.com/watch?v=3jv9HpmK2qo\\n    - https://www.youtube.com/watch?v=nmp072PC6Tc\\n- Vara Dark\\n    - https://www.youtube.com/watch?v=JxQDlcr1t-o\\n    - https://www.youtube.com/watch?v=e4xP04i8Zk8\\n- Gwizz\\n    - https://www.youtube.com/watch?v=C9M-5O6p1PU\\n- Minimal Effor Live\\n    - https://www.youtube.com/watch?v=rlE-va3cHPA\\n- PirateSoftware\\n    - https://www.twitch.tv/videos/2265615792\\n        - 1:22:14"},{"id":"/2024/09/03/terminal-tools","metadata":{"permalink":"/en/blog/2024/09/03/terminal-tools","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-09-03-terminal-tools/index.md","source":"@site/blog/2024-09-03-terminal-tools/index.md","title":"Terminal Tools","description":"Est\xe1 \xe9 uma lista com minha opni\xe3o sobre diversas ferramentas de terminal.","date":"2024-09-03T00:00:00.000Z","formattedDate":"September 3, 2024","tags":[{"label":"terminal","permalink":"/en/blog/tags/terminal"},{"label":"tools","permalink":"/en/blog/tags/tools"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["terminal","tools"]},"unlisted":false,"prevItem":{"title":"Godot Drama","permalink":"/en/blog/2024/10/01/godot-drama"},"nextItem":{"title":"Lock Files in Process","permalink":"/en/blog/2024/07/29/lock-file-process"}},"content":"Est\xe1 \xe9 uma lista com minha opni\xe3o sobre diversas ferramentas de terminal.  \\nAqueles marcados com estrela (\u2b50) s\xe3o ainda utilizados por mim.  \\n\\n## CLI\\n- [nala](https://gitlab.com/volian/nala) \u2b50\\n    - **Substitui**: `apt`\\n    - **Uso di\xe1rio**: Alto\\n    - **Nota**: Torna muito melhor a visualiza\xe7\xe3o e entendimento da instala\xe7\xe3o de programas\\n- [duf](https://github.com/muesli/duf)\\n    - **Substitui**: `df`\\n    - **Uso di\xe1rio**: Baixo\\n    - **Nota**: Praticamente nunca uso pois acabo olhando em GUIs essas informa\xe7\xf5es\\n- [dust](https://github.com/bootandy/dust)\\n    - **Substitui**: `du`\\n    - **Uso di\xe1rio**: Baixo\\n    - **Nota**: Praticamente nunca uso pois acabo olhando em GUIs essas informa\xe7\xf5es\\n- [fastfetch](https://github.com/fastfetch-cli/fastfetch) \u2b50\\n    - **Substitui**: `neofetch`\\n    - **Uso di\xe1rio**: Baixo\\n    - **Nota**: Provid\xeancia mais informa\xe7\xe3o e o projeto n\xe3o foi abandonado\\n- [jq](https://jqlang.github.io/jq/)\\n    - **Substitui**: ---\\n    - **Uso di\xe1rio**: Baixo\\n    - **Nota**: Praticamente nunca uso pois trato JSON por c\xf3digo\\n\\n## TUI\\n- [bottom](https://github.com/ClementTsang/bottom)\\n    - **Substitui**: `htop`, `top`\\n    - **Uso di\xe1rio**: Baixo\\n    - **Nota**: Praticamente nunca uso pois \xe9 muito chato ter que lembrar de todos os atalhos, acabo voltando para `htop`\\n- [superfile](https://superfile.netlify.app/)\\n    - **Substitui**: ---\\n    - **Uso di\xe1rio**: Baixo\\n    - **Nota**: Nunca uso pois dificilmente tenho necessidade de usar file manager no terminal\\n- [yazi](https://github.com/sxyazi/yazi)\\n    - **Substitui**: ---\\n    - **Uso di\xe1rio**: Baixo\\n    - **Nota**: Nunca uso pois dificilmente tenho necessidade de usar file manager no terminal\\n- [micro](https://micro-editor.github.io/) \u2b50\\n    - **Substitui**: `nano`\\n    - **Uso di\xe1rio**: Alto\\n    - **Nota**: Muito mais parecido com um editor de texto do dia a dia\\n\\n## Shells\\n- [fish](https://fishshell.com/)\\n    - **Substitui**: `bash`\\n    - **Nota 1**: Provid\xeancia uma \xf3tima experi\xeancia logo de cara\\n    - **Nota 2**: Sintaxe melhor que `bash` por\xe9m ainda n\xe3o da vontade de aprender\\n- [nushell](https://www.nushell.sh/) \u2b50\\n    - **Substitui**: `bash`, `fish`\\n    - **Nota 1**: Provid\xeancia uma \xf3tima experi\xeancia logo de cara\\n    - **Nota 2**: Sintaxe muito mais agrad\xe1vel\\n    - **Nota 3**: Remove a necessidade de possuir `jq`\\n    - **Nota 4**: Remove a necessidade de possuir `curl` pois possui o comando `http`\\n    - **Nota 5**: Remove a necessidade de possuir `df`/`duf` pois possui o comando `sys disks`\\n\\nEm shells \\"uso di\xe1rio\\" \xe9 100% de quando voc\xea utilizar o shell, ent\xe3o sempre \xe9 alto.  \\n\\n## Prompt\\n- [Starship](https://starship.rs/) \u2b50\\n    - **Opni\xe3o 1**: Permite grande costumiza\xe7\xe3o do prompt com facilidade, tornando o prompt mais agrad\xe1vel\\n    - **Opni\xe3o 2**: Quando lidando com Git possue um peso considerativo\\n\\nEm prompts \\"subsititui\\" \xe9 sempre sobre substituir o padr\xe3o.  \\nEm prompts \\"uso di\xe1rio\\" \xe9 100% de quando voc\xea utilizar o shell, ent\xe3o sempre \xe9 alto.  \\n\\n## References\\n- https://terminalroot.com/list-of-30-modern-alternatives-to-unix-commands/  \\n- https://gabevenberg.com/posts/cli-renaissance/"},{"id":"/2024/07/29/lock-file-process","metadata":{"permalink":"/en/blog/2024/07/29/lock-file-process","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-07-29-lock-file-process/index.md","source":"@site/blog/2024-07-29-lock-file-process/index.md","title":"Lock Files in Process","description":"Imagem mostrando camada do App, OS e Hardwares","date":"2024-07-29T00:00:00.000Z","formattedDate":"July 29, 2024","tags":[{"label":"lock","permalink":"/en/blog/tags/lock"},{"label":"c","permalink":"/en/blog/tags/c"},{"label":"file","permalink":"/en/blog/tags/file"},{"label":"process","permalink":"/en/blog/tags/process"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["lock","c","file","process"]},"unlisted":false,"prevItem":{"title":"Terminal Tools","permalink":"/en/blog/2024/09/03/terminal-tools"},"nextItem":{"title":"Making games for streamers seems hard as f***","permalink":"/en/blog/2024/06/22/game-stream-industry"}},"content":"![Imagem mostrando camada do App, OS e Hardwares](./os.svg)  \\n\\nQuando voc\xea quer ler o arquivo, voc\xea pede ao sistema operacional pelo conte\xfado do arquivo.  \\n\\nQuando voc\xea quer escrever no arquivo, voc\xea pede ao sistema operacional para inserir o conte\xfado no arquivo.  \\n\\n\xc9 importante saber que o sistema operacional toma diversos cuidados para que desenvolvedores n\xe3o acessem diretamente o hardware, ou seja, por baixo dos panos voc\xea est\xe1 pedindo para o sistema operacional ler/escrever.  \\n\\n- C\\n    - `fgets()`\\n    - `fwrite()`\\n- Python\\n    - `file.read()`\\n    - `file.write()`\\n- Rust\\n    - `file.read_to_string()`\\n    - `file.write_all()`\\n- Go\\n    - `os.ReadFile()`\\n    - `os.WriteFile()`\\n\\nVeremos como garantir a seguran\xe7a de um arquivo quando se tem m\xfaltiplos processos querendo altera-lo.  \\n\\n## Process\\nA fun\xe7\xe3o utilizada para se criar processos \xe9 `fork()`, est\xe1 fun\xe7\xe3o faz com que o atual processo crie um processo filho quase id\xeantico e executando o mesmo c\xf3digo que o pai.  \\n\\nOlhe este c\xf3digo que printa duas vezes \\"Hi\\":  \\n\\n```C\\n#include <stdio.h>\\n#include <unistd.h>\\n\\nint main() {\\n    fork();\\n    printf(\\"Hi\\\\n\\");\\n}\\n```\\n\\nSe voc\xea executa-lo ir\xe1 notar que o filho \xe9 t\xe3o igual ao pai que ele continua exatamente do mesmo local que o pai se encontrava (logo ap\xf3s `fork()` retornar um valor). Se tivessemos vari\xe1veis, poderiamos ver que at\xe9 o valor delas s\xe3o id\xeanticos ao do pai.  \\n\\nNo entanto, precisamos de uma maneira de reconhecer quem \xe9 o pai e filho, caso contr\xe1rio este c\xf3digo execut\xe1ria exatamente a mesma coisa para ambos (n\xe3o seria nada produtivo). Acontece que a fun\xe7\xe3o `fork()` retorna um valor e este valor \xe9 utilizado para sabermos se estamos no pai ou no filho.  \\n\\n```C\\n#include <stdio.h>\\n#include <unistd.h>\\n\\nint main() {\\n  int pid = fork();\\n\\n  if (pid == -1) {\\n    printf(\\"Failed to create child process\\\\n\\");\\n  } else if (pid == 0) {\\n    printf(\\"I\'m the child process\\\\n\\");\\n  } else {\\n    printf(\\"I\'m the parent process\\\\n\\");\\n  }\\n}\\n```\\n\\nA fun\xe7\xe3o `fork()` vai retornar ao pai o PID do filho (ou -1 em caso de error).  \\nA fun\xe7\xe3o `fork()` vai retornar ao filho zero.  \\n\\n:::tip\\nNormalmente o c\xf3digo do pai e filho s\xe3o inseridos em fun\xe7\xf5es em vez de deixar tudo dentro de um if/else.  \\n\\n```C\\nif(pid == 0) {\\n  child_code();\\n} else {\\n  parent_code();\\n}\\n```\\n\\nOu se utiliza fun\xe7\xf5es `exec` para transformar completamente o c\xf3digo executado naquele processo.  \\n:::\\n\\n## Problem\\n![Imagem ilustrativa do app 1 lendo do arquivo, app 2 lendo do arquivo, app 1 escrevendo no arquivo, app 2 escrevendo no arquivo](./problem.svg)  \\n\\nQuando dois processos interagem com o mesmo arquivo, pode acontecer da informa\xe7\xe3o ser preenchida incorretamente? Afinal, precisamos primeiramente descobrir se isso \xe9 poss\xedvel ou n\xe3o de acontecer.  \\n\\nComo o escalonamento pode ser imprevisivel, uma maneira de testar se durante a intera\xe7\xe3o com um arquivo houve troca de processo \xe9 repetindo a a\xe7\xe3o diversas vezes e ver se pelo menos uma vez ocorreu.  \\n\\nO seguinte c\xf3digo ir\xe1 ser executado para o processo pai e filho:  \\n\\n```C\\nint count = 0;\\nFILE* file = fopen(\\"example.txt\\", \\"w+\\");\\n\\nwhile(count < 10000) {\\n    int i;\\n    \\n    fseek(file, 0, SEEK_SET);\\n    fscanf(file, \\"%d\\", &i);\\n    fseek(file, 0, SEEK_SET);\\n    fprintf(file, \\"%d     \\", ++i);\\n    \\n    count++;\\n}\\n\\nfclose(file);\\n```\\n\\nO c\xf3digo ir\xe1 garantir que o cursor est\xe1 no in\xedcio do arquivo, ler o atual n\xfamero do arquivo, mover o cursor para o in\xedcio do arquivo e sobreescrever o n\xfamero.  \\n\\n:::note\\n```C\\nfprintf(file, \\"%d     \\", ++i);\\n```\\n\\nPor que inserir espa\xe7o ap\xf3s o n\xfamero? Foi uma maneira de evitar que o n\xfamero de ambos processos se misturem.  \\n\\nPor exemplo: Processo 1 escreve 5000 e processo 2 escreve 9, o arquivo ir\xe1 conter \\"9000\\" pois o 9 foi escrito em cima do 5.  \\n:::\\n\\nAgora s\xf3 precisamos adicionar a l\xf3gica de criar processo vista anteriormente:  \\n\\n```C\\n#include <stdio.h>\\n#include <unistd.h>\\n\\nvoid code() {\\n  int count = 0;\\n  FILE* file = fopen(\\"example.txt\\", \\"w+\\");\\n  \\n  while(count < 10000) {\\n    int i;\\n    \\n    fseek(file, 0, SEEK_SET);\\n    fscanf(file, \\"%d\\", &i);\\n    fseek(file, 0, SEEK_SET);\\n    fprintf(file, \\"%d     \\", ++i);\\n    \\n    count++;\\n  }\\n  \\n  fclose(file);\\n}\\n\\nint main() {\\n  FILE* file = fopen(\\"example.txt\\", \\"w\\");\\n  fputc(\'0\', file);\\n  fclose(file);\\n  \\n  int pid = fork();\\n\\n  if (pid == -1) {\\n    printf(\\"Failed to create child process\\\\n\\");\\n  } else if (pid == 0) {\\n    code();\\n    printf(\\"Child finished\\\\n\\");\\n  } else {\\n    code();\\n    printf(\\"Parent finished\\\\n\\");\\n  }\\n}\\n```\\n\\nQuando executei este c\xf3digo para 10 itera\xe7\xf5es, o valor final do arquivo foi 20.  \\nQuando executei este c\xf3digo para 1000 itera\xe7\xf5es, o valor final do arquivo foi 1000.  \\nQuando executei este c\xf3digo para 10000 itera\xe7\xf5es, o valor final do arquivo foi 10015.  \\n\\nO que somos capaz de deduzir com isto?  \\n\\n- O resultado \xe9 imprevis\xedvel pois n\xe3o temos controle de quando o escalonador vai trocar os processos\\n- Dependendo do volume de itera\xe7\xf5es e da m\xe1quina do usu\xe1rio, um processo pode ou n\xe3o conseguir fazer a tarefa antes do escalonador trocar o processo\\n- Se houver troca durante uma tarefa, pode corromper o resultado do arquivo\\n\\nQuais as chances disto acontecer? Depende do software, pois existem arquivos que a chance de dois softwares interagirem ao mesmo tempo \xe9 0%.  \\n\\n## Locks\\nAcontece que existe mais de uma maneira de aplicar locks no Linux.  \\n\\n![Uma pessoa bem surpresa](./very_surprise.svg)  \\n\\n- [flock](https://man7.org/linux/man-pages/man2/flock.2.html)\\n  - **f**ile **lock**\\n  - Origem do sistema operacional BSD\\n- [lockf](https://man7.org/linux/man-pages/man3/lockf.3.html)\\n  - **lock** **f**ile\\n  - POSIX\\n  - \xc9 uma vers\xe3o simplificada do _fcntl \\"Advisory record locking\\"_\\n- [fcntl \\"Advisory record locking\\"](https://man7.org/linux/man-pages/man2/fcntl.2.html)\\n  - **f**ile **c**o**nt**ro**l**\\n  - POSIX\\n  - Uma fun\xe7\xe3o capaz de fazer diversas opera\xe7\xf5es sobre file descriptors\\n    - Uma delas \xe9 utilizar \\"Advisory record locking\\"\\n- [fcntl \\"Open file description locks (non-POSIX)\\"](https://man7.org/linux/man-pages/man2/fcntl.2.html)\\n  - **f**ile **c**o**nt**ro**l**\\n  - Linux specific\\n    - Existem propostas para ser adicionado ao padr\xf5es POSIX\\n  - Uma fun\xe7\xe3o capaz de fazer diversas opera\xe7\xf5es sobre file descriptors\\n    - Uma delas \xe9 utilizar \\"Open file description locks (non-POSIX)\\"\\n\\nSe quiser saber mais sobre cada um, \xe9 bom ler o post no blog: https://gavv.net/articles/file-locks/  \\nIncrivel como um blog de 8 anos atr\xe1s me ajudou mais do que pesquisas no Google.  \\n\\n### flock\\n\\n```C\\n#include <stdio.h>\\n#include <stdlib.h>\\n#include <string.h>\\n#include <sys/file.h>\\n#include <unistd.h>\\n\\n#define BUFFER_SIZE 256\\n\\nvoid code() {\\n  int count = 0;\\n  char *buffer = malloc(sizeof(char) * BUFFER_SIZE);\\n  int fd = open(\\"example.txt\\", O_RDWR);\\n\\n  while (count < 10000) {\\n    int i;\\n\\n    flock(fd, LOCK_EX);\\n    lseek(fd, 0, SEEK_SET);\\n    read(fd, buffer, BUFFER_SIZE);\\n    i = atoi(buffer) + 1;\\n    sprintf(buffer, \\"%d     \\", i);\\n    lseek(fd, 0, SEEK_SET);\\n    write(fd, buffer, strlen(buffer));\\n    flock(fd, LOCK_UN);\\n\\n    count++;\\n  }\\n\\n  close(fd);\\n}\\n\\nint main() {\\n  FILE *file = fopen(\\"example.txt\\", \\"w\\");\\n  fputc(\'0\', file);\\n  fclose(file);\\n\\n  int pid = fork();\\n\\n  if (pid == -1) {\\n    printf(\\"Failed to create child process\\\\n\\");\\n  } else if (pid == 0) {\\n    code();\\n    printf(\\"Child finished\\\\n\\");\\n  } else {\\n    code();\\n    printf(\\"Parent finished\\\\n\\");\\n  }\\n}\\n```\\n\\n### lockf\\n\\n```C\\n#include <fcntl.h>\\n#include <stdio.h>\\n#include <stdlib.h>\\n#include <string.h>\\n#include <unistd.h>\\n\\n#define BUFFER_SIZE 256\\n\\nvoid code() {\\n  int count = 0;\\n  char *buffer = malloc(sizeof(char) * BUFFER_SIZE);\\n  int fd = open(\\"example.txt\\", O_RDWR);\\n\\n  while (count < 10000) {\\n    int i;\\n\\n    lockf(fd, F_LOCK, 0);\\n    lseek(fd, 0, SEEK_SET);\\n    read(fd, buffer, BUFFER_SIZE);\\n    i = atoi(buffer) + 1;\\n    sprintf(buffer, \\"%d     \\", i);\\n    lseek(fd, 0, SEEK_SET);\\n    write(fd, buffer, strlen(buffer));\\n    lockf(fd, F_ULOCK, 0);\\n\\n    count++;\\n  }\\n\\n  close(fd);\\n}\\n\\nint main() {\\n  FILE *file = fopen(\\"example.txt\\", \\"w\\");\\n  fputc(\'0\', file);\\n  fclose(file);\\n\\n  int pid = fork();\\n\\n  if (pid == -1) {\\n    printf(\\"Failed to create child process\\\\n\\");\\n  } else if (pid == 0) {\\n    code();\\n    printf(\\"Child finished\\\\n\\");\\n  } else {\\n    code();\\n    printf(\\"Parent finished\\\\n\\");\\n  }\\n}\\n```\\n\\n### fcntl - \\"Advisory record locking\\"\\n\\n```C\\n#include <fcntl.h>\\n#include <stdio.h>\\n#include <stdlib.h>\\n#include <string.h>\\n#include <unistd.h>\\n\\n#define BUFFER_SIZE 256\\n\\nvoid code() {\\n  int count = 0;\\n  struct flock fl;\\n  char *buffer = malloc(sizeof(char) * BUFFER_SIZE);\\n  int fd = open(\\"example.txt\\", O_RDWR);\\n\\n  fl.l_whence = SEEK_SET;\\n  fl.l_start = 0;\\n  fl.l_len = 0;\\n\\n  while (count < 10000) {\\n    int i;\\n\\n    fl.l_type = F_WRLCK;\\n    fcntl(fd, F_SETLKW, &fl);\\n    lseek(fd, 0, SEEK_SET);\\n    read(fd, buffer, BUFFER_SIZE);\\n    i = atoi(buffer) + 1;\\n    sprintf(buffer, \\"%d     \\", i);\\n    lseek(fd, 0, SEEK_SET);\\n    write(fd, buffer, strlen(buffer));\\n    fl.l_type = F_UNLCK;\\n    fcntl(fd, F_SETLKW, &fl);\\n\\n    count++;\\n  }\\n\\n  close(fd);\\n}\\n\\nint main() {\\n  FILE *file = fopen(\\"example.txt\\", \\"w\\");\\n  fputc(\'0\', file);\\n  fclose(file);\\n\\n  int pid = fork();\\n\\n  if (pid == -1) {\\n    printf(\\"Failed to create child process\\\\n\\");\\n  } else if (pid == 0) {\\n    code();\\n    printf(\\"Child finished\\\\n\\");\\n  } else {\\n    code();\\n    printf(\\"Parent finished\\\\n\\");\\n  }\\n}\\n```\\n\\n## References\\n- https://www.youtube.com/watch?v=ioJkA7Mw2-U\\n    - O importante do video \xe9 o in\xedcio que explica como chamadas ao sistema s\xe3o feitas\\n- https://man7.org/linux/man-pages/man3/lockf.3.html\\n- https://man7.org/linux/man-pages/man2/flock.2.html\\n- https://man7.org/linux/man-pages/man2/fcntl.2.html\\n- https://man7.org/linux/man-pages/man3/flockfile.3.html\\n- https://man7.org/linux/man-pages/man3/fdopen.3.html\\n- https://en.wikipedia.org/wiki/Unistd.h\\n- https://en.wikipedia.org/wiki/C_standard_library\\n- https://en.wikipedia.org/wiki/C_file_input/output\\n- https://en.wikipedia.org/wiki/File_descriptor\\n- https://en.wikipedia.org/wiki/File_locking\\n- https://gavv.net/articles/file-locks/\\n\\n## Extra\\nPor divers\xe3o, eu experimentei replicar o mesmo problema em outras linguagens.  \\n\\n```go\\npackage main\\n\\nimport (\\n\\t\\"fmt\\"\\n\\t\\"os\\"\\n\\t\\"os/exec\\"\\n)\\n\\nfunc code() {\\n\\tvar count int = 0\\n\\tfile, _ := os.OpenFile(\\"example.txt\\", os.O_RDWR, 0666)\\n\\n\\tfor count < 10000 {\\n\\t\\tvar i int\\n\\n\\t\\tfile.Seek(0, 0)\\n\\t\\tfmt.Fscanf(file, \\"%d\\", &i)\\n\\t\\tfile.Seek(0, 0)\\n\\t\\tfmt.Fprintf(file, \\"%d     \\", i+1)\\n\\n\\t\\tcount++\\n\\t}\\n\\n\\tfile.Close()\\n}\\n\\nfunc main() {\\n\\tif len(os.Args) >= 2 {\\n\\t\\tcode()\\n\\t\\tfmt.Println(\\"Child finished\\")\\n\\t} else {\\n\\t\\tos.WriteFile(\\"example.txt\\", []byte{\'0\'}, 0600)\\n\\n\\t\\tcommand := exec.Command(\\"/usr/bin/go\\", \\"run\\", \\"main.go\\", \\"fork\\")\\n\\t\\tcommand.Start()\\n\\t\\tcode()\\n\\t\\tcommand.Wait()\\n\\n\\t\\tfmt.Println(\\"Parent finished\\")\\n\\t}\\n}\\n```"},{"id":"/2024/06/22/game-stream-industry","metadata":{"permalink":"/en/blog/2024/06/22/game-stream-industry","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-06-22-game-stream-industry/index.md","source":"@site/blog/2024-06-22-game-stream-industry/index.md","title":"Making games for streamers seems hard as f***","description":"My english is trash :v","date":"2024-06-22T00:00:00.000Z","formattedDate":"June 22, 2024","tags":[{"label":"game","permalink":"/en/blog/tags/game"},{"label":"streaming","permalink":"/en/blog/tags/streaming"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["game","streaming"]},"unlisted":false,"prevItem":{"title":"Lock Files in Process","permalink":"/en/blog/2024/07/29/lock-file-process"},"nextItem":{"title":"Authentication - email & password","permalink":"/en/blog/2024/05/31/auth-email-password"}},"content":":::warn\\nMy english is trash :v\\n:::\\n\\nRemember the old days where we would immerse ourselfs while reading books?  \\n\\nI don\'t... I suck at books.  \\n\\n![Person laughing](haha.svg)  \\n\\nBut you know the feeling, right? We just have to change books for movies/games/sports...  \\n\\nPretty sure that after the title and text above, you can guess everything that I\'m going to write about (if you reflect deep enough, you don\'t even have to read this post...).  \\n\\n## Storytelling\\n\\nWhat do theaters, movie theaters and libraries have in common? When you make noise, people go \\"Shh\\".  \\n\\n![Person making \\"shhhh!\\"](shh.svg)  \\n\\nI\'m joking... They are storytelling places.  \\n\\nWhere you go to read, watch, see, or hear a predetermined story. The author tries to build a path for how you should feel in that storytelling (sometimes is not even close).  \\n\\nVideo games are storytelling? If you put a story in it... Yes! They may not be the best storytelling because it\'s hard to control what players feel, but that\'s why people insert cinematics in games. \\n\\nCinematics are a way of telling a story without letting you ruin everything (I\'m being dramatic). Just think about what stupid thing players could if you let them free in the cinematic (probably throw themselves from a high place... I don\'t know).  \\n\\nPeople love to test the boundaries of the games or try to find something that the [author didn\'t count on](https://www.youtube.com/watch?v=lZXCgZZn6jg).  \\n\\nAnyway, I\'m getting off track. It\'s harder than movies and books because it\'s not just storytelling, but it\'s still possible to do a great job at it.  \\n\\n:::info\\n> \\"It\'s not **just** storytelling\\"\\n\\nNot saying that storytelling is easy, just that when you have to count everything that the player can do... Telling a good story becomes difficult.  \\n\\nThink about a great book or movie that somebody attempted to transform into a game... It\'s really hard to tell the same story. The developer may want them to feel like a great hero, but maybe they are pissed after dying 20 times to the same boss.  \\n\\n\xaf\\\\\\\\\\\\_(\u30c4)\\\\_/\xaf\\n:::\\n\\n## Immerse our selfs\\n\\nRemember when I joked about places where people \\"Shh\\" you? I wasn\'t joking.  \\n\\n![Person watching a monitor/tv](watching.svg)  \\n\\nIs kind of obvious that people \\"Shh\\" in those places because it\'s really hard to immerse in something, but it\'s very easy to lose focus.  \\n\\nWhen I say \\"immerse\\", think about the situation where you are so focused on something that you ignore somebody calling your name.  \\n\\nObviously, is important for storytelling games (except comedy, which is a free ticket to \\"f*ck it\\" town), but it\'s also important for competitive games! You don\'t have to immerse yourself in feelings but in the game mechanics (thinking about everything that others players can do).  \\n\\nThat\'s probably why we get more **angry** or **sad** after losing a competitive game where we invest ourselfs to win. Over time, we learn to manage these feelings better, but it\'s still not a happy feeling.    \\n\\n:::note\\n> \\"I don\'t get sad or angry\\"\\n\\nErr... Not even fustrated? Are you sure that you were invested in the game? Maybe you just didn\'t care about the game.  \\n:::\\n\\n## Attention problem\\n\\nAttention is a limited resource... We can\'t make 20 tasks at the same time and get the same quality of making one with all our attention (exceptions exist, but I don\'t think you are one of them).  \\n\\n![Person being distracted](attention.svg)  \\n<sub>(It was supposed to be someone getting distracted and dying in the game...)</sub>  \\n\\nA classic example is your parents trying to talk to you while you are playing. In this cases, you attempt to multitask between playing and answering them (if you are like me, you are probably dead in the game).  \\n\\nIn case of games/movies/books storytelling the same can happen... How can you get in the horror game mood of \\"I\'m going to die, I want to run\\" if you have to stop to do something for your parents just before the scary moment?  \\n\\n:::note\\n> Stop blaming the player, is also devs fault.\\n\\nYou want me to blame developers? Okay, it\'s also the developers fault for not making great storytelling that locks you into the screen... But this post is more about our problem, I can\'t just start badmouthing developers now (this post would get BIG and I don\'t have time to complain about everyone (I actually have... I\'m unemployed... Sad...)).  \\n:::\\n\\n## Streamers\\n\\n![Streamer playing](streamer.svg)\\n\\n> \\"Making games for streamers seems hard as f***\\"\\n\\nHow do you capture the attention of someone who may stop to read others people messages and thinking about an answer to them?  \\n\\nHow do you reproduce into another the feeling that you had when children where you would play in front of TV without noticing your parents calling you?  \\n\\nHow do you tell about the struggles of your character if the other person is busy reflecting their life to other people?  \\n\\nStreamers are not \\"just\\" players, they are entertainment too! This means that they need to share their attention with their viewers.  \\n\\n- Look at the chat to check if the stream didn\'t go offline\\n- Interact with the chat to show that you cares about them\\n- Thanks the subscrpitions and donations\\n- Express what is on their mind while playing because the viewers want to know\\n\\nI\'m not here to blame anyone, just pointing the difficulties.  \\n\\nCompared to other options for playing games:  \\n\\n- Playing the game alone in the room\\n    - You don\'t have to say a word\\n- Recording a video for Youtube\\n    - People normally want to know what is on your mind\\n    - I didn\'t reflect enough on this so I don\'t have another point... Sorry Youtubers\\n\\n## Conclusion\\n\\nI don\'t have any...  \\n\\nI don\'t know how developers attack this... They invest less in long immersive moments? They do more short content? They always assume that the player is a streamer? I mean, you can\'t just ignore the fact that a streamer could badmouth your game (this can affect sales, right?).  \\n\\n:::note\\nIt\'s always good to see that streamers know that this is something that can happen.  \\n\\nhttps://youtu.be/5LtQAcGxQlM?t=193\\n:::"},{"id":"/2024/05/31/auth-email-password","metadata":{"permalink":"/en/blog/2024/05/31/auth-email-password","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-05-31-auth-email-password/index.md","source":"@site/blog/2024-05-31-auth-email-password/index.md","title":"Authentication - email & password","description":"Este post parte do princ\xedpio que o leitor viu o post anterior!","date":"2024-05-31T00:00:00.000Z","formattedDate":"May 31, 2024","tags":[{"label":"authentication","permalink":"/en/blog/tags/authentication"},{"label":"auth","permalink":"/en/blog/tags/auth"},{"label":"email","permalink":"/en/blog/tags/email"},{"label":"mail","permalink":"/en/blog/tags/mail"},{"label":"password","permalink":"/en/blog/tags/password"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["authentication","auth","email","mail","password"]},"unlisted":false,"prevItem":{"title":"Making games for streamers seems hard as f***","permalink":"/en/blog/2024/06/22/game-stream-industry"},"nextItem":{"title":"Authentication - username & password","permalink":"/en/blog/2024/05/25/auth-username-password"}},"content":":::warning\\nEste post parte do princ\xedpio que o leitor viu o post anterior!  \\n\\nAl\xe9m disto este post for reescrito pois o formato n\xe3o estava do meu agrado (igual ao post anterior).  \\n\\nO reposit\xf3rio com exemplos continua vivo em:  \\nhttps://github.com/thiagola92/learning-authentication  \\n:::\\n\\nA l\xf3gica b\xe1sica \xe9 a mesma que o post anterior, por\xe9m usando o email no lugar do username.  \\n\\n![UI de login com email e password](./email_password.svg)  \\n\\nO que temos de extra \xe9 que podemos utilizar o email do usu\xe1rio para nos dar mais confian\xe7a que a pessoa acessando \xe9 o dono da conta.  \\n\\n## Register\\n\\n### Client\\nSegue exatamente o mesmo passo a passo do post anterior (utilizando o email em vez de usu\xe1rio).  \\n\\n### Server\\nSegue exatamente o mesmo passo a passo do post anterior (utilizando o email em vez de usu\xe1rio) por\xe9m n\xe3o cadastramos o usu\xe1rio ao final!  \\n\\n![Carta representando um email](email.svg)  \\n\\nO motivo \xe9 bem simples: O email fornecido \xe9 realmente da pessoa que cadastrou a conta?  \\n\\nImagina se n\xf3s terminassemos o cadastro acreditando naquele email... Dia seguinte aquele email poderia receber emails nosso, achar super esquisito e nos marcar como spam. Se isso acontecesse muito o Google iria acabar marcando nosso email corporativo como spam!  \\n\\nPara resolver esse problema basta cobrarmos uma prova que a pessoa \xe9 a dona do email. Podemos fazer isso enviando um email para ela e esperando que ela nos diga algo que possue no email.  \\n\\n:::note\\nPartindo do princ\xedpio que a pessoa dona do email \xe9 a \xfanica que deveria ter acesso ao email.  \\n:::\\n\\nO modo cl\xe1ssico \xe9 gerar um c\xf3digo no servidor e enviar para o email da pessoa este c\xf3digo, agora ela precisa acessar o email e nos dizer o c\xf3digo para provar que ela conseguiu o c\xf3digo certo.  \\n\\n![Vis\xe3o geral do processo](send_email.svg)  \\n\\nEmail \xe9 bom pois n\xf3s n\xe3o precisamos ser dependentes de terceiros para utilizar (Gmail/Outlook/etc).  \\n```python\\nimport smtplib\\nfrom email.message import EmailMessage\\n\\nmessage = EmailMessage()\\nmessage[\\"Subject\\"] = \\"Confirmation code\\"\\nmessage[\\"From\\"] = \\"noreply@yourwebsite.com\\"\\nmessage[\\"To\\"] = \\"user@example.com\\"\\nmessage.set_content(\\"Your confirmation code is 123\\")\\n\\n# I\'m running my own email server for tests\\nwith smtplib.SMTP(\\"localhost\\", 8025) as s:\\n    s.send_message(message)\\n```\\n\\n:::info\\nUtilizei a biblioteca [aiosmtpd](https://aiosmtpd.aio-libs.org/en/latest/) para criar o server de test:  \\n`python -m aiosmtpd -n`  \\n\\nSe tudo foi feito corretamente, todo email novo deve aparecer l\xe1 no formato:  \\n```\\n---------- MESSAGE FOLLOWS ----------\\nSubject: Confirmation code\\nFrom: noreply@yourwebsite.com\\nTo: user@example.com\\nContent: Your confirmation code is 123\\nX-Peer: (\'127.0.0.1\', 52020)\\n\\n------------ END MESSAGE ------------\\n```\\n:::\\n\\nPor\xe9m o exemplo acima \xe9 inseguro, pois n\xe3o utiliza a SLL (que ajuda a criar uma camada de seguran\xe7a entre n\xf3s e o servi\xe7o). Hoje em dia isso \xe9 obrigat\xf3rio para interagir com quase todos os servi\xe7os de email (eles n\xe3o v\xe3o aceitar emails sem essa seguran\xe7a).  \\n```python\\nimport smtplib\\nfrom email.message import EmailMessage\\n\\nmessage = EmailMessage()\\nmessage[\\"Subject\\"] = \\"Confirmation code\\"\\nmessage[\\"From\\"] = \\"noreply@yourwebsite.com\\"\\nmessage[\\"To\\"] = \\"user@example.com\\"\\nmessage.set_content(\\"Your confirmation code is 123\\")\\n\\nwith smtplib.SMTP(\\"localhost\\", 8024) as s:\\n    s.starttls()\\n    s.send_message(message)\\n```\\n\\n:::info\\nLevantei outro server de email e nele estou utilizando TLS.  \\n\\nCriei meu certificado auto-assinado:  \\n`openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj \'/CN=localhost\'`  \\n\\nE utilizei ele durante a inicializa\xe7\xe3o do server:  \\n`python -m aiosmtpd -n --tlscert cert.pem --tlskey key.pem -l localhost:8024`  \\n:::\\n\\nEnt\xe3o \xe9 isso? Podemos mandar email para provedores como Gmail? Nope.  \\n\\n![Rosto chorando](./sad.svg)  \\n\\nDeve ser bem \xf3bvio que embora este c\xf3digo funcione localmente, ele jamais passaria por qualquer seguran\xe7a do n\xedvel de aplica\xe7\xe3o.  \\n\\nEle possui TLS para proteger contra [man-in-the-middle](https://en.wikipedia.org/wiki/Man-in-the-middle_attack) mas como que o provedor vai saber que n\xf3s somos os donos daquele email? Se n\xf3s botarmos `noreply@gmail.com`, n\xf3s temos que provar que temos acesso \xe0 aquela conta no Gmail.  \\n\\nA maneira cl\xe1ssica \xe9 logar na conta.  \\n```python\\nimport smtplib\\nfrom email.message import EmailMessage\\n\\n# Removed \\"From\\" because providers will use the email used in s.login()\\nmessage = EmailMessage()\\nmessage[\\"Subject\\"] = \\"Confirmation code\\"\\nmessage[\\"To\\"] = \\"user@example.com\\"\\nmessage.set_content(\\"Your confirmation code is 123\\")\\n\\nwith smtplib.SMTP(\\"localhost\\", 8024) as s:\\n    s.starttls()\\n    s.login(\\"noreply@gmail.com\\", \\"password\\")\\n    s.send_message(message)\\n```\\n\\nEste c\xf3digo **n\xe3o** vai funcionar!  \\n\\nHoje em dia j\xe1 sabemos que usu\xe1rio e senha sozinhos n\xe3o provid\xeanciam uma seguran\xe7a forte durante a autentica\xe7\xe3o, por isso que Google nos cobra outros m\xe9todos de [MFA](https://en.wikipedia.org/wiki/Multi-factor_authentication) para provar que n\xf3s somos n\xf3s mesmos durante os logins (telefone, passkeys, authenticators, ...).  \\n\\nGoogle requer que voc\xea explicitamente adicione uma senha para aquele \\"app\\" e mesmo assim ele n\xe3o recomenda fazer isto!  \\n[Link para a resposta no StackOverflow](https://stackoverflow.com/questions/10147455/how-to-send-an-email-with-gmail-as-provider-using-python/27515833#comment138495306_27515833)  \\n\\nBem, vamos parar por aqui pois eu apenas tenho interesse em ver o conceito de seguran\xe7a com o email (n\xe3o quero ensinar a se autenticar em diversos provedores com email).  \\n\\n### Client 2\\nExiste duas op\xe7\xf5es aqui, a primeira \xe9 o server ter armazenado numa tabela tempor\xe1ria seu email, c\xf3digo enviado por email e hash da senha.  \\n\\n| email                | code | hash                                                             |\\n| -------------------- | ---- | ---------------------------------------------------------------- |\\n| thiagola92@email.com | 4893 | 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8 |\\n| darklord@email.com   | 3892 | 2d2c3f7eb9152d67258cd1068a64a746c130d4cca3f571bd28a86d7f7589aa25 |\\n| juninho@email.com    | 0283 | b7e94be513e96e8c45cd23d162275e5a12ebde9100a425c4ebcdd7fa4dcd897c |\\n\\nNeste caso basta o usu\xe1rio enviar o c\xf3digo para o server validar a conta.  \\n```python\\nimport httpx\\nfrom urllib.parse import urlencode\\n\\nbody = urlencode({\\"code\\": code})\\nheaders = {\\"Content-Type\\": \\"application/x-www-form-urlencoded\\"}\\n\\nhttpx.post(\\"http://127.0.0.1:8000/register/code\\", headers=headers, content=body)\\n```\\n\\n:::note\\nEmbora eu tenha feito como um requisi\xe7\xe3o POST, n\xe3o existe nenhuma obriga\xe7\xe3o de ser assim.  \\n\\nUma maneira mais familiar \xe9 o usu\xe1rio receber uma URL com o c\xf3digo/token para o usu\xe1rio acessar e isto seria o suficiente para confirmar.  \\n```\\nhttp://127.0.0.1:8000/register/{code}\\n```\\n:::\\n\\nA outra \xe9 ele n\xe3o ter armazenado o hash e s\xf3 esperar que voc\xea envie a senha novamente.  \\n\\n| email                | code |\\n| -------------------- | ---- |\\n| thiagola92@email.com | 4893 |\\n| darklord@email.com   | 3892 |\\n| juninho@email.com    | 0283 |\\n\\n```python\\nimport httpx\\nfrom urllib.parse import urlencode\\n\\nbody = urlencode({\\"email\\": email, \\"password\\": password, \\"code\\": code})\\nheaders = {\\"Content-Type\\": \\"application/x-www-form-urlencoded\\"}\\n\\nhttpx.post(\\"http://127.0.0.1:8000/register/code\\", headers=headers, content=body)\\n```\\n\\n:::note\\nEm ambas as tabelas \xe9 normal de ter a data de cria\xe7\xe3o do c\xf3digo, para que ele n\xe3o fique v\xe1lido para sempre (n\xe3o queremos que ningu\xe9m chute todas as op\xe7\xf5es de c\xf3digo).  \\n:::\\n\\n### Server 2\\nSegue exatamente o mesmo passo a passo do post anterior (utilizando o email em vez de usu\xe1rio).  \\n\\n## Recovery\\n\\n### Client\\nA grande vantagem de ter email \xe9 adicionar um ponto de recupera\xe7\xe3o de senha.  \\n\\n![Usu\xe1rio se perguntando qual a senha](./user_questioning_password.svg)  \\n\\nDado que o usu\xe1rio esqueceu a senha, ele s\xf3 precisa requisitar o resete de senha da conta relacionada a aquele email.  \\n```python\\nimport httpx\\nfrom urllib.parse import urlencode\\n\\nbody = urlencode({\\"email\\": email})\\nheaders = {\\"Content-Type\\": \\"application/x-www-form-urlencoded\\"}\\n\\nhttpx.post(\\"http://127.0.0.1:8000/recovery\\", headers=headers, content=body)\\n```\\n\\nComo estamos falando do caso em que o usu\xe1rio n\xe3o lembra a senha, n\xe3o podemos cobrar nenhuma autentica\xe7\xe3o... Em outras palavras, qualquer pessoa m\xe1 intencionada pode ficar requisitando e resta ao server tomar cuidados para elas n\xe3o conseguirem acesso.  \\n\\n### Server\\n\xc9 a mesma ideia do login, queremos confirmar que \xe9 o dono da conta ent\xe3o mandamos para o email dele um c\xf3digo/token para ele utilizar na altera\xe7\xe3o da senha atual dele.  \\n\\nLembrando que \xe9 importante botarmos tempo para o usu\xe1rio fazer essa altera\xe7\xe3o e limite de tentativas, pois n\xe3o queremos que usu\xe1rios m\xe1 intencionados usem for\xe7a bruta para descobrir o c\xf3digo/token.  \\n\\n### Client 2\\nBasicamente id\xeantico ao registrar, por\xe9m temos que fornecer a nova senha. Isto pode ser feito tudo em uma requisi\xe7\xe3o ou em duas (acessar o URL com token e inserir a nova senha em um form).  \\n\\n### Server 2\\nValide o c\xf3digo/token!  \\n\\n![Carimbo](./stamp.svg)  \\n\\nCada tentativa errada \xe9 um sinal de perigo, por isso \xe9 importante lembrar:  \\n- Invalidar o c\xf3digo/token depois de certo tempo\\n    - Por isto alguns tokens s\xe3o grandes, pois nunca \xe9 poss\xedvel chutar todas as possibilidades antes do tempo esgotar\\n- Contar o n\xfamero de tentativas de acertar o c\xf3digo/token para um email\\n    - Importante invalidar o c\xf3digo depois de certo n\xfamero de tentativas, n\xe3o queremos X m\xe1quinas tentando acertar o c\xf3digo\\n\\n## References\\n- https://docs.python.org/3/library/smtplib.html\\n- https://aiosmtpd.aio-libs.org/en/latest/\\n- https://stackabuse.com/how-to-send-emails-with-gmail-using-python/\\n- https://www.youtube.com/watch?v=PJo5yOtu7o8\\n- https://mailtrap.io/blog/smtp/\\n- https://mailtrap.io/blog/setup-smtp-server/\\n- https://mailtrap.io/blog/what-is-smtp-server/\\n- https://stackoverflow.com/questions/10147455/how-to-send-an-email-with-gmail-as-provider-using-python/27515833#comment138495306_27515833"},{"id":"/2024/05/25/auth-username-password","metadata":{"permalink":"/en/blog/2024/05/25/auth-username-password","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-05-25-auth-username-password/index.md","source":"@site/blog/2024-05-25-auth-username-password/index.md","title":"Authentication - username & password","description":"Eu n\xe3o estava feliz que o post era muito \\"aqui o c\xf3digo de X/Y/Z\\", pois gerava pared\xe3o de texto. E quando escrevo estes posts, a inten\xe7\xe3o \xe9 refor\xe7ar conhecimento para no futuro eu conseguir voltar e relembrar do assunto (e n\xe3o do c\xf3digo em espec\xedfico).","date":"2024-05-25T00:00:00.000Z","formattedDate":"May 25, 2024","tags":[{"label":"authentication","permalink":"/en/blog/tags/authentication"},{"label":"auth","permalink":"/en/blog/tags/auth"},{"label":"user","permalink":"/en/blog/tags/user"},{"label":"username","permalink":"/en/blog/tags/username"},{"label":"password","permalink":"/en/blog/tags/password"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["authentication","auth","user","username","password"]},"unlisted":false,"prevItem":{"title":"Authentication - email & password","permalink":"/en/blog/2024/05/31/auth-email-password"},"nextItem":{"title":"TTY, Terminal, Shell, CLI, TUI, GUI","permalink":"/en/blog/2024/04/20/tty-terminal-shell-cli-tui-gui"}},"content":":::warning\\nEu n\xe3o estava feliz que o post era muito \\"aqui o c\xf3digo de X/Y/Z\\", pois gerava pared\xe3o de texto. E quando escrevo estes posts, a inten\xe7\xe3o \xe9 refor\xe7ar conhecimento para no futuro eu conseguir voltar e relembrar do assunto (e n\xe3o do c\xf3digo em espec\xedfico).  \\n\\nO reposit\xf3rio com exemplos continua vivo em:  \\nhttps://github.com/thiagola92/learning-authentication  \\n:::\\n\\nUsername com password \xe9 uma das maneiras mais velhas de se criar autentica\xe7\xe3o no seu sistema.  \\n\\n![UI para login](./username_password.svg)  \\n\\nN\xf3s confiaremos que aquele usu\xe1rio \xe9 o dono da conta se ele souber a senha que est\xe1 relacionada \xe0quele username. Note que falei \\"confiaremos\\" pois nunca podemos ter 100% de certeza, s\xf3 estamos tentando reduzir a possibilidade de ser algu\xe9m indesejado na conta.  \\n\\n## Register\\n\\n### Client\\n![UI para registrar](./register.svg)  \\n\\nPara entender como o registro de novos usu\xe1rios funciona, podemos olhar como formul\xe1rios em HTML funcionam.  \\n\\n```html\\n<form action=\\"./register\\">\\n</form>\\n```\\n\\nFormul\xe1rios coletam todos os dados dos elementos `<input>` dentro deles e enviam para o endere\xe7o especificado no atributo `action`. Tenha em mente que enviar quer dizer \\"mandar para aquele **endpoint** um request **HTTP**\\".  \\n\\n:::note\\nCaso voc\xea j\xe1 tenha feito uma API REST em qualquer linguagem, voc\xea pode come\xe7ar a notar detalhes familiares. Acontece que os navegadores n\xe3o fazem nenhuma m\xe1gica, eles enviam o mesmo tipo de request que voc\xea est\xe1 acostumado a lidar no backend de APIs REST.  \\n:::\\n\\nComo eu estou escrevendo isto ao mesmo tempo que testo o c\xf3digo, eu vou trocar o endpoint para a minha API (`http://127.0.0.1:8000/register`).  \\n\\n```html\\n<form action=\\"http://127.0.0.1:8000/register\\">\\n</form>\\n```\\n\\nN\xf3s precisamos adicionar o input do tipo `submit` pois ele \xe9 utilizado para engatilhar o envio.  \\n\\n```html\\n<form action=\\"http://127.0.0.1:8000/register\\">\\n  <input type=\\"submit\\" value=\\"register\\">\\n</form>\\n```\\n\\nSe voc\xea clicar no bot\xe3o de registrar, voc\xea mandara um request GET para o endpoint `register`, com nenhuma informa\xe7\xe3o pois n\xe3o existe nenhum campo `input` que segure informa\xe7\xe3o.  \\n\\nNo nosso caso precisamos de um campo para o username e outro para o password:  \\n```html\\n<form action=\\"http://127.0.0.1:8000/register\\">\\n  <input type=\\"text\\" name=\\"username\\" value=\\"username\\"><br>\\n  <input type=\\"password\\" name=\\"password\\" value=\\"password\\"><br>\\n  <input type=\\"submit\\" value=\\"register\\">\\n</form>\\n```\\n\\nNote que utilizamos os tipos `text` e `password` apenas para dar o comportamento correto no navegador. O importante mesmo \xe9 o atributo `name` pois ele define o nome a qual o valor vai estar relacionado quando enviado.  \\n\\nSe clicarmos no bot\xe3o de registrar, enviaremos as informa\xe7\xf5es na URL:  \\n`/register?username=username&password=password`  \\n\\nPor padr\xe3o o formul\xe1rio envia um request GET, o que \xe9 \xf3timo se voc\xea quiser compartilhar URL com algu\xe9m ou salvar no favoritos.  \\n\\nPor\xe9m n\xe3o \xe9 nada seguro quando estamos falando de informa\xe7\xe3o sens\xedvel como a senha do usu\xe1rio! Neste caso queremos enviar no corpo do request POST (onde n\xe3o fica vis\xedvel a qualquer pessoa olhando a tela do seu computador).  \\n\\nPodemos especificar o m\xe9todo utilizado no request atr\xe1ves do atributo `method`:  \\n```html\\n<form action=\\"http://127.0.0.1:8000/register\\" method=\\"post\\">\\n  <input type=\\"text\\" name=\\"username\\" value=\\"username\\"><br>\\n  <input type=\\"password\\" name=\\"password\\" value=\\"password\\"><br>\\n  <input type=\\"submit\\" value=\\"register\\">\\n</form>\\n```\\n\\nAgora ao clicar no bot\xe3o de registrar, enviaremos as informa\xe7\xf5es no corpo do request e a URL para qual voc\xea vai ser direcionado **n\xe3o** vai conter seus dados (`/register`).  \\n\\nCorpo do request: `username=username&password=password`  \\n\\n:::note\\nNote que no final das contas \xe9 o mesmo formato por\xe9m em lugares diferentes.  \\n\\nSe voc\xea tiver uma API, conseguir\xe1 ver que ambos possuem o campo `content-type` da requisi\xe7\xe3o com o valor `application/x-www-form-urlencoded`.  \\n:::\\n\\nTudo isto poderia ser reproduzido em python com:  \\n```python\\nimport httpx\\nfrom urllib.parse import urlencode\\n\\nbody = urlencode({\\"username\\": username, \\"password\\": password})\\nheaders = {\\"Content-Type\\": \\"application/x-www-form-urlencoded\\"}\\n\\nhttpx.post(\\"http://127.0.0.1:8000/register\\", headers=headers, content=body)\\n```\\n\\n:::note\\nEu continuarei mostrando o c\xf3digo Python equivalente ao que seria feito pelo navegador/server pois acho que da uma vis\xe3o l\xf3gica de como as coisas s\xe3o feitas por baixo dos panos.  \\n:::\\n\\n### Server\\nOkay, seu server recebeu a requisi\xe7\xe3o de cadastro do usu\xe1rio. O que fazer agora? Valida\xe7\xf5es!  \\n\\n![Robo lendo um papel](./server_reading.svg)  \\n\\nO conte\xfado da requisi\xe7\xe3o est\xe1 no formato esperado?  \\n\\nPodemos verificar se o campo `content-type` est\xe1 com `application/x-www-form-urlencoded`.  \\n```python\\nif request.headers.get(\\"Content-Type\\") != \\"application/x-www-form-urlencoded\\":\\n    raise Exception(\\"Invalid body format\\")\\n```\\n\\nClaro que isso n\xe3o impede o usu\xe1rio de formatar o conte\xfado incorretamente, por\xe9m agora podemos assumir que ele errou o formato e enviarmos uma mensagem de erro coerente com o problema.  \\n```python\\ntry:\\n    body = await request.body()\\n    body = body.decode()\\n    fields = parse_qs(body)\\nexcept ValueError:\\n    raise Exception(\\"Body incorrectly formatted\\")\\n```\\n\\nE se o usu\xe1rio esquecer um dos campos? Sim, precisamos validar isto tamb\xe9m.  \\n```python\\nif \\"username\\" not in fields or \\"password\\" not in fields:\\n    return Exception(\\"Missing username or password\\")\\n```\\n\\nE se o usu\xe1rio tiver caracters inv\xe1lido?  \\nE se a senha tiver caracters inv\xe1lido?  \\nE se o usu\xe1rio j\xe1 existir no banco?  \\n...  \\n\\nAcho que voc\xea j\xe1 entendeu que valida\xe7\xe3o \xe9 importante.  \\nAgora vamos falar de storage!  \\n\\n![Database](./database.svg)  \\n\\nComo se armazena o username?  \\nIgual a qualquer outro campo texto...  \\n\\nComo se armazena a senha?  \\nN\xe3o se armazena senha...  \\n\\nPode parecer estranho a primeira vista mas n\xe3o precisamos armazenar a senha para conferir se algu\xe9m nos deus a senha correta.  \\n\\nExistem **fun\xe7\xf5es hash criptogr\xe1ficas** que produzem sa\xeddas com propriedades que nos ajudam a conferir se a senha de um usu\xe1rio est\xe1 correta.  \\n\\nPropriedades que nos interess\xe3o nessas fun\xe7\xf5es:\\n- Dada uma entrada de bytes, sempre produz a mesma sa\xedda de bytes\\n    - Nada de especial aqui, apenas est\xe1 garantindo que n\xe3o \xe9 afetado por outro fatores aleat\xf3rios (tempo, temperatura, etc)\\n- N\xe3o existe fun\xe7\xe3o que reverte a opera\xe7\xe3o\\n    - Em outras palavras, tendo a sa\xedda de bytes da fun\xe7\xe3o voc\xea n\xe3o consegue saber a entrada que foi dada para a fun\xe7\xe3o hash (sem ir chutando todas as possibilidades)\\n- Qualquer mudan\xe7a na entrada de bytes gera uma sa\xedda de bytes muito diferente\\n    - A ideia \xe9 que as pessoas n\xe3o devem saber que as entradas s\xe3o parecidas a partir da sa\xedda\\n\\nDiversas fun\xe7\xf5es hash criptogr\xe1ficas existem, cada uma com o pr\xf3prio algoritmo.  \\nNo nosso caso vamos utilizar o algoritmo sha256 para os exemplos!  \\n\\n```shell\\n>>> sha256(entrada)\\nsaida\\n```\\n\\n:::note\\nSeguran\xe7a \xe9 algo que muda com o tempo, ent\xe3o fun\xe7\xf5es hash criptogr\xe1ficas seguras de antigamente podem j\xe1 n\xe3o ser mais seguras.  \\n\\nEstou usando a fun\xe7\xe3o hash que usa o algoritmo sha256 apenas de exemplo, n\xe3o estou considerando se \xe9 segura ou n\xe3o para o ano atual.  \\n:::\\n\\n| entrada | sa\xedda                                                            |\\n| ------- | ---------------------------------------------------------------- |\\n| abc     | ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad |\\n| abd     | a52d159f262b2c6ddb724a61840befc36eb30c88877a4030b65cbe86298449c9 |\\n| ABC     | b5d4045c3f466fa91fe2cc6abe79232a1a57cdf104f7a26e716e0a1e2789df78 |\\n| 123     | a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3 |\\n\\n- Se voc\xea der a mesma entrada, vai receber a mesma sa\xedda  \\n- Olhando a sa\xedda voc\xea n\xe3o sabe a entrada  \\n- A mudana\xe7a de um bit entre \\"abc\\" e \\"abd\\" mudou totalmente a sa\xedda  \\n\\nN\xe3o sei se ficou claro, mas isso \xe9 perfeito para podermos conferir se algu\xe9m acertou a senha.  \\n\\nAssim que um usu\xe1rio registra no servi\xe7o e nos da senha, podemos calcular o hash da senha (sa\xedda da fun\xe7\xe3o hash para a senha) para armazenar.  \\n\\n```shell\\n>>> sha256(b\\"password\\").hexdigest()\\n\'5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8\'\\n\\n>>> sha256(b\\"mega_password\\").hexdigest()\\n\'2d2c3f7eb9152d67258cd1068a64a746c130d4cca3f571bd28a86d7f7589aa25\'\\n\\n>>> sha256(b\\"senha\\").hexdigest()\\n\'b7e94be513e96e8c45cd23d162275e5a12ebde9100a425c4ebcdd7fa4dcd897c\'\\n```\\n\\n| username   | hash                                                             |\\n| ---------- | ---------------------------------------------------------------- |\\n| thiagola92 | 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8 |\\n| darklord   | 2d2c3f7eb9152d67258cd1068a64a746c130d4cca3f571bd28a86d7f7589aa25 |\\n| juninho    | b7e94be513e96e8c45cd23d162275e5a12ebde9100a425c4ebcdd7fa4dcd897c |\\n\\nQuando algu\xe9m for logar no nosso servi\xe7o, a pessoa vai inserir a senha e n\xf3s vamos conferir se o hash dessa senha \xe9 igual ao que temos no banco.  \\n- Se for igual, a pessoa sabe a senha e n\xf3s podemos autorizar o acesso ao servi\xe7o  \\n- Se n\xe3o for igual, a pessoa **n\xe3o** sabe a senha e n\xf3s devemos negar o acesso ao servi\xe7o  \\n\\nQual a vantagem de armazenar assim?  \\nSe algum hacker acessar nosso banco, ele n\xe3o vai conseguir saber a senha das pessoas.  \\n\\nMesmo que a pessoa saiba que meu hash \xe9:  \\n`5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8`  \\nSe ela tentar o hash como senha, o hash do hash vai ser totalmente diferente.  \\n\\n```shell\\n>>> sha256(b\\"5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8\\").hexdigest()\\n\'113459eb7bb31bddee85ade5230d6ad5d8b2fb52879e00a84ff6ae1067a210d3\'\\n```\\n\\nEnt\xe3o \xe9 isso? Temos que armazenar o hash da senha? Nope.  \\n\\n![Face saying nope](./nope.svg)  \\n\\nO que acontece quando dois usu\xe1rios possuem a mesma senha?  \\n\\n| username   | hash                                                             |\\n| ---------- | ---------------------------------------------------------------- |\\n| thiagola92 | 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8 |\\n| darklord   | **2d2c3f7eb9152d67258cd1068a64a746c130d4cca3f571bd28a86d7f7589aa25** |\\n| juninho    | b7e94be513e96e8c45cd23d162275e5a12ebde9100a425c4ebcdd7fa4dcd897c |\\n| mmiguel    | **2d2c3f7eb9152d67258cd1068a64a746c130d4cca3f571bd28a86d7f7589aa25** |\\n\\nIsso quer dizer que se um hacker advinhar a senha de `mmiguel`, ele tamb\xe9m sabe a senha de `darklord`.  \\n\\nPara previnir isso \xe9 normal adicionar **salt** \xe0s senhas, ou seja, concatenar bytes extras na senha antes de fazer o hash.  \\n\\nAssim que o usu\xe1rio criar a conta, criaremos um salt para ele com uma fun\xe7\xe3o que gera X bytes aleat\xf3rios (`os.urandom(X)`):  \\n\\n```python\\n# No caso vamos gerar 10 bytes aleat\xf3rios.\\nsalt = os.urandom(10)\\n```\\n\\n| username   | salt                 |\\n| ---------- | -------------------- |\\n| thiagola92 | cea3a49482094b096acb |\\n| darklord   | b9f195b7ce55a51fdc0d |\\n| juninho    | 885cfd855add75c08a7a |\\n| mmiguel    | 10cc25d0c8adcbc44e9a |\\n\\nIremos inserir na fun\xe7\xe3o hash a concatena\xe7\xe3o de `senha + salt`.  \\n\\n```shell\\n>>> sha256(b\\"password\\" + b\\"cea3a49482094b096acb\\").hexdigest()\\n\'a15760e9639bc64e8908d5d2109900dcbc508e6fc5fa7b161e5149fcdaa04eee\'\\n\\n>>> sha256(b\\"mega_password\\" + b\\"b9f195b7ce55a51fdc0d\\").hexdigest()\\n\'8c7044c8e42efebbf7d19027db0a00c8d2242197a0e001d5d0d977cccfaa020c\'\\n\\n>>> sha256(b\\"senha\\" + b\\"885cfd855add75c08a7a\\").hexdigest()\\n\'f51f77c4575127dbf8906c60b7b1c80e01772be217c8a1c9df68e4f527b7f8eb\'\\n\\n>>> sha256(b\\"mega_password\\" + b\\"10cc25d0c8adcbc44e9a\\").hexdigest()\\n\'bbb70b912376b0c266d90cd3ebd1ffa99f6c439a50ed6481bb809b99fd93d300\'\\n```\\n\\n| username   | salt                 | hash                                                             |\\n| ---------- | -------------------- | ---------------------------------------------------------------- |\\n| thiagola92 | cea3a49482094b096acb | a15760e9639bc64e8908d5d2109900dcbc508e6fc5fa7b161e5149fcdaa04eee |\\n| darklord   | b9f195b7ce55a51fdc0d | 8c7044c8e42efebbf7d19027db0a00c8d2242197a0e001d5d0d977cccfaa020c |\\n| juninho    | 885cfd855add75c08a7a | f51f77c4575127dbf8906c60b7b1c80e01772be217c8a1c9df68e4f527b7f8eb |\\n| mmiguel    | 10cc25d0c8adcbc44e9a | bbb70b912376b0c266d90cd3ebd1ffa99f6c439a50ed6481bb809b99fd93d300 |\\n\\nAgora se um hacker tentar todas as possibilidades de senhas para o `mmiguel` e um dia acertar, ele jamais vai ser que \xe9 a mesma senha para `darklord`.  \\n\\n> E se o salt gerado for o mesmo para ambos?  \\n\\nUma maneira de solucionar isto \xe9 verificar se j\xe1 existe algu\xe9m com o mesmo hash e salt.  \\nCaso sim, gere um novo salt...  \\n\\n:::warning\\nMinha inten\xe7\xe3o aqui era explicar o conceito.  \\n\\n\xc9 importante olhar a documenta\xe7\xe3o da sua linguagem/biblioteca para saber a melhor fun\xe7\xe3o hash a se usar!  \\n\\nPor exemplo, python j\xe1 disponibiliza uma fun\xe7\xe3o que j\xe1 concatena senha e salt, e depois faz o hash (`hashlib.scrypt()`). Ent\xe3o n\xe3o existe necessidade de fazer cada etapa dita neste post.  \\n:::\\n\\n## Login\\n\\n### Client\\n![UI para login](./login.svg)  \\n\\nQuando falando de website, a maneira para logar \xe9 a mesma de se registrar:  \\n```python\\nimport httpx\\nfrom urllib.parse import urlencode\\n\\nbody = urlencode({\\"username\\": username, \\"password\\": password})\\nheaders = {\\"Content-Type\\": \\"application/x-www-form-urlencoded\\"}\\n\\nhttpx.post(\\"http://127.0.0.1:8000/login\\", headers=headers, content=body)\\n```\\n\\nE o server responde enviando cookies para que o browser use nas pr\xf3ximas requisi\xe7\xf5es de conte\xfado.  \\n\\nNote que esse request utiliza o body para enviar `username` e `password`, o que deixa o body ocupado por dados relacionados ao login (ao menos que voc\xea queira fazer uma bagun\xe7a e misturar login com pedido de dados).  \\n\\nOutra maneira conhecida por APIs \xe9 passar a autenti\xe7\xe3o no headers pelo campo `Authorization`:  \\n```python\\nimport httpx\\nimport base64\\n\\ncredentials = f\\"{username}:{password}\\"\\ncredentials = credentials.encode()\\ncredentials = base64.b64encode(credentials)\\ncredentials = credentials.decode()\\n\\nresponse = httpx.get(\\"http://127.0.0.1:8000/\\", headers={\\"Authorization\\": f\\"Basic {credentials}\\"})\\n```\\n\\nNote que nesse modelo n\xf3s botamos como valor do `Authroization` o esquema e depois a credencial:  \\n`<scheme> <credential>`  \\n\\nNo nosso caso o esquema \xe9 `Basic`, onde quer dizer que vamos passar as credenciais em base 64 e concatenadas com `:`.  \\n`<username>:<password>`  \\n\\nA vantagem desta maneira \xe9 que em uma requisi\xe7\xe3o n\xf3s j\xe1 conseguiriamos nos autenticar e aplicar a opera\xe7\xe3o desejada na API.  \\n\\n:::note\\nEssa maneira n\xe3o \xe9 incentivada pois passar em toda requisi\xe7\xe3o username e password \xe9 arriscado, basta uma pessoa m\xe1 intencionado conseguir acesso a uma mensagem para obter sua senha.  \\n\\nPassar em uma requisi\xe7\xe3o para obter um token/cookie \xe9 v\xe1lido, pois toda requisi\xe7\xe3o seguinte n\xf3s utilizariamos esse token/cookie para sermos validados no server.  \\n:::\\n\\n### Server\\nOkay, seu servidor recebeu o request de logar... O que fazer? Valida\xe7\xf5es! (novamente)  \\n\\n![Robo lendo um papel com os olhos estressados](./server_angrily_reading.svg)  \\n\\nSe estivermos falando da mesma maneira utilizada por websites, ent\xe3o as valida\xe7\xf5es s\xe3o bem parecidas com as de registrar!  \\n\\n```python\\nif request.headers.get(\\"Content-Type\\") != \\"application/x-www-form-urlencoded\\":\\n    raise Exception(\\"Invalid body format\\")\\n```\\n\\n```python\\ntry:\\n    body = await request.body()\\n    body = body.decode()\\n    fields = parse_qs(body)\\nexcept ValueError:\\n    raise Exception(\\"Body incorrectly formatted\\")\\n```\\n\\n```python\\nif \\"username\\" not in fields or \\"password\\" not in fields:\\n    return Exception(\\"Missing username or password\\")\\n```\\n\\nSe estivermos falando da maneira das APIs, temos que adaptar ao outro local onde o username e password est\xe3o mas nada complicado!  \\n\\n```python\\nif not request.headers.get(\\"Authorization\\"):\\n    raise Exception(\\"Missing authorization\\")\\n```\\n\\n```python\\nauth = conn.headers[\\"Authorization\\"]\\nscheme, credentials = auth.split()\\n\\nif scheme.lower() != \\"basic\\":\\n    raise Exception(\\"Incorrect authorization protocol\\")\\n```\\n\\n```python\\ntry:\\n    credentials = base64.b64decode(credentials)\\n    credentials = credentials.decode()\\n    username, _, password = credentials.partition(\\":\\")\\nexcept ValueError:\\n    raise Exception(\\"Credentials incorrectly formatted\\")\\n```\\n\\nChegou a hora da verdade.  \\nQuem mandou a requisi\xe7\xe3o \xe9 o usu\xe1rio verdadeiro da conta?  \\n\\n![Pessoa com o lazer de uma arma na cabe\xe7a](./person_lazer_head.svg)  \\n\\nBem... Ele n\xe3o vai ser o usu\xe1rio verdadeiro se o usu\xe1rio nem existir n\xe9?  \\n\\nPodemos verificar isso tentando pegar do banco o salt e hash.  \\n\\n```python\\nsalt, hash = get_user_auth(username)\\nif not salt or not hash:\\n    raise Exception(\\"Invalid user\\")\\n```\\n\\nAgora vem a parte f\xe1cil... Validar se a senha que ele passou est\xe1 certa! Basta calcular o hash usando a senha que nos passaram.  \\n\\n```python\\nif sha256(password + salt).hexdigest() != hash:\\n    raise Exception(\\"Wrong password\\")\\n```\\n\\nFim!  \\n\\nPrincipalmente porque n\xe3o pretendo cobrir a fundo assuntos como cookies e tokens. Mas tudo coberto j\xe1 da um \xf3timo in\xedcio para entender autentica\xe7\xe3o/login/cadastro/etc.  \\n\\n## References\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type\\n- https://www.w3schools.com/tags/att_form_enctype.asp"},{"id":"/2024/04/20/tty-terminal-shell-cli-tui-gui","metadata":{"permalink":"/en/blog/2024/04/20/tty-terminal-shell-cli-tui-gui","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-04-20-tty-terminal-shell-cli-tui-gui/index.md","source":"@site/blog/2024-04-20-tty-terminal-shell-cli-tui-gui/index.md","title":"TTY, Terminal, Shell, CLI, TUI, GUI","description":"Esse post \xe9 meio que uma compila\xe7\xe3o do que eu entendi de cada assunto ap\xf3s de horas lendo na internet e perguntando para meu pai.","date":"2024-04-20T00:00:00.000Z","formattedDate":"April 20, 2024","tags":[{"label":"tty","permalink":"/en/blog/tags/tty"},{"label":"terminal","permalink":"/en/blog/tags/terminal"},{"label":"shell","permalink":"/en/blog/tags/shell"},{"label":"cli","permalink":"/en/blog/tags/cli"},{"label":"tui","permalink":"/en/blog/tags/tui"},{"label":"gui","permalink":"/en/blog/tags/gui"},{"label":"command line interface","permalink":"/en/blog/tags/command-line-interface"},{"label":"terminal user interface","permalink":"/en/blog/tags/terminal-user-interface"},{"label":"graphic user interface","permalink":"/en/blog/tags/graphic-user-interface"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["tty","terminal","shell","cli","tui","gui","command line interface","terminal user interface","graphic user interface"]},"unlisted":false,"prevItem":{"title":"Authentication - username & password","permalink":"/en/blog/2024/05/25/auth-username-password"},"nextItem":{"title":"C/C++ Libs (Win)","permalink":"/en/blog/2024/04/01/c-cpp-lib-win"}},"content":"Esse post \xe9 meio que uma compila\xe7\xe3o do que eu entendi de cada assunto ap\xf3s de horas lendo na internet e perguntando para meu pai.  \\nEm outras palavras: Pode ter informa\xe7\xe3o incorreta!  \\n\\n## TTY\\n**T**ele**ty**pe  \\n*(https://en.wikipedia.org/wiki/Teleprinter)*  \\n\\nTTY \xe9 um comando em linux para saber o nome do terminal o qual a input est\xe1 **diretamente conectada**.  \\n\\n```C\\n$ tty\\n/dev/pts/1\\n\\n$ echo \\"example\\" | tty\\nnot a tty\\n```\\n\\nNo primeiro exemplo, o comando `tty` veio como input diretamente do terminal.  \\n\\nNo segundo exemplo, o comando `tty` recebeu a input `example` do comando anterior (n\xe3o de um terminal).  \\n\\nFim! Pode ir para a pr\xf3xima sess\xe3o, ao menos que voc\xea queira saber o que diabos \xe9 uma teletype.  \\n\\n![Rosto curioso](./curious.svg)  \\n\\nJ\xe1 notou que muitas coisas no computador possuem o nome de objetos que existem fora do computador?  \\n\\nAcontece que o nome \xe9 dado baseado nestes objetos para ajudar usu\xe1rios a entenderem melhor o uso deles no computador! Por exemplo:  \\n- file\\n- folder\\n- trash can\\n- window  \\n\\nO mesmo vale para TTY, onde o nome veio de teletypes. Infelizmente n\xe3o \xe9 um nome que ajude muito pois computadores j\xe1 subsittuiram o uso delas ent\xe3o esse nome n\xe3o ajuda ningu\xe9m a saber do que o comando se trata \ud83e\udd23.  \\n\\nO que s\xe3o teletypes?  \\nEntenda que elas s\xe3o uma jun\xe7\xe3o de [typewriters](https://en.wikipedia.org/wiki/Typewriter) e [telegraph key](https://en.wikipedia.org/wiki/Telegraph_key).  \\nO primeiro utilizado para escrever em papel e o segundo utilizado para enviar [morse code](https://en.wikipedia.org/wiki/Morse_code) a dist\xe2ncia.  \\n\\nMorse code era muito utilizado como uma forma de comunica\xe7\xe3o bin\xe1ria (som curto/longo) via cabo. Por\xe9m para isso acontecer era necess\xe1rio duas pessoas treinadas em morse code (uma para enviar e outra para receber).  \\n```\\nmensagem <=> tradutor <=> morse code <=> transmiss\xe3o\\n```\\n\\nCom a chegada das teletypes, os tradutores foram substituidos por estas m\xe1quinas que eram capaz de traduzir e ler morse code.  \\n```\\nmensagem <=> teletype <=> morse code <=> transmiss\xe3o\\n```\\n\\nComputadores da \xe9poca utilizavam [paper tape](https://en.wikipedia.org/wiki/Punched_tape) como forma de armazenamento de dados e [monitores](https://en.wikipedia.org/wiki/Computer_monitor) n\xe3o eram algo acess\xedvel. Teletypes viram est\xe1 oportunidade para preencher outro meio de comunica\xe7\xe3o (dado que computadores tamb\xe9m utilizam bin\xe1rio).  \\n```\\nmensagem <=> teletype <=> bin\xe1rio <=> computador\\n```\\n\\nEste video mostra uma teletype recebendo e enviando dados de/a um terminal:  \\nhttps://www.youtube.com/watch?v=S81GyMKH7zw  \\n\\nPor isto que o termo TTY era utilizado para refer\xeancia aparelhos enviando/recebendo (input/output) mensagem do computador.  \\n\\nAlgumas linguagens at\xe9 incluem c\xf3digo para fazer essa verifica\xe7\xe3o:\\n- C\\n    -   ```C\\n        #include <unistd.h>\\n\\n        isatty(fildes);\\n        ```\\n- Python\\n    -   ```python\\n        import os\\n\\n        os.isatty(fd)\\n        ```\\n- NodeJS\\n    -   ```javascript\\n        tty.isatty(fd)\\n        ```\\n\\nOnde a funcionalidade das fun\xe7\xf5es \xe9 identificar se a input/ouput est\xe1 vinculada a um aparelho (device).  \\n\\n:::warning\\nPreste bem aten\xe7\xe3o que sua input pode estar ligada ou n\xe3o a um aparelho **E** sua output pode estar ligada ou n\xe3o a um aparelho.  \\nUm deles estar ligado n\xe3o quer dizer que ambos est\xe3o.  \\n\\nAs fun\xe7\xf5es recebem um file descriptor e dizem se ele est\xe1 ou n\xe3o linkado a um aparelho.  \\nVoc\xea poderia passar `STDIN`, `STDOUT` ou at\xe9 `STDERR` para a fun\xe7\xe3o analisar.  \\n\\nEsse video cobre bem o assunto: https://www.youtube.com/watch?v=SYwbEcNrcjI  \\n:::\\n\\nSe realmente quiser saber detalhes sobre TTY, existe este blog **cheio** de informa\xe7\xf5es (que eu n\xe3o li):  \\nhttps://www.linusakesson.net/programming/tty/  \\n\\n![TTY](./tty.svg)  \\n\\n## Terminal\\n*(https://en.wikipedia.org/wiki/Computer_terminal)*  \\n\\nTeletypes originalmente eram conhecidas como \\"hard-copy terminals\\" por usarem papel, mas com a vinda de telas n\xf3s formamos uma nova ideia de terminal nas nossas cabe\xe7as (a tela preta).  \\n\\nTerminal n\xe3o possui armazenamento de dados, da mesma maneira que teletypes apenas eram respons\xe1veis por ler e escrever do computador, ou seja, a l\xf3gica ainda estava no computador. Alguns terminais possuiam um pouco de l\xf3gica neles por\xe9m nada comparado ao computador.    \\n\\nSe voc\xea viu o video da sess\xe3o anterior ent\xe3o j\xe1 deve ter ganhado uma ideia do que \xe9 um terminal, pois nele \xe9 mostrado uma teletype lendo e escrevendo para um terminal.  \\nMas caso queira outro video mostrando melhor um terminal:  \\nhttps://www.youtube.com/watch?v=UNdu0YQfvF0  \\n\\n![Terminal](./terminal.svg)  \\n\\n## Terminal Emulator\\n*(https://en.wikipedia.org/wiki/Terminal_emulator)*  \\n\\nHoje em dia usamos o termo terminal para representarmos emuladores de terminais.  \\n\\nDiferentemente de terminais, estes est\xe3o fortemente ligados a computador e n\xe3o s\xe3o m\xe1quinas separadas da l\xf3gica. Basicamente estamos falando da janela que finge ser um terminal (GNOME terminal).  \\n\\n![Terminal Emulator](./terminal_emulator.svg)  \\n\\n## Shell\\n*(https://en.wikipedia.org/wiki/Shell_script)*  \\n\\nUm **programa** respons\xe1vel por ficar em loop esperando **comandos** do usu\xe1rio para serem executados.  \\n\\nComandos podem ser:\\n    - Programas\\n        - `echo`\\n        - `ls`\\n        - `touch`\\n        - `mkdir`\\n        - Buscados em lugares pr\xe9 definidos (`/bin`, `/usr/bin`, ...)\\n            - Use `echo $PATH` para ver a lista de lugares a se olhar\\n    - Comandos do pr\xf3prio shell\\n        - `type`\\n        - `which`\\n        - `help`\\n        - `man`\\n        - Estes existem dentro do shell e n\xe3o precisam ser buscados.\\n    - Shell functions\\n    - Aliases\\n        - Comandos definidos por n\xf3s, construido de outros comandos\\n\\nExistem varia\xe7\xf5es e alternativas de shell:  \\n- [Bash](https://www.gnu.org/software/bash/)\\n- [Zsh](https://www.zsh.org/)\\n- [Fish](https://fishshell.com/)\\n\\n![Shell](./shell.svg)  \\n\\n## CLI\\n**C**ommand-**l**ine **i**nterface  \\n*(https://en.wikipedia.org/wiki/Command-line_interface)*  \\n\\n\xc9 uma interface, ou seja, maneira do programa dar mais controle ao usu\xe1rio sobre o programa.  \\n\\nEst\xe1 interface se basea no usu\xe1rio passar flags e mais informa\xe7\xf5es em conjunto ao comando, dessa maneira mudando o comportamento do commando. Por exemplo, o programa `ls` disponibiliza diversas flags para alterar o comportamento:  \\n- `ls`\\n    - Lista tudo no diret\xf3rio atual mas ignora os come\xe7ando com `.`\\n- `ls -a`\\n    - Lista tudo no diret\xf3rio atual e **n\xe3o** ignora os come\xe7ando com `.`\\n- `ls -l`\\n    - Lista tudo no diret\xf3rio atual mas com mais detalhes\\n\\nFique bem claro que \xe9 o programa te dando op\xe7\xf5es de como interagir com ele, n\xe3o o shell ou terminal, ent\xe3o resta ao programa implementar comportamentos para certas flags.  \\n\\n:::note\\n\xc9 muito comum programas oferecerem detalhes sobre as flags quando utilizando a flag `--help` (`ls --help`).  \\n:::\\n\\n![CLI](./cli.svg)  \\n\\n## TUI\\n**T**erminal **u**ser **i**nterface  \\n*(https://en.wikipedia.org/wiki/Text-based_user_interface)*  \\n\\nNovamente \xe9 uma interface, ou seja, maneira do programa dar mais controle ao usu\xe1rio sobre o programa. Por\xe9m est\xe1 foca em dar uma intera\xe7\xe3o mais visual e continua.  \\n\\nDiferente de CLI\'s onde toda a intera\xe7\xe3o come\xe7a e termina em um comando s\xf3, TUI\'s continuam esperando mais intera\xe7\xf5es do usu\xe1rio at\xe9 um dos dois decidirem terminar.  \\n\\nUm exemplo bem comum \xe9 `top` que provid\xeancia uma vis\xe3o dos programas/processos/threads em execu\xe7\xe3o do sistema, uma vez inicializado ele esperar por mais intera\xe7\xf5es do usu\xe1rio. Se voc\xea apertar `q` ele termina, se voc\xea apertar `h` ele fornece a lista de comandos, etc.  \\n\\nNote que a TUI\'s ainda podem provid\xeanciar flags para alterar o comportamento (`top --help`).  \\n\\n![TUI](./tui.svg)  \\n\\n## GUI\\n**G**raphical **u**ser **i**nterface  \\n*(https://en.wikipedia.org/wiki/Graphical_user_interface)*  \\n\\nNovamente \xe9 uma interface, ou seja, maneira do programa dar mais controle ao usu\xe1rio sobre o programa. Por\xe9m n\xe3o est\xe1 limitada a usar texto para a visualiza\xe7\xe3o, pois tem a capacidade de desenhar na tela.  \\n\\nHoje em dia \xe9 o meio mais popular de se usar uma aplica\xe7\xe3o, quando se abre VSCode, Google Chrome, Discord... Todos s\xe3o GUI\'s pois utilizaram a capacidade de desenhar para dar uma interface ao usu\xe1rio.  \\n\\nMesmo programas focados em GUI\'s podem aceitar flags (VSCode: `code --help`).  \\n\\n![GUI](./gui.svg)  \\n\\n## References\\n- https://en.wikipedia.org/wiki/System_console\\n- https://www.linusakesson.net/programming/tty/\\n- https://linuxcommand.org/lc3_lts0010.php\\n- https://linuxcommand.org/lc3_lts0060.php\\n- https://www.youtube.com/watch?v=wIjgZhAjQS4\\n- https://www.youtube.com/watch?v=ztsOwk1zB3o\\n- https://www.youtube.com/watch?v=byMwNPj47X8\\n- https://www.youtube.com/watch?v=3X93PnKRNUo"},{"id":"/2024/04/01/c-cpp-lib-win","metadata":{"permalink":"/en/blog/2024/04/01/c-cpp-lib-win","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-04-01-c-cpp-lib-win/index.md","source":"@site/blog/2024-04-01-c-cpp-lib-win/index.md","title":"C/C++ Libs (Win)","description":"Durante o post C/C++ Libs escrevi sobre usar bibliotecas no Linux e nunca imaginaria que teria novamente a dor de cabe\xe7a de ver o assunto quando fosse fazer o mesmo no Windows.","date":"2024-04-01T00:00:00.000Z","formattedDate":"April 1, 2024","tags":[{"label":"c","permalink":"/en/blog/tags/c"},{"label":"libs","permalink":"/en/blog/tags/libs"},{"label":"lib","permalink":"/en/blog/tags/lib"},{"label":"windows","permalink":"/en/blog/tags/windows"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["c","c++","libs","lib","windows"]},"unlisted":false,"prevItem":{"title":"TTY, Terminal, Shell, CLI, TUI, GUI","permalink":"/en/blog/2024/04/20/tty-terminal-shell-cli-tui-gui"},"nextItem":{"title":"Inverse Kinematics: FABR","permalink":"/en/blog/2024/03/29/ik-fabr"}},"content":"Durante o post [C/C++ Libs](../2024-02-12-c-cpp-lib/index.md) escrevi sobre usar bibliotecas no Linux e nunca imaginaria que teria novamente a dor de cabe\xe7a de ver o assunto quando fosse fazer o mesmo no Windows.  \\n\\n![Personagem do desenho The Owl House chorando](./hooty_crying.svg)  \\n\\n:::warning\\nImportante avisar que eu irei escrever este post contando que voc\xea leu o [post passado](../2024-02-12-c-cpp-lib/index.md) sobre Linux.  \\n\\nIrei ser breve e n\xe3o irei estudar detalhes que nem fiz no do linux (pois estou cansado do assunto).  \\n:::\\n\\n## `.lib` (library)\\n\\nBasicamente id\xeantico ao `.a` do Linux, uma biblioteca est\xe1tica (**static library**).  \\n\\n:::note\\nDescobri que estes arquivos podem ser abertos tranquilamente com programas de zip tipo: Winrar, 7zip, PeaZip.  \\n\\nO que faz total sentido dado que eles programas para lidar com \\"File archive and extractor\\" e no Linux usando o formato `.a` de \\"archive\\".  \\n:::\\n\\n## `.dll` (dynamic-link library)\\n\\nSeria o pr\xf3ximo do `.so` do Linux, servindo o mesmo prop\xf3sito de uma biblioteca compartilhada (**shared library**) por\xe9m o Windows possui uma implementa\xe7\xe3o pr\xf3pria deles (**dynamic-link library**).  \\n\\nA grande diferen\xe7a que precisamos saber \xe9 que durante a cria\xe7\xe3o de bibliotecas compartilhadas, tr\xeas formatos de arquivos s\xe3o criados: `.dll`, `.lib` e `.exp` (vamos ignorar este \xfaltimo).  \\n\\nOnde o arquivo `.lib` **N\xc3O** \xe9 o mesmo que o gerado durante a biblioteca est\xe1tica! Por\xe9m ainda \xe9 necess\xe1rio para a utiliza\xe7\xe3o da biblioteca compartilhada.  \\n\\n## Project from Zero\\n\\nSeguiremos a mesma ideia do post no Linux. Apenas tendo o nosso c\xf3digo:  \\n\\n```\\nproject/\\n\u2514\u2500\u2500 src/\\n    \u251c\u2500\u2500 main.c\\n    \u2514\u2500\u2500 ...\\n```\\n\\n```\\ncl src\\\\main.c\\n```\\n\\n---\\n\\nAgora com um header:  \\n\\n```\\nproject/\\n\u251c\u2500\u2500 include/\\n\u2502   \u2514\u2500\u2500 header.h\\n\u2514\u2500\u2500 src/\\n    \u251c\u2500\u2500 main.c\\n    \u2514\u2500\u2500 ...\\n```\\n\\n```\\ncl src/main.c /Iinclude\\n```\\n\\n---\\n\\n### `.lib`\\n\\n```\\nproject/\\n\u251c\u2500\u2500 include/\\n\u2502   \u2514\u2500\u2500 header.h\\n\u251c\u2500\u2500 lib/\\n\u2502   \u2514\u2500\u2500 name.lib\\n\u2514\u2500\u2500 src/\\n    \u251c\u2500\u2500 main.c\\n    \u2514\u2500\u2500 ...\\n```\\n\\n```\\ncl src/main.c /Iinclude lib/name.lib\\n```\\n\\n:::note\\nWindows n\xe3o tem o padr\xe3o de botar `lib` na frente das bibliotecas ent\xe3o n\xe3o precisa nem pensar nisso.\\n:::\\n\\n### `.dll`\\n\\nDessa vez vamos separar em duas etapas: compilar o c\xf3digo para `.obj` e depois linkar (gerar o `.exe`), isso torna mais f\xe1cil adicionar explica\xe7\xf5es no meio.  \\n\\n```\\nproject/\\n\u251c\u2500\u2500 include/\\n\u2502   \u2514\u2500\u2500 header.h\\n\u251c\u2500\u2500 lib/\\n\u2502   \u2514\u2500\u2500 name.lib\\n\u2514\u2500\u2500 src/\\n\u2502   \u251c\u2500\u2500 main.c\\n\u2502   \u2514\u2500\u2500 ...\\n\u2514\u2500\u2500  name.dll\\n```\\n\\nLembre que bibliotecas din\xe2micas no Windows utilizam um arquivo `.dll` e um `.lib` (por isso temos os dois no projeto).  \\nWindows busca os arquivos `.dll` na mesma pasta do execut\xe1vel, por isso ele n\xe3o est\xe1 na pasta lib.  \\n\\n```\\ncl src/main.c /c /Iinclude /Dexample\\n```\\n\\n`/c` \xe9 justamente para pausar antes de linkar.  \\n`/Dexample` \xe9 uma maneira de adicionar uma defini\xe7\xe3o no in\xedcio do c\xf3digo, equivalente a \\n\\n```C\\n#define example\\n```\\n\\nPor que precisamos definir? Em bibliotecas do Windows, muitas vezes pode se encontrar c\xf3digo como o seguinte:  \\n\\n```C\\n#if defined(EXPORT_DLL)\\n    #define LIB_API __declspec(dllexport)\\n#elif defined(IMPORT_DLL)\\n    #define LIB_API __declspec(dllimport)\\n#else\\n    #define LIB_API\\n#endif\\n```\\n\\nOnde `LIB_API` \xe9 substituido por:\\n- `__declspec(dllexport)` quando criando uma biblioteca din\xe2nmica\\n- `__declspec(dllimport)` quando importando uma biblioteca din\xe2mica\\n- nada quando \xe9 uma biblioteca est\xe1tica\\n\\nN\xe3o entendo bem do assunto ent\xe3o n\xe3o pretendo entrar no assunto, mas \xe9 a maneira do windows lidar com bibliotecas din\xe2micas.  \\n\\nBiblitoecas geralmente requerem que voc\xea passe essa defini\xe7\xe3o para que ela adicione o contexto certo ao c\xf3digo durante a cria\xe7\xe3o do objeto (para fazer [name mangling](https://en.wikipedia.org/wiki/Name_mangling) corretamente?).  \\n\\n---\\n\\n```\\nlink /LIBPATH:lib name.lib main.obj\\n```\\n\\n\xc9 durante a etapa de linkar que o arquivo `.lib` \xe9 finalmente utilizado!  \\n\\nLembrando novamente que o execut\xe1vel vai buscar o `.dll` na pasta do execut\xe1vel, ent\xe3o bote ambos juntos."},{"id":"/2024/03/29/ik-fabr","metadata":{"permalink":"/en/blog/2024/03/29/ik-fabr","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-03-29-ik-fabr/index.md","source":"@site/blog/2024-03-29-ik-fabr/index.md","title":"Inverse Kinematics: FABR","description":"Forward And Backward Reaching Inverse Kinematics (FABRIK) \xe9 a \xfaltima kinematic que veremos. \xc9 utilizada para cadeias de ossos tamb\xe9m mas apenas precisamos de uma itera\xe7\xe3o para definir o estado final (diferentemente da CCD).","date":"2024-03-29T00:00:00.000Z","formattedDate":"March 29, 2024","tags":[{"label":"godot","permalink":"/en/blog/tags/godot"},{"label":"gdscript","permalink":"/en/blog/tags/gdscript"},{"label":"inverse kinematics","permalink":"/en/blog/tags/inverse-kinematics"},{"label":"physics","permalink":"/en/blog/tags/physics"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["godot","gdscript","inverse kinematics","physics"]},"unlisted":false,"prevItem":{"title":"C/C++ Libs (Win)","permalink":"/en/blog/2024/04/01/c-cpp-lib-win"},"nextItem":{"title":"Inverse Kinematics: CCD","permalink":"/en/blog/2024/03/26/ik-ccd"}},"content":"Forward And Backward Reaching Inverse Kinematics (FABRIK) \xe9 a \xfaltima kinematic que veremos. \xc9 utilizada para cadeias de ossos tamb\xe9m mas apenas precisamos de uma itera\xe7\xe3o para definir o estado final (diferentemente da [CCD](../2024-03-26-ik-ccd/index.md)).  \\n\\n![Corrente de 4 ossos](./chain.svg)  \\n\\n## Forward And Backward Reaching\\n\\nA id\xe9ia \xe9 duas caminhadas na cadeia de ossos, a primeira ir\xe1 mover os ossos em dire\xe7\xe3o ao alvo (forward) e a segunda vai voltar o osso a base (backward).  \\n\\nA opera\xe7\xe3o importante a se entender durante as duas etapas \xe9 a\xe7\xe3o de alcan\xe7ar um outro ponto (reaching). Vamos utilizar ela durante as duas etapas ent\xe3o \xe9 bom entender isto primeiro.  \\n\\n## Reaching\\n\\nAlcan\xe7ar um alvo \xe9 dividido em 2 etapas, olhar para o alvo e mover at\xe9 o alvo.  \\n\\n![Um osso e um alvo fora do alcance](./reach.svg)  \\n\\nNa primeira etapa podemos utilizar a mesma l\xf3gica do [look at](../2024-02-04-ik-look-at/index.md) ou usar a fun\xe7\xe3o que sua game engine disponibilizar para rotacionar at\xe9 um ponto.  \\n\\n![Osso rotacionando at\xe9 o alvo](./reach2.svg)  \\n\\nPara mover at\xe9 o ponto \xe9 preciso usar o tamanho do osso e calcular onde seria o novo ponto da base do osso. Visualizar onde seria \xe9 algo bem simples:  \\n\\n![Osso transparente onde o osso precisa estar no final](./reach3.svg)  \\n\\nCalcular isso envolve conseguir criar um vetor que represente o osso. Primeiro precisamos saber o vetor em que o osso se encontra, o vetor do ponto inicial dele at\xe9 o alvo.  \\n\\n```\\nVetor = Posi\xe7\xe3o do alvo - Posi\xe7\xe3o do osso\\n```\\n\\n![Vetor do osso at\xe9 o alvo](./reach4.svg)  \\n\\nCom isto podemos calcular a propor\xe7\xe3o desse vetor com o vetor do osso. Em outras palavras, qual o tamanho do vetor do osso em rela\xe7\xe3o a esse vetor? \xc9 duas vezes o tamanho deste? \xc9 tr\xeas vezes o tamanho? \xc9 metade desse vetor?  \\n\\n```\\nTamanho do vetor = \u221a(Vetor.x\xb2 + Vetor.y\xb2)\\nPropor\xe7\xe3o = Tamanho do osso / Tamanho do vetor\\n```\\n\\nUtilizando essa propor\xe7\xe3o podemos criar um vetor do tamanho do osso.  \\n\\n```\\nVetor osso = Vetor * Propor\xe7\xe3o\\n```\\n\\n![Vetor osso](./reach5.svg)  \\n\\nA \xfaltima coisa \xe9 calcular o novo ponto onde o osso deve inciar. Basta pegar o ponto do alvo e reduzir pelo vetor do osso.  \\n\\n```\\nPosi\xe7\xe3o do osso = Posi\xe7\xe3o do alvo - Vetor osso\\n```\\n\\n![Vetor osso come\xe7ando no ponto onde o osso tem que terminar](./reach6.svg)  \\n\\nPronto, sabemos onde botar o osso e podemos mover ele para l\xe1 (caso voc\xea j\xe1 n\xe3o tenha movido ele na \xfaltima opera\xe7\xe3o)  \\n\\n![Osso na posi\xe7\xe3o correta](./reach7.svg)  \\n\\n## Forward\\n\\nA primeira caminhada pela cadeia de ossos envolve fazer cada osso andar em dire\xe7\xe3o (forward) ao osso seguinte. No caso da ponta da cadeia, ela ir\xe1 mover em dire\xe7\xe3o ao alvo.  \\n\\n![TODO](./forward.svg)  \\n\\n![TODO](./forward2.svg)  \\n\\nO ponto vermelho ir\xe1 representar onde globalmente o in\xedcio do osso atual est\xe1, n\xf3s usamos ele para decidir onde o osso seguinte vai alcan\xe7ar.  \\n\\n![TODO](./forward3.svg)  \\n\\n![TODO](./forward4.svg)  \\n\\n![TODO](./forward5.svg)  \\n\\nEstou pausando aqui para lembrar que movimentar e rotacionar um osso afeta todos os filhos, por isto os ossos filhos s\xe3o movimentados e rotacionados de forma a ficarem \\"piores\\" (mais longe do alvo).  \\n\\n:::danger\\nAnos depois... Eu percebi que ajustar a posi\xe7\xe3o e rota\xe7\xe3o do filho depois de fazer essa opera\xe7\xe3o \xe9 uma boa pois conserta diversos problemas. N\xe3o irei atualizar este blog pois isto envolveria atualizar imagens e reler o post (esse \xe9 meu n\xedvel de pregui\xe7a aqui).  \\n:::\\n\\n![TODO](./forward6.svg)  \\n\\nO osso seguinte ir\xe1 utilizar o osso anterior como refer\xeancia, seguimos essa t\xe1tica para cada um dos ossos.  \\n\\n![TODO](./forward7.svg)  \\n\\n![TODO](./forward8.svg)  \\n\\n![TODO](./forward9.svg)  \\n\\n![TODO](./forward10.svg)  \\n\\n![TODO](./forward11.svg)  \\n\\n![TODO](./forward12.svg)  \\n\\nO ponto azul representa a base da cadeia e \xe9 um ponto de refer\xeancia que usaremos na pr\xf3xima caminhada.  \\n\\n## Backward\\n\\n:::note\\nA \xfaltima caminhada deixou tudo uma bagun\xe7a mas isso apenas porque eu escolhi trata-los da mesma forma que minha game engine (Godot) trata nodes nela.  \\n\\nSe tivessemos usado um array de ossos em vez de rela\xe7\xf5es pai e filho, um n\xe3o afetaria o outro!  \\n:::\\n\\nN\xf3s focaremos agora a mover os ossos em dire\xe7\xe3o a base, ou seja, eles caminharam para tr\xe1z (backward). Dessa vez n\xe3o precisamos nos preocupar em rotacionar, apenas mover para o final do osso anterior.  \\n\\n![TODO](./backward.svg)  \\n\\n![TODO](./backward1.svg)  \\n\\n![TODO](./backward2.svg)  \\n\\n![TODO](./backward3.svg)  \\n\\n![TODO](./backward4.svg)  \\n\\n![TODO](./backward5.svg)  \\n\\n![TODO](./backward6.svg)  \\n\\n![TODO](./backward7.svg)  \\n\\n## Iteration\\n\\nAo final de uma itera\xe7\xe3o podemos ter algo errado como visto acima, mas se repetirmos mais vezes vamos come\xe7ar a caminhar para algo melhor.  \\n\\nO que acontece se come\xe7armos outra itera\xe7\xe3o? Vamos come\xe7ar novamente rotacionando o osso da ponta.  \\n\\n![TODO](./again.svg)  \\n\\nSe voc\xea der zoom na imagem, vai notar que o \xfaltimo osso passou do ponto alvo. Mas a etapa seguinte \xe9 mover de forma que o ponto final do osso bata com a posi\xe7\xe3o do alvo.  \\n\\n![TODO](./again2.svg)  \\n\\nBem, agora o osso seguinte est\xe1 incorreto... Mas se continuarmos repetindo o processo...  \\n\\n![TODO](./again3.svg)  \\n\\nAos poucos os ossos v\xe3o indo para uma posi\xe7\xe3o melhor, mas eu n\xe3o pretendo mostra-lo uma segunda itera\xe7\xe3o pois eu fiz estes desenhos a m\xe3o. \ud83e\udd23  \\n\\n## Conclusion\\n\\nO c\xf3digo simplificado em GDScript (linguagem do Godot):  \\n\\n```python\\nfor i in iterations:\\n    _apply_forwards()\\n    _apply_backwards(base_global_position)\\n\\n\\nfunc _apply_forwards() -> void:\\n    # O osso da ponta vai morar no alvo, os seguintes v\xe3o tratar o anterior como alvo.\\n    var target_global_position: Vector2 = target.global_position\\n\\n    # Esse array leva da ponta at\xe9 a base.\\n    for bone in chain:\\n        # Rotaciona em dire\xe7\xe3o ao alvo.\\n        bone.look_at(target_global_position)\\n\\n        # Evita calcular ratio como infinito.\\n        if target_global_position == bone.global_position:\\n            continue\\n        \\n        # Calcula a nova posi\xe7\xe3o do osso.\\n        var stretch: Vector2 = target_global_position - bone.global_position\\n        var ratio: float = bone.get_bone_length() / stretch.length()\\n        bone.global_position = target_global_position - stretch * ratio\\n        \\n        # Define o alvo do osso seguinte.\\n        target_global_position = bone.global_position\\n\\n\\nfunc _apply_backwards(base_global_position: Vector2) -> void:\\n    # Esse array leva da ponta at\xe9 a base, ent\xe3o agora precisamos caminhar ao contr\xe1rio.\\n    for i in range(chain.size() - 1, -1, -1):\\n        var bone: Bone = chain[i]\\n        \\n        bone.global_position = base_global_position\\n        \\n        # Calcula a posi\xe7\xe3o do osso seguinte.\\n        var direction := Vector2(cos(bone.global_rotation), sin(bone.global_rotation))\\n        base_global_position = bone.global_position + direction * bone.get_bone_length()\\n```\\n\\n## References\\n\\n- https://sean.cm/a/fabrik-algorithm-2d/"},{"id":"/2024/03/26/ik-ccd","metadata":{"permalink":"/en/blog/2024/03/26/ik-ccd","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-03-26-ik-ccd/index.md","source":"@site/blog/2024-03-26-ik-ccd/index.md","title":"Inverse Kinematics: CCD","description":"Cyclic Coordinate Descent Inverse Kinematic (CCDIK) \xe9 diferente das l\xf3gicas anteriores, pois n\xf3s n\xe3o sabemos qual o estado final que desejamos para os ossos. A ideia \xe9 fazer diversas itera\xe7\xf5es at\xe9 que chegue em um resultado aceit\xe1vel.","date":"2024-03-26T00:00:00.000Z","formattedDate":"March 26, 2024","tags":[{"label":"godot","permalink":"/en/blog/tags/godot"},{"label":"gdscript","permalink":"/en/blog/tags/gdscript"},{"label":"inverse kinematics","permalink":"/en/blog/tags/inverse-kinematics"},{"label":"physics","permalink":"/en/blog/tags/physics"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["godot","gdscript","inverse kinematics","physics"]},"unlisted":false,"prevItem":{"title":"Inverse Kinematics: FABR","permalink":"/en/blog/2024/03/29/ik-fabr"},"nextItem":{"title":"Inverse Kinematics: Two Bone","permalink":"/en/blog/2024/03/25/ik-two-bone"}},"content":"Cyclic Coordinate Descent Inverse Kinematic (CCDIK) \xe9 diferente das l\xf3gicas anteriores, pois n\xf3s n\xe3o sabemos qual o estado final que desejamos para os ossos. A ideia \xe9 fazer diversas itera\xe7\xf5es at\xe9 que chegue em um resultado aceit\xe1vel.  \\n\\nEm outras palavras, CCDIK se trata da jornada e n\xe3o do resultado final.  \\n\\n![Corrente de 4 ossos](./chain.svg)  \\n\\n## Cyclic Coordinate Descent\\n\\nPara cada osso temos que calcular a rota\xe7\xe3o para a ponta chegue mais perto do ponto desejado.  \\n\\nDependendo da dire\xe7\xe3o que voc\xea caminhar pela cadeia de ossos o movimento pode ser diferente. Nesse exemplo iremos fazer de tr\xe1z para frente (osso mais perto da ponta at\xe9 osso mais longe da ponta).  \\n\\n![Rotacionando osso 4](./chain_and_target.svg)  \\n\\n![Rotacionnado osso 3](./chain_and_target2.svg)  \\n\\n![Rotacionnado osso 2](./chain_and_target3.svg)  \\n\\n![Rotacionnado osso 1](./chain_and_target4.svg)  \\n\\n![Ap\xf3s primeira itera\xe7\xe3o](./chain_and_target5.svg)  \\n\\nE com isto fizemos a primeira itera\xe7\xe3o. Vamos come\xe7ar a segunda itera\xe7\xe3o.  \\n\\n![Rotacionando osso 4](./chain_and_target6.svg)  \\n\\n![Rotacionnado osso 3](./chain_and_target7.svg)  \\n\\n![Rotacionnado osso 2](./chain_and_target8.svg)  \\n\\n![Rotacionnado osso 1](./chain_and_target9.svg)  \\n\\n![Ap\xf3s segunda itera\xe7\xe3o](./chain_and_target10.svg)  \\n\\nCada itera\xe7\xe3o se aproximando mais do ponto desejado.  \\n\\n![Ap\xf3s N itera\xe7\xf5es](./chain_and_target11.svg)  \\n\\nO \xfanico c\xe1lculo que precisamos fazer toda itera\xe7\xe3o \xe9 o \xe2ngulo da ponta at\xe9 o alvo.  \\n\\n## Negative Scale\\n\\nRecomendo ler no [Two Bone](../2024-03-25-ik-two-bone/index.md) sobre escala negativa. O que importa \xe9 que o mesmo se aplica neste caso, se uma das escalas for negativa, precisamos rotacionar na dire\xe7\xe3o oposta.  \\n\\n## Conclusion\\n\\nEm GDScript o c\xf3digo seria algo como:  \\n\\n```python\\nfor bone in chain:\\n    var angle_to_target: float = bone.global_position.angle_to_point(target.global_position)\\n    var angle_to_tip: float = bone.global_position.angle_to_point(tip.global_position)\\n    var angle_diff: float = angle_to_target - angle_to_tip\\n    \\n    # Escala negativa ou n\xe3o.\\n    if bone.global_scale.sign().x == bone.global_scale.sign().y:\\n        bone.rotate(angle_diff)\\n    else:\\n        bone.rotate(-angle_diff)\\n```\\n\\n:::note\\nNormalmente toda itera\xe7\xe3o voc\xea verificaria se chegou em um resultado aceit\xe1vel.  \\n\\nNo meu caso (game engine), estou fazendo uma itera\xe7\xe3o por frame e sem pensar se chegou ou n\xe3o em um resultado aceit\xe1vel.  \\n:::\\n\\n## References\\n\\n- https://www.ryanjuckett.com/cyclic-coordinate-descent-in-2d/"},{"id":"/2024/03/25/ik-two-bone","metadata":{"permalink":"/en/blog/2024/03/25/ik-two-bone","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-03-25-ik-two-bone/index.md","source":"@site/blog/2024-03-25-ik-two-bone/index.md","title":"Inverse Kinematics: Two Bone","description":"Faz um m\xeas desde que escrevi sobre inverse kinematic look at. Talvez eu esteja enrolando para falar desta pois foi por ela que eu comecei a ver inverse kinematics... e sofri muito.","date":"2024-03-25T00:00:00.000Z","formattedDate":"March 25, 2024","tags":[{"label":"godot","permalink":"/en/blog/tags/godot"},{"label":"gdscript","permalink":"/en/blog/tags/gdscript"},{"label":"inverse kinematics","permalink":"/en/blog/tags/inverse-kinematics"},{"label":"physics","permalink":"/en/blog/tags/physics"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["godot","gdscript","inverse kinematics","physics"]},"unlisted":false,"prevItem":{"title":"Inverse Kinematics: CCD","permalink":"/en/blog/2024/03/26/ik-ccd"},"nextItem":{"title":"C/C++ Lib packages","permalink":"/en/blog/2024/02/28/c-lib-package"}},"content":"Faz um m\xeas desde que escrevi sobre [inverse kinematic look at](../2024-02-04-ik-look-at/index.md). Talvez eu esteja enrolando para falar desta pois foi por ela que eu comecei a ver inverse kinematics... e sofri muito.  \\n\\n**Two bone** inverse kinematic! Dado que queremos a m\xe3o em uma devida posi\xe7\xe3o, como os dois ossos respons\xe1veis pelo bra\xe7o devem se encontrar?  \\n\\nNote que n\xe3o vamos ditar onde a m\xe3o vai estar, por\xe9m onde desejamos que ela estivesse. Isso \xe9 importante pois o calculo muda dependendo se a m\xe3o alcan\xe7a ou n\xe3o a posi\xe7\xe3o desejada.  \\n\\n![Um bra\xe7o dobrado e com a m\xe3o aberta](./arm.svg)  \\n\\n## Two Bone\\n\\n![Bra\xe7o estendido](./arm_extended.svg)  \\n\\nO que voc\xea faz quando tenta alcan\xe7ar algo longe de voc\xea?  \\nEstica o m\xe1ximo poss\xedvel. \\n\\nO que voc\xea faz quando tenta alcan\xe7ar algo perto de voc\xea?  \\nCurva o bra\xe7o de forma que sua m\xe3o acabe na posi\xe7\xe3o desejada.  \\n\\nPrimeira coisa a se fazer \xe9 descobrir se est\xe1 fora ou dentro do alcance \ud83e\udd23.  \\nEm outras palavras, a base do bra\xe7o at\xe9 o ponto desejado \xe9 maior ou menor que o bra\xe7o todo?  \\n\\n![Bra\xe7o estendido com vetor para um ponto fora do alcance](./arm_extended_vec.svg)  \\n\\nPodemos descobrir a dist\xe2ncia entre dois pontos se calcularmos o vetor entre eles e depois usarmos a cl\xe1ssica form\xfala para dist\xe2ncia. Resumidamente:  \\n- `P2-P1`\\n- `\u221a(x\xb2+y\xb2)`\\n\\nSabendo disso podemos calcular as seguintes dist\xe2ncias:  \\n- `A` -> `T`\\n  - Dist\xe2ncia at\xe9 posi\xe7\xe3o desejada\\n- `A` -> `B`\\n  - Tamanho do osso 1\\n- `B` -> `C`\\n  - Tamanho do osso 2\\n\\nAgora podemos verificar justamente se est\xe1 dentro ou fora do alcance!  \\n\\n```\\nDist\xe2ncia at\xe9 posi\xe7\xe3o desejada > (Tamanho do osso 1 + Tamanho do osso 2)\\n```\\n\\n## Out of Range\\n\\nAcontece que estender o bra\xe7o em uma dire\xe7\xe3o \xe9 apenas tornar o \xe2ngulo global dos ossos equivalentes ao da dire\xe7\xe3o.  \\n\\n![Mostrando o \xe2ngulo global do vetor](./arm_extended_ang.svg)  \\n\\n![Mostrando o \xe2ngulo global do bra\xe7o quando est\xe1 na mesma dire\xe7\xe3o do vetor](./arm_extended_ang2.svg)  \\n\\nJ\xe1 vimos em [IK Look at](../2024-02-04-ik-look-at/index.md) como fazer um osso/vetor apontar para uma dire\xe7\xe3o e isso \xe9 tudo que precisamos fazer aqui tamb\xe9m.  \\n\\n- Apontar osso 1 para posi\xe7\xe3o desejada\\n- Apontar osso 2 para posi\xe7\xe3o desejada\\n\\nFim.\\n\\n## In range - Triangle\\n\\nEspero que este desenho j\xe1 deixe claro como utilizaremos trigonometria com bra\xe7os curvados.  \\n\\n![Mostrando que bra\xe7os curvados podem ser vistos como tri\xe2ngulos](./arm_triangle.svg)  \\n\\nNeste caso o ponto onde desejamos posicionar a m\xe3o est\xe1 dentro do alcance dela, ent\xe3o ir\xe1 acabar sendo exatamente a posi\xe7\xe3o da m\xe3o (utilizaremos `C` mas poderia ser `T`).  \\n\\n![Mostrando um bra\xe7o curvado e que utilizaremos as letras `A,B,C` para representar pontos e `a,b,c` para representar tamanho do lado do tri\xe2ngulo](./arm_triangle_curved.svg)  \\n\\nJ\xe1 calculamos os lados do tri\xe2ngulo, ent\xe3o agora vamos focar no seus \xe2ngulos internos (utilizaremos `\u03b1 \u03b2 \u03b3`).  \\n\\n![Mostrando um bra\xe7o curvado e que utilizaremos as letras `A,B,C` para representar pontos e `a,b,c` para representar tamanho do lado do tri\xe2ngulo](./arm_triangle_curved2.svg)  \\n\\nSabendo todos os lados do tri\xe2ngulo podemos utilizar leis do cossenos para descobrir cada \xe2ngulo interno:  \\n\\n```\\na\xb2 = b\xb2 + c\xb2 - 2bc*cos(\u03b1)\\nb\xb2 = a\xb2 + c\xb2 - 2ac*cos(\u03b2)\\nc\xb2 = a\xb2 + b\xb2 - 2ab*cos(\u03b3)\\n```\\n\\nSabendo os lados e sabendo os \xe2ngulos internos n\xf3s conseguimos dizer como o bra\xe7o precisa estar dobrado. O problema \xe9 que ele ainda pode estar dessa forma de diversas maneiras \ud83e\udd23:  \\n\\n![Mostrando diferentes maneiras que o bra\xe7o pode estar rotacionado](./arm_triangle_curved3.svg)  \\n\\n## In range - Two Angles\\n\\nExistem dois \xe2ngulos que estamos buscando descobrir, rotacionando eles conseguiremos os ossos exatamente onde queremos:  \\n\\n![Mostrando rota\xe7\xe3o por rota\xe7\xe3o a se fazer em um bra\xe7o que est\xe1 inicialmente apontando para o eixo X](./arm_triangle_curved4.svg)  \\n\\nNessa imagem o bra\xe7o estava esticado em dire\xe7\xe3o ao eixo X, rotacionamos osso 1 por `\u03b81` e osso 2 por `\u03b82` para obter o bra\xe7o no formato que queriamos.  \\n\\n:::note\\nEu sei que os desenhos tem ficado cada vez piores, eu deveria estar usando uma ferramenta apropriada ou organizando melhor os desenhos...  \\n\\nMas a pregui\xe7a ganhou \ud83d\ude42  \\n:::\\n\\nComo podemos obter `\u03b81`?  \\n\\nSe voc\xea estava pensando *\\"\xe9 s\xf3 calcular o \xe2ngulo do eixo X at\xe9 o osso 2 que voc\xea consegue o `\u03b81`\\"*, deixe-me lembra-lo que o bra\xe7o vai come\xe7ar de forma desconhecida.  \\n\\nMesmo se estivesse esticado no eixo X, o osso 2 n\xe3o vai estar na posi\xe7\xe3o desejada ainda!  \\n\\n![Mostrando o bra\xe7o no eixo X e o ponto desejado acima dele](./arm_triangle_curved5.svg)  \\n\\nMas sabe o que podemos fazer? Calcular o \xe2ngulo do eixo X at\xe9 o ponto desejado (`T`).  \\n\\n![Mostrando o \xe2ngulo do eixo X at\xe9 o vetor feito do osso 1 at\xe9 o ponto desejado](./arm_triangle_curved6.svg)  \\n\\nSabe o porque eu chamei ele de `\u03b1\'`? Porque ele est\xe1 relacionado com `\u03b1`!  \\n\\nAcontece que para obter o \xe2ngulo desejado, podemos rotacionar at\xe9 a dire\xe7\xe3o de `T` e depois remover a rota\xe7\xe3o interna do tri\xe2ngulo (`\u03b1`).  \\n\\n![Mostrando os \xe2ngulos \u03b1\' e \u03b1](./arm_triangle_curved7.svg)  \\n\\nN\xe3o precisamos literalmente rotacionar, podemos calcular o \xe2ngulo e depois rotacionar: `\u03b1\' - \u03b1`  \\n\\n![Mostrando que se reduzirmos \u03b1\' pelo \xe2ngulo interno \u03b1 conseguimos o osso 1 apontando na dire\xe7\xe3o certa](./arm_triangle_curved8.svg)  \\n\\n\\nComo podemos obter `\u03b82`?  \\n\\nFelizmente o osso 2 n\xe3o rotacionado faz um \xe2ngulo de 180\xba com o osso 1.  \\n\\n![Mostrando que o osso 2 quando tem rota\xe7\xe3o 0\xba, faz um \xe2ngulo de 180\xba com osso 1](./arm_triangle_curved9.svg)  \\n\\nSe rotacionarmos por 180\xba e diminuirmos pelo \xe2ngulo interno (`\u03b2`), obtemos justamente o \xe2ngulo que queriamos.  \\n\\n![Mostrando o \xe2ngulo de 180\xba e \u03b2 para melhor ver que \xe9 poss\xedvel conseguir o \xe2ngulo do osso 2](./arm_triangle_curved10.svg)  \\n\\nNovamente n\xe3o precisamos literalmente rotacionar, podemos calcular o \xe2ngulo e depois rotacionar: `180\xba - \u03b2`  \\n\\n![Mostrando que se reduzirmos \u03b2 do 180\xba conseguimos o osso 2 apontando corretamente](./arm_triangle_curved11.svg)  \\n\\nNo final chegamos aos \xe2ngulos gra\xe7as aos \xe2ngulos internos do tri\xe2ngulo:  \\n\\n```\\n\u03b81 = \u03b1\' - \u03b1\\n\u03b82 = 180\xba - \u03b2\\n```\\n\\n## In range - Bend Direction\\n\\nMas se n\xf3s quisermos que o bra\xe7o fique curvado para o outro lado?  \\n\\nAcontece que mesmo curvando para o outro lado, os valores internos do tri\xe2ngulo n\xe3o se alteram.  \\n\\n![Mostrando que mudar a dire\xe7\xe3o que o bra\xe7o curva n\xe3o afeta o tri\xe2ngulo interno](./arm_triangle_curved12.svg)  \\n\\nEnt\xe3o todo o calculo se mant\xe9m at\xe9 a \xfaltima etapa, onde precisamos mudar o sinal da rota\xe7\xe3o interna.  \\n\\n```\\n\u03b81 = \u03b1\' + \u03b1\\n\u03b82 = 180\xba + \u03b2\\n```\\n\\n## In range - Negative Scale\\n\\nQuando voc\xea escala qualquer um dos eixos por negativo, voc\xea tamb\xe9m est\xe1 dizendo que a dire\xe7\xe3o para qual ele est\xe1 rotacionando trocou:  \\n\\n![Vetor (1,1) antes e ap\xf3s escalar X por -1](./vector_x_negative.svg)  \\n\\nSe agora escalarmos o eixo Y negativamente, a rota\xe7\xe3o ir\xe1 voltar a ser igual o in\xedcio.  \\nCada vez que voc\xea escala um eixo negativamente, voc\xea troca a dire\xe7\xe3o das rota\xe7\xf5es.  \\n\\nComo isso afeta nossos calculos?  \\n\\nApenas o \xe2ngulo que utiliza o eixo X como refer\xeancia \xe9 afetado (pois o eixo X nunca \xe9 escalado negativamente)  \\n\\n![Mesma imagem anterior por\xe9m mostrando o segundo \xe2ngulo do ponto de vista do eixo X](./vector_x_negative_x_axis.svg)  \\n\\nAgora n\xe3o queremos reduzir do \xe2ngulo `\u03b1\'`, mas sim acrescentar:  \\n\\n```\\n\u03b81 = \u03b1\' + \u03b1\\n```\\n\\nMas se quisermos o osso curvado para a outra dire\xe7\xe3o? \xc9, ent\xe3o queremos novamente reduzir...  \\n\\n```\\n\u03b81 = \u03b1\' - \u03b1\\n```\\n\\nErr... basicamente estamos bricando de jogo do troca, dependendo da situa\xe7\xe3o queremos rotacionar para diferentes dire\xe7\xf5es.  \\n\\n## Conclusion\\n\\nEste \xe9 o meu c\xf3digo escrito em GDScript (linguagem do Godot):  \\n\\n```python\\nvar flip_bend: bool = false\\nvar target_distance: float = bone_one.global_position.distance_to(target.global_position)\\nvar bone_one_length: float = bone_one.get_bone_length()\\nvar bone_two_length: float = bone_two.get_bone_length()\\nvar angle_to_x_axis: float = (target.global_position - bone_one.global_position).angle()\\n\\n# Fora do alcance.\\nif target_distance > bone_one_length + bone_two_length:\\n  bone_one.global_rotation = angle_to_x_axis\\n  return\\n\\n# Lei dos cossenos.\\nvar angle_0: float = acos(\\n  (target_distance ** 2 + bone_one_length ** 2 - bone_two_length ** 2) / (2 * target_distance * bone_one_length)\\n)\\n\\nvar angle_1: float = acos(\\n  (bone_two_length ** 2 + bone_one_length ** 2 - target_distance ** 2) / (2 * bone_two_length * bone_one_length)\\n)\\n\\n# Dire\xe7\xe3o da curva do bra\xe7o.\\nif flip_bend:\\n  angle_0 = -angle_0\\n  angle_1 = -angle_1\\n\\n# Escala negativa ou n\xe3o.\\nif bone_one.global_scale.sign().x == bone_one.global_scale.sign().y:\\n  bone_one.global_rotation = angle_to_x_axis - angle_0\\nelse:\\n  bone_one.global_rotation = angle_to_x_axis + angle_0\\n\\nbone_two.rotation = PI + angle_1\\n```\\n\\n## Extra - Negative Scale in Godot\\n\\nEste \xe9 extra pois depende muito da ferramenta que est\xe1 utilizando, no meu caso Godot em 2D.  \\n\\nGodot representa transla\xe7\xe3o, rota\xe7\xe3o e escala utilizando matriz. Entenda mais sobre transforms na [documenta\xe7\xe3o do Godot](https://docs.godotengine.org/en/stable/tutorials/math/matrices_and_transforms.html), aqui iremos direto ao assunto.  \\n\\nMatriz identidade representa um transform sem altera\xe7\xe3o nenhuma (transla\xe7\xe3o, rota\xe7\xe3o e escala)\\n\\n![Matriz identidade](./transform.svg)  \\n\\nA desvantagem de utilizar uma matriz para armazenar todas essas informa\xe7\xf5es \xe9 que algumas s\xe3o imposs\xedveis de extrarir corretamente. Olhe a matriz ap\xf3s escalar X por -1:  \\n\\n![Matriz com X escalado por -1](./transform_x_negative.svg)  \\n\\nAgora olhe a matriz ap\xf3s rotacionar por 180\xba e escalar Y por -1:  \\n\\n![Mesma matriz apresentada anteriormente](./transform_x_negative.svg)  \\n\\nExatamente a mesma matriz... Se voc\xea der essa matriz para Godot, ele vai assumir que voc\xea fez a segunda op\xe7\xe3o (rotacionou e escalou Y por -1).  \\n\\nComo isso afeta nossa Inverse Kinematic?  \\n\\nN\xe3o afeta se voc\xea utilizou fun\xe7\xf5es que j\xe1 levam esse problema em conta, por\xe9m se vc operou diretamente sobre os transforms... Voc\xea talvez note alguns problemas.  \\n\\n# References\\n- https://www.alanzucconi.com/2018/05/02/ik-2d-1/\\n- https://docs.godotengine.org/en/stable/tutorials/math/matrices_and_transforms.html"},{"id":"/2024/02/28/c-lib-package","metadata":{"permalink":"/en/blog/2024/02/28/c-lib-package","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-02-28-c-lib-package/index.md","source":"@site/blog/2024-02-28-c-lib-package/index.md","title":"C/C++ Lib packages","description":"N\xe3o bastava meu sofrimento com utiliza\xe7\xe3o de bibliotecas, agora tive mais dor de cabe\xe7a por elas virem do package manager (apt).","date":"2024-02-28T00:00:00.000Z","formattedDate":"February 28, 2024","tags":[{"label":"c","permalink":"/en/blog/tags/c"},{"label":"libs","permalink":"/en/blog/tags/libs"},{"label":"lib","permalink":"/en/blog/tags/lib"},{"label":"package","permalink":"/en/blog/tags/package"},{"label":"packages","permalink":"/en/blog/tags/packages"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["c","libs","lib","package","packages"]},"unlisted":false,"prevItem":{"title":"Inverse Kinematics: Two Bone","permalink":"/en/blog/2024/03/25/ik-two-bone"},"nextItem":{"title":"C/C++ Libs","permalink":"/en/blog/2024/02/12/c-cpp-lib"}},"content":"N\xe3o bastava meu sofrimento com [utiliza\xe7\xe3o de bibliotecas](../2024-02-12-c-cpp-lib/index.md), agora tive mais dor de cabe\xe7a por elas virem do package manager (`apt`).  \\n\\nMeu sofrimento foi enquanto tentava usar a biblioteca [GTK](https://www.gtk.org/) em C.  \\n\\n![Rosto sorrindo com os olhos de forma idiota (e com um ch\xe1peu de m\xe1gico)](./hazbin_hotel_lucifer.svg)  \\n\\n## Installing\\nDuas op\xe7\xf5es:  \\n- Instalar o pacote pronto da minha distribui\xe7\xe3o\\n- Baixar e compilar o c\xf3digo fonte\\n\\nComo eu ainda tenho algum amor por mim mesmo, fui pela primeira op\xe7\xe3o:  \\n```bash\\n$ sudo apt install libgtk-4-1 libgtk-4-dev\\n```\\n\\nE podemos descobrir os arquivos que estes pacotes trouxeram com:  \\n```bash\\n$ dpkg -L libgtk-4-1 libgtk-4-dev\\n```\\n\\nO que nos mostra que o pacote respons\xe1vel por desenvolvimento (`libgtk-4-dev`) trouxe **muitos** headers files e uma biblioteca compartilhada (`/usr/lib/x86_64-linux-gnu/libgtk-4.so`).  \\n\\n![Alguns nomes de headers](./headers.svg)\\n\\n## Code\\nQual ser\xe1 o grande c\xf3digo utilizado durante este post???  \\n```C\\n#include <gtk/gtk.h>\\n\\nint main() { return 0; }\\n```\\n\\nExatamente! Estou cagando para o c\xf3digo, apenas quero acessar a biblioteca!  \\n> \xbfDonde esta la biblioteca?  \\n\\n![Rosto do Deadpool](./deadpool.svg)\\n\\n## Includes\\nTalvez seja meio \xf3bvio mas o c\xf3digo n\xe3o vai ser executado com um simples  \\n```bash\\n$ clang -o my_project main.c\\n```\\n\\nPois o compilador n\xe3o ir\xe1 encontrar a biblioteca.  \\n```bash\\n$ clang -o my_project main.c\\nmain.c:1:10: fatal error: \'gtk/gtk.h\' file not found\\n#include <gtk/gtk.h>\\n         ^~~~~~~~~~~\\n1 error generated.\\n```\\n\\nExiste duas maneiras de adicionar headers ao seu c\xf3digo:  \\n- `#include \\"biblioteca.h\\"`\\n    - Dentro do seu diret\xf3rio atual, busque o arquivo `biblioteca.h`.\\n- `#include <biblioteca.h>`\\n    - Dentro dos diret\xf3rio padr\xf5es, busque o arquivo `biblioteca.h`.\\n\\n:::info\\nAmbos os tipos aceitam caminhos para o arquivo. Exemplo:  \\n`#include \\"dir1/dir2/biblioteca.h\\"`  \\n`#include <dir1/dir2/biblioteca.h>`  \\n\\nE aspas tamb\xe9m podem ser usadas para buscar em diret\xf3rios padr\xf5es...  \\nMas se voc\xea faz isso, voc\xea \xe9 um criminoso.\\n:::\\n\\nQual o diret\xf3rio padr\xe3o para os headers? `/usr/include`  \\n\\nLembra quando vimos a lista dos arquivos que o pacote trouxe? Muitos headers foram justamente para o diret\xf3rio padr\xe3o.  \\n```bash\\n...\\n/usr/include/gtk-4.0/gtk/gtkshortcutmanager.h\\n/usr/include/gtk-4.0/gtk/gtkshortcutsgroup.h\\n/usr/include/gtk-4.0/gtk/gtkshortcutssection.h\\n/usr/include/gtk-4.0/gtk/gtkshortcutsshortcut.h\\n/usr/include/gtk-4.0/gtk/gtkshortcutswindow.h\\n...\\n```\\n\\nPerfeito ent\xe3o, podemos alterar nosso c\xf3digo para usar `#include <gtk-4.0/gtk/gtk.h>`  \\n```C\\n#include <gtk-4.0/gtk/gtk.h>\\n\\nint main() { return 0; }\\n```\\n\\nE vai dar tudo cert.... ei...  \\n```bash\\n$ clang -o my_project main.c\\nIn file included from main.c:1:\\n/usr/include/gtk-4.0/gtk/gtk.h:29:10: fatal error: \'gtk/css/gtkcss.h\' file not found\\n#include <gtk/css/gtkcss.h>\\n         ^~~~~~~~~~~~~~~~~~\\n1 error generated.\\n```\\n\\nNope!  \\n\\n![emoticon :^)](./stupid_face.svg)  \\n\\n## Packages\\nEst\xe1 \xe9 a organiza\xe7\xe3o do desenvolvedor da biblioteca:  \\n```\\nproject/\\n\u251c\u2500\u2500 gdk\\n\u251c\u2500\u2500 gsk\\n\u251c\u2500\u2500 gtk\\n\u2514\u2500\u2500 unix-print\\n```\\n\\nPara eles realmente \xe9 `#include <gtk/gtk.h>` por isso outras partes do c\xf3digo deles utiliza assim!  \\nE n\xe3o \xe9 como se eles fossem ficar alterando **em todos os arquivos do projeto** para refer\xeanciar o caminho com vers\xe3o mais recente do projeto.  \\n\\nQueremos \xe9 dizer ao compilador os diret\xf3rios a procurar os arquivos...  \\nPera, n\xf3s j\xe1 fizemos isso no [post anterior](../2024-02-12-c-cpp-lib/index.md), usando a flag `-I`.  \\n\\n```C\\n#include <gtk/gtk.h>\\n\\nint main() { return 0; }\\n```\\n\\nAgora basta executar utilizando a flag e sucess... ei...  \\n```bash\\n$ clang -o my_project main.c -I/usr/include/gtk-4.0\\nIn file included from main.c:1:\\nIn file included from /usr/include/gtk-4.0/gtk/gtk.h:29:\\n/usr/include/gtk-4.0/gtk/css/gtkcss.h:29:10: fatal error: \'glib.h\' file not found\\n#include <glib.h>\\n         ^~~~~~~~\\n1 error generated.\\n```\\n\\nVoc\xea esqueceu que est\xe1 biblioteca pode usar outras bibliotecas e precisamos adicionar o diret\xf3rio delas tamb\xe9m!  \\n\\n![emoticon :^) feito de emoticons :^) menores](./stupid_face_2.svg)  \\n\\n## Dependecies\\nExiste um programa justamente para ajudar a descobrir as dep\xeandencias de um m\xf3dulo.  \\n\\n```bash\\n$ pkg-config --cflags gtk4\\n-I/usr/include/gtk-4.0 -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/harfbuzz -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/fribidi -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/x86_64-linux-gnu -I/usr/include/graphene-1.0 -I/usr/lib/x86_64-linux-gnu/graphene-1.0/include -mfpmath=sse -msse -msse2 -pthread\\n\\n$ pkg-config --libs gtk4\\n-lgtk-4 -lpangocairo-1.0 -lpango-1.0 -lharfbuzz -lgdk_pixbuf-2.0 -lcairo-gobject -lcairo -lgraphene-1.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0\\n```\\n\\nMas como se descobre qual o nome do m\xf3dulo da minha biblioteca? N\xe3o sei, se voc\xea souber, me conte!  \\n\\n:::tip\\nUtilizando o `pkg-config --list-all` voc\xea consegue uma lista de todos os m\xf3dulos mas nada me disse explicitamente que o m\xf3dulo de `libgtk-4-dev` \xe9 `gtk4`.  \\n\\nTalvez seja o `Source: gtk4` quando utilizando `apt show libgtk-4-1`...  \\nMas n\xe3o sei \xaf\\\\\\\\\\\\_(\u30c4)\\\\_/\xaf  \\n:::\\n\\nGra\xe7as a este programa podemos gerar facilmente as flags e finalmente executar o c\xf3digo!  \\n```bash\\n$ clang `pkg-config --cflags gtk4` -o my_project main.c `pkg-config --libs gtk4`\\n```\\n\\n![headers entrando numa caixa que representa o bin\xe1rio](./filling_box.svg)  \\n\\n## Language Server\\nSabe aquela ferramenta respons\xe1vel por completar o c\xf3digo, avisar de errors, te levar \xe0 defini\xe7\xf5es...  \\nBem, ela est\xe1 reclamando e n\xe3o queremos deixar ela assim n\xe9?.  \\n\\n```C\\n#include <gtk/gtk.h> // \'gtk/gtk.h\' file not found\\n\\nint main() { return 0; }\\n```\\n\\nEstamos passando diversas informa\xe7\xf5es para nosso compilador (`clang`) sobre diret\xf3rios para utilizar mas n\xe3o estamos passando nada para o language server (`clangd`). Podemos fazer um teste r\xe1pido para ver o que `clangd` acha do nosso arquivo com:  \\n\\n```bash\\n$ clangd --check=main.c\\n...\\nE[01:35:13.895] [pp_file_not_found] Line 1: \'gtk/gtk.h\' file not found\\n...\\n```\\n\\n![Pessoa representando Clang com informa\xe7\xf5es e outra pessoa representando Clangd pedindo tamb\xe9m](./two_asking_for_data.svg)\\n\\n## Project Dependencies\\nPoderiamos pesquisar e descobrir os argumentos a se passar ao `clangd` mas isso \xe9 algo que varia de projeto a projeto e \xfaltima coisa que queremos \xe9 ficar configurando no Visual Studio os argumentos para cada projeto.  \\n\\nPor isso que `clangd` por padr\xe3o sempre procura configura\xe7\xf5es do projeto em certos arquivos do projeto como `compile_commands.json`! Poderiamos escrever este arquivo na m\xe3o... mas n\xe3o queremos ent\xe3o vamos utilizar um programinha amigo chamado `bear`!  \\n\\nEle recebe o comando que voc\xea est\xe1 utilizando para criar o execut\xe1vel e cria o `compile_commands.json`:  \\n\\n```bash\\n$ sudo apt install bear\\n$ bear -- clang `pkg-config --cflags gtk4` -o my_project main.c `pkg-config --libs gtk4`\\n```\\n\\nPronto, conseguimos o arquivo de configura\xe7\xe3o para o `clangd`.  \\n\\n```\\nmy_project/\\n\u251c\u2500\u2500 compile_commands.json\\n\u251c\u2500\u2500 main.c\\n\u2514\u2500\u2500 my_project\\n```\\n\\n\\nBasta dar um tempo (ou reniciar o editor de texto) e seu language server deve perceber que est\xe1 tudo certo!  \\n\\nFim!  \\nC\xf3digo funciona!  \\nLanguage server funciona!  \\nVoc\xea est\xe1 pronto para desenvolver com GTK!  \\nN\xe3o se sente uma nova pessoa com todo esse conhecimento?  \\n\\n![Rosto cansado](./tired_face.svg)  \\n\\nBem, voc\xea n\xe3o \xe9 a primeira pessoa a achar tudo isso desnecessariamente complicado para come\xe7ar a programar... \\nOutras pessoas criaram ferramentas para ajudar nisso!  \\n\\nEnt\xe3o continue lendo se quiser jogar tudo que viu at\xe9 aqui no lixo e descobrir uma maneira mais f\xe1cil!  \\n\\n![Rosto cansado e puto](./tired_and_angry_face.svg)  \\n\\n## Meson!\\nGTK adora falar do [Meson](https://mesonbuild.com/) e como j\xe1 estou sofrendo mesmo... Por que n\xe3o parar pra ver?  \\nInstalando!  \\n\\n```\\n$ sudo apt install meson ninja-build\\n```\\n\\nClaro que se vamos testar outra ferramenta, precisamos testar do zero! Apenas com o nosso querido arquivo `main.c`:  \\n```\\nmy_project/\\n\u2514\u2500\u2500 main.c\\n```\\n\\n### Setuping\\n```bash\\n$ meson init\\n```\\n\\nIsso cria o arquivo de configura\xe7\xe3o chamado `meson.build`, nele tem diversas informa\xe7\xf5es mais sofisticadas sobre o projeto:  \\n```meson\\nproject(\'my_project\', \'c\',\\n  version : \'0.1\',\\n  default_options : [\'warning_level=3\'])\\n\\nexecutable(\'my_project\',\\n           \'main.c\',\\n           install : true)\\n```\\n\\nViu?  \\nEle n\xe3o \xe9 apenas _\\"estou rodando um c\xf3digo\\"_.  \\nEle \xe9 _\\"estou criando um \u2b50projeto\u2b50\\"_.  \\n\\nComo ele \xe9 um projeto s\xe9rio, ele vai guardar todas as informa\xe7\xf5es dele em um pasta separada para n\xe3o sujar o **seu** projeto \u2764\ufe0f!  \\n\\nEnt\xe3o diga para ele onde botar os arquivos dele (eu escolhi `builddir`):  \\n```bash\\n$ meson setup builddir\\n```\\n\\nSeu projeto deve acabar com a estrutura:  \\n```\\nmy_project/\\n\u251c\u2500\u2500 builddir/\\n\u251c\u2500\u2500 main.c\\n\u2514\u2500\u2500 meson.build\\n```\\n\\n### Project Dependencies\\nSim! Em toda ferramenta \xe9 necess\xe1rio que voc\xea a biblioteca que quer usar!  \\nVoc\xea n\xe3o quer que ela ande por todos os diret\xf3rios do seu computador procurando a sua biblioteca, n\xe9?  \\nImagina se pega a errada por acidente!  \\n\\nFazemos isso pelo `meson.build`!  \\n```meson\\nproject(\'my_project\', \'c\',\\n  version : \'0.1\',\\n  default_options : [\'warning_level=3\'])\\n\\nexecutable(\'my_project\',\\n           \'main.c\',\\n           install : true,\\n           dependencies: dependency(\'gtk4\'))\\n```\\n\\n:::note\\nEu ainda n\xe3o sei o como se descobre que o nome do m\xf3dulo \xe9 `gtk4`!\\n:::\\n\\n:::info\\nCaso voc\xea tenha mais que uma depend\xeancia, o par\xe2metro `dependencies` aceita lista:  \\n```meson\\nexecutable(\'my_project\',\\n           \'main.c\',\\n           install : true,\\n           dependencies: [dependency(\'gtk4\')])\\n```\\n:::\\n\\n### Compiling\\nPronto! Voc\xea est\xe1 pronto para ter seu projeto compilado **sem erro**! <sub>Talvez warnings coff coff...</sub>  \\n\\nEntre no diret\xf3rio de configura\xe7\xe3o do Meson (no meu caso `builddir`) e execute o comando de compila\xe7\xe3o:  \\n```bash\\n$ cd builddir\\n$ meson compile\\n```\\n\\n:::note\\nPor que entrar no diret\xf3rio antes? Meson permite que voc\xea tenha diversos setups.  \\nSe voc\xea estiver fora do diret\xf3rio \xe9 poss\xedvel rodar o comando se adicionar o argumento para `-C`:  \\n```bash\\n$ meson compile -C builddir\\n```\\n:::\\n\\n\\"`clangd` est\xe1 reclamando novamente de `\'gtk/gtk.h\' file not found`!\\"  \\nN\xe3o se desespere pois se voc\xea olhar os arquivos criados ap\xf3s compila\xe7\xe3o, um deles \xe9 bem \xfatil.  \\n```\\nmy_project/\\n\u251c\u2500\u2500 builddir/\\n\u2502   \u251c\u2500\u2500 ...\\n\u2502   \u251c\u2500\u2500 compile_commands.json\\n\u2502   \u2514\u2500\u2500 my_project\\n\u251c\u2500\u2500 main.c\\n\u2514\u2500\u2500 meson.build\\n```\\n\\nOlha l\xe1 arquivo que o `clangd` quer!  \\nE o seu execut\xe1vel mas isso era de se esperar...  \\n\\nCopie ele para a raiz do seu projeto e pronto, seu `clangd` deve parar de chorar erro!  \\n```\\nmy_project/\\n\u251c\u2500\u2500 builddir/\\n\u2502   \u251c\u2500\u2500 ...\\n\u2502   \u251c\u2500\u2500 compile_commands.json\\n\u2502   \u2514\u2500\u2500 my_project\\n\u251c\u2500\u2500 compile_commands.json\\n\u251c\u2500\u2500 main.c\\n\u2514\u2500\u2500 meson.build\\n```\\n\\n### Conclusion\\nMeson possui uma etapa de configura\xe7\xe3o, mas tirando isso os comandos depois ficam bem mais sensatos!  \\n\\nCompilando com `clang` e atualizando `compile_commands.json`:  \\n```bash\\n$ clang `pkg-config --cflags gtk4` -o my_project main.c `pkg-config --libs gtk4`\\n$ bear -- clang `pkg-config --cflags gtk4` -o my_project main.c `pkg-config --libs gtk4`\\n```\\n\\nCompilando com `meson` e atualizando `compile_commands.json`:  \\n```bash\\n$ meson compile\\n$ cp compile_commands.json ../compile_commands.json\\n```\\n\\nSe eu descobrir uma maneira de ap\xf3s compila\xe7\xe3o j\xe1 copiar o arquivo `compile_commands.json`, tudo vai ficar perfeito!  \\n\\n## References\\n- https://docs.gtk.org/gtk4/compiling.html\\n- https://linuxcommand.org/lc3_lts0040.php\\n- https://github.com/rizsotto/Bear\\n- https://mesonbuild.com/Tutorial.html"},{"id":"/2024/02/12/c-cpp-lib","metadata":{"permalink":"/en/blog/2024/02/12/c-cpp-lib","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-02-12-c-cpp-lib/index.md","source":"@site/blog/2024-02-12-c-cpp-lib/index.md","title":"C/C++ Libs","description":"- Durante a faculdade eu aprendi C","date":"2024-02-12T00:00:00.000Z","formattedDate":"February 12, 2024","tags":[{"label":"c","permalink":"/en/blog/tags/c"},{"label":"libs","permalink":"/en/blog/tags/libs"},{"label":"lib","permalink":"/en/blog/tags/lib"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["c","c++","libs","lib"]},"unlisted":false,"prevItem":{"title":"C/C++ Lib packages","permalink":"/en/blog/2024/02/28/c-lib-package"},"nextItem":{"title":"Inverse Kinematics: Look At","permalink":"/en/blog/2024/02/04/ik-look-at"}},"content":"- Durante a faculdade eu aprendi C\\n    - Abri Visual Studio\\n    - Escrevi c\xf3digo em C\\n    - Executei\\n\\n- Recentemente eu usei C++ no projeto Godot\\n    - Segui instru\xe7\xe3o do Godot para configurar o VSCode\\n    - Escrevi c\xf3digo em C++\\n    - Executei\\n\\nEm ambos os casos eu nunca aprendi direito sobre bibliotecas... Notei claramente quando segui as instru\xe7\xf5es de projeto para **Build from Source** e n\xe3o sabia mais o que fazer com os arquivos `.a` e `.so` gerados.  \\n\\n![Desenho de um rosto rindo que nem idiota](./stupid_laughting_face.svg)\\n\\nEu sabia que poderia compilar C/C++ com GCC ou Clang, mas meu conhecimento se resumia a compilar projetos 100% meus.  \\n\\n```\\ngcc main.c -o main\\n```\\n\\nBem, vamos entender cada um dois formatos primeiro.\\n\\n## `.a` (archive)\\n\\nSe trata de uma biblioteca est\xe1tica (**static library**), ou seja, podemos ver como um conjunto de fun\xe7\xf5es/vari\xe1veis que seram anexadas ao seu execut\xe1vel durante a etapa de compila\xe7\xe3o (na etapa do **linker**).  \\n\\n\xd3timo quando voc\xea quer que seu programa tenha toda a l\xf3gica.  \\n\\n## `.so` (shared object)\\n\\nSe trata de uma biblioteca compartilhada (**shared library**), ou seja, podemos ver como um execut\xe1vel que ser\xe1 utilizado por qualquer programa que precise dele (ainda \xe9 preciso avisar ao **linker** da existencia da biblioteca).  \\n\\n\xd3timo pois ocupa menos espa\xe7o do computador da pessoa com a mesma l\xf3gica.  \\n\\n## GCC 4 Steps\\n\\nEu j\xe1 mencionei linker duas vezes, para entender o que ele \xe9 precisamos olhar para cada etapa do GCC.  \\n\\n[![4 etapas do GCC](./big_steps.svg)](./big_steps.svg)  \\n\\nUm resumo seria:\\n\\n- Preprocessor\\n    - Respons\xe1vel por fazer pr\xe9 processamentos, o mais popular \xe9 a substitui\xe7\xe3o de `#include` pelo c\xf3digo dentro dos headers (`.h`).\\n    - A sa\xedda dessa etapa \xe9 conhecida como [translation unit](https://en.wikipedia.org/wiki/Translation_unit_%28programming%29) (ainda \xe9 c\xf3digo C).\\n- Compiler\\n    - Respons\xe1vel por converter o c\xf3digo C para c\xf3digo assembly.\\n- Assembler\\n    - Respons\xe1vel por converter o c\xf3digo assembly para um [object code](https://en.wikipedia.org/wiki/Object_code), ele \xe9 formado de c\xf3digo de m\xe1quina (c\xf3digo especifico para rodar naquela m\xe1quina) e \\"refer\xeancias\\" a serem encontradas.\\n        - Por exemplo, voc\xea pode refer\xeanciar a fun\xe7\xe3o `void do_it()` mas ela n\xe3o estar neste arquivo `.c`.\\n- Linker\\n    - Respons\xe1vel por encontrar as refer\xeancias de um arquivo e linkar elas, a sa\xedda \xe9 justamente o execut\xe1vel final.\\n\\n## Project from Zero\\n\\nCome\xe7amos com uma estrutura bem vazia de projeto:  \\n\\n```\\nproject/\\n\u2514\u2500\u2500 src/\\n    \u251c\u2500\u2500 main.c\\n    \u2514\u2500\u2500 ...\\n```\\n\\nApens possuimos c\xf3digo nosso, ent\xe3o tudo que precisamos fazer para criar o execut\xe1vel \xe9  \\n\\n```\\ngcc src/main.c -o main\\n``` \\n\\n---\\n\\nAlgum momento do nosso projeto decidimos usar bibliotecas de terceiro e n\xe3o queremos misturar ela com o nosso c\xf3digo ent\xe3o resolvemos sempre separar os arquivos dela em outros diret\xf3rios.  \\n\\nO primeiro tipo de arquivo que bibliotecas trazem junto s\xe3o os headers, utilizados justamente para o compilador conseguir determinar o que exatamente tem que buscar nas bibliotecas.  \\n\\n```\\nproject/\\n\u251c\u2500\u2500 include/\\n\u2502   \u2514\u2500\u2500 header.h\\n\u2514\u2500\u2500 src/\\n    \u251c\u2500\u2500 main.c\\n    \u2514\u2500\u2500 ...\\n```\\n \\nPodemos adicionar um diret\xf3rio onde se buscar headers com o argumento `-I` seguido pelo diret\xf3rio (n\xe3o \xe9 separado por espa\xe7o):  \\n\\n```\\ngcc src/main.c -o main -Iinclude\\n```\\n\\nAgora podemos adicionar `#include <header.h>` sem o compilador reclamar que `header.h` n\xe3o foi encontrado.  \\n\\nSe tentarmos chamar uma fun\xe7\xe3o que est\xe1 no `header.h` ainda teremos erro pois n\xe3o temos a fun\xe7\xe3o, apenas a assinatura dela. N\xf3s precisamos do c\xf3digo da fun\xe7\xe3o, que pode estar em um `.so` ou `.a`.  \\n\\n:::warning\\n- Saiba se sua biblioteca \xe9 C++ ou C para saber se deve usar `gcc` ou `g++`.  \\n- Se ambos tipos de bibliotecas existirem o linker vai priorizar procurar o `.so`.  \\n:::\\n\\n---\\n\\n### `.a`\\n\\nNovamente n\xe3o vamos querer misturar este arquivo com os do nosso projeto, ent\xe3o vamos deixar a biblioteca na pasta `lib`.  \\n\\n```\\nproject/\\n\u251c\u2500\u2500 include/\\n\u2502   \u2514\u2500\u2500 header.h\\n\u251c\u2500\u2500 lib/\\n\u2502   \u2514\u2500\u2500 libname.a\\n\u2514\u2500\u2500 src/\\n    \u251c\u2500\u2500 main.c\\n    \u2514\u2500\u2500 ...\\n```\\n\\nPodemos passar ao compilador diret\xf3rio onde as nossas bibliotecas se encontram com o argumento `-L` seguido pelo diret\xf3rio (n\xe3o \xe9 separado por espa\xe7o):  \\n\\n```\\ngcc src/main.c -o main -Iinclude -Llib\\n```\\n\\nPrecisamos especificar as que desajamos usar e isso \xe9 feito com o argumento `-l` seguido pelo nome base da biblitoeca (n\xe3o \xe9 separado por espa\xe7o):  \\n\\n```\\ngcc src/main.c -o main -Iinclude -Llib -lname\\n```\\n\\n:::note\\n`-lname` vai buscar pela biblioteca `libname.a`, este \xe9 um atalho para refer\xeanciar bibliotecas.  \\n`-l:libname.a` pode ser usado em casos que o nome da biblioteca n\xe3o segue estes padr\xf5es ou precise for\xe7ar o uso da static.  \\n:::\\n\\n:::info\\nMuitos pacotes de bibliotecas em Linux providenciam o `.a` quando baixamos a vers\xe3o `-dev` delas. Por exemplo:  \\n\\n```\\nsudo apt install libxcb-xinput-dev\\n```\\n\\nNo meu caso, agora posso encontrar o `libxcb-xinput.a` em `/usr/lib/x86_64-linux-gnu/`.  \\n:::\\n\\n---\\n\\n### `.so`\\n\\nSegue basicamente a mesma l\xf3gica do `.a`, deixar a biblioteca no diret\xf3rio `lib`.  \\n\\n```\\nproject/\\n\u251c\u2500\u2500 include/\\n\u2502   \u2514\u2500\u2500 header.h\\n\u251c\u2500\u2500 lib/\\n\u2502   \u2514\u2500\u2500 libname.so\\n\u2514\u2500\u2500 src/\\n    \u251c\u2500\u2500 main.c\\n    \u2514\u2500\u2500 ...\\n```\\n\\nPassar ao compilador diret\xf3rio onde as nossas bibliotecas se encontram com o argumento `-L` seguido pelo diret\xf3rio (n\xe3o \xe9 separado por espa\xe7o):  \\n\\n```\\ngcc src/main.c -o main -Iinclude -Llib\\n```\\n\\nNo caso de bibliotecas compartilhadas este diret\xf3rio pode possuir centenas de bibliotecas, ent\xe3o faz sentido voc\xea ter que especificar as que voc\xea quer usar. Novamente usamos o argumento `-l` seguido pelo nome base da biblitoeca (n\xe3o \xe9 separado por espa\xe7o):  \\n\\n```\\ngcc src/main.c -o main -Iinclude -Llib -lname\\n```\\n\\n:::note\\n`-lname` vai buscar pela biblioteca `libname.so`, este \xe9 um atalho para refer\xeanciar bibliotecas.  \\n`-l:libname.so` pode ser usado em casos que o nome da biblioteca n\xe3o segue estes padr\xf5es.  \\n:::\\n\\nDurante a execu\xe7\xe3o do c\xf3digo o sistema operacional vai buscar a biblioteca em lugares predefinidos (linux busca em lugares como `/usr/lib`).  \\n\\nMas se nossa biblioteca n\xe3o for estar em um destes lugares predefinidos? Ainda \xe9 poss\xedvel adicionar lugares onde se buscar durante a execu\xe7\xe3o.  \\n\\nPodemos passar argumentos ao linker com `-Wl` seguido pelos argumentos que ele deve receber, no caso `-Rlib` (argumentos separados por virgula):  \\n\\n```\\ngcc src/main.c -o main -Iinclude -Llib -lname -Wl,-Rlib\\n```\\n\\nNosso execut\xe1vel agora vai sempre tentar buscar a biblioteca na pasta `lib` que estiver no mesmo diret\xf3rio que ele.  \\n\\n:::warning\\nBibliotecas compartilhadas podem depender de outras bibliotecas compartilhadas. Nestes casos o linker ir\xe1 utilizar a mesma l\xf3gica vista acima para buscar as depend\xeancias.  \\n\\nCaso precise saber das depend\xeancias da sua biblioteca, pode utilizar:  \\n```\\nldd libname.so\\n```\\n:::\\n\\n## References\\n- https://en.wikipedia.org/wiki/GNU_Compiler_Collection#Design  \\n- https://en.wikipedia.org/wiki/Preprocessor  \\n- https://en.wikipedia.org/wiki/Linker_(computing)  \\n- https://stackoverflow.com/questions/25160245/clang-linking-with-a-so-file  \\n- https://stackoverflow.com/questions/31176747/how-to-use-a-library-with-headers-and-so-files  \\n- https://stackoverflow.com/questions/480764/linux-error-while-loading-shared-libraries-cannot-open-shared-object-file-no-s  \\n- https://stackoverflow.com/questions/6578484/telling-gcc-directly-to-link-a-library-statically\\n- https://www.youtube.com/watch?v=or1dAmUO8k0  \\n- https://www.youtube.com/watch?v=pLy69V2F_8M  \\n- https://www.youtube.com/watch?v=Wt4dxDNmDA8  \\n- https://tree.nathanfriend.io/"},{"id":"/2024/02/04/ik-look-at","metadata":{"permalink":"/en/blog/2024/02/04/ik-look-at","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-02-04-ik-look-at/index.md","source":"@site/blog/2024-02-04-ik-look-at/index.md","title":"Inverse Kinematics: Look At","description":"Dado que j\xe1 refleti sobre forward kinematics, est\xe1 na hora de falar sobre inverse kinematics (por mais que eu esteja com pregui\xe7a de fazer isso).","date":"2024-02-04T00:00:00.000Z","formattedDate":"February 4, 2024","tags":[{"label":"godot","permalink":"/en/blog/tags/godot"},{"label":"gdscript","permalink":"/en/blog/tags/gdscript"},{"label":"inverse kinematics","permalink":"/en/blog/tags/inverse-kinematics"},{"label":"physics","permalink":"/en/blog/tags/physics"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["godot","gdscript","inverse kinematics","physics"]},"unlisted":false,"prevItem":{"title":"C/C++ Libs","permalink":"/en/blog/2024/02/12/c-cpp-lib"},"nextItem":{"title":"Unions e Enums","permalink":"/en/blog/2023/12/31/union-enum"}},"content":"Dado que j\xe1 refleti sobre [forward kinematics](../2023-12-18-fk/index.md), est\xe1 na hora de falar sobre inverse kinematics (por mais que eu esteja com pregui\xe7a de fazer isso).  \\n\\nVamos come\xe7ar por algo que eu at\xe9 me questiono se seria inverse kinematic: **Look at**.  \\n\\nSer capaz de fazer uma m\xe3o apontar para uma posi\xe7\xe3o ou a cabe\xe7a olhar para uma dire\xe7\xe3o.  \\n\\n![Jogador 2D movendo a cabe\xe7a para cima](./player_looking_animated.svg)  \\n\\n## Look At\\n\\nLembrando que articula\xe7\xf5es sempre possuem as suas informa\xe7\xf5es locais e que as informa\xe7\xf5es globais s\xe3o facilmente calcul\xe1veis, nossa tarefa \xe9 descobrir como queremos alterar qualquer uma delas para alcan\xe7ar nosso objetivo.  \\n\\nNo caso, nosso objetivo \xe9 fazer com que o vetor da articula\xe7\xe3o aponte para X.  \\n\\n![Uma imagem com o vector apontando para um X na direita dele e outra imagem igual por\xe9m com o X movido para cima do vetor](./simple_example.svg)  \\n\\nNa primeira parte da imagem, temos o vetor j\xe1 apontando em dire\xe7\xe3o do X.  \\nNa segunda parte da imagem, o X se encontra a 90\xba graus do vetor.  \\n\\nOlhando a imagem n\xf3s conseguimos saber que para continuar apontando para X temos que rotacionar por 90\xba, mas como conseguir este \xe2ngulo matem\xe1ticamente?  \\n\\nTalvez voc\xea j\xe1 tenha notado mas vamos fazer isto usando trigonometria (se prepare que IK \xe9 tri\xe2ngulo para tudo que \xe9 lado).  \\n\\n## 0\xba ~ 90\xba\\n\\nUm bom come\xe7o \xe9 sabermos calcular o \xe2ngulo para uma posi\xe7\xe3o, sem se preocupar com detalhes como global e local.  \\n\\n![Vetor com \xe2ngulo desconhecido entre 0\xba e 90\xba](./angle.svg)  \\n\\nFun\xe7\xf5es trigonom\xe9tricas s\xe3o o segredo para trabalhar com tri\xe2ngulos (seno, cosseno e tangente) e neste caso tangente \xe9 justamente o que procuramos.  \\n\\n```\\ntan \u03b8 = cateto oposto / cateto adjacente\\n```\\n\\nAgora n\xf3s temos o valor da tangente para qualquer posi\xe7\xe3o (x,y).  \\n\\n* (1,1)\\n    * `tan(\u03b8) = 1`\\n* (3,2)\\n    * `tan(\u03b8) = 2/3`\\n* (4,7)\\n    * `tan(\u03b8) = 7/4`\\n\\nSe voc\xea bem se lembra, existem fun\xe7\xf5es trigonom\xe9tricas inversas que s\xe3o justamente quem v\xe3o nos dar o \xe2ngulo que chega ao valor que temos.  \\n\\n* (1,1)\\n    * `tan(\u03b8) = 1`\\n        * `atan(1) = \u03b8`\\n            * 45\\n* (3,2)\\n    * `tan(\u03b8) = 2/3`\\n        * `atan(2/3) = \u03b8`\\n            * 33.690067526\\n* (4,7)\\n    * `tan(\u03b8) = 7/4`\\n        * `atan(7/4) = \u03b8`\\n            * 60.255118703\\n\\n\\n## 0\xba ~ 360\xba\\n\\nUm problema que cedo ou tarde iriamos notar \xe9 que dos valores da tangete n\xe3o \xe9 poss\xedvel definir qual quadrante se trata.  \\n\\n![Imagem mostrando que n\xe3o da pra decompor o \xe2ngulo a partir do valor da tangente](./angles.svg)  \\n\\n`atan(1)` pode ser 45\xba ou 225\xba  \\n`atan(-1)` pode ser 135\xba ou 315\xba  \\n\\n\xdanica maneira de saber exatamente o quadrante \xe9 sabendo o sinal dos eixos.  \\n\\n* (positivo,positivo)\\n    * atan(\u03b8) + 0\xba\\n* (negativo,positivo)\\n    * atan(\u03b8) + 90\xba\\n* (negativo,negativo)\\n    * atan(\u03b8) + 180\xba\\n* (positivo,negativo)\\n    * atan(\u03b8) + 270\xba\\n\\n\xc9 por isso que em muitas bibliotecas matem\xe1ticas existe a fun\xe7\xe3o `atan(v)` e a fun\xe7\xe3o `atan2(x, y)`.  \\nA segunda utiliza os eixos para saber o real \xe2ngulo.  \\n\\n## Rotating\\n\\nAgora que sabemos como obter o \xe2ngulo do ponto (0,0) at\xe9 uma posi\xe7\xe3o qualquer, podemos finalmente rotacionar a articula\xe7\xe3o.  \\n\\nO pr\xf3ximo problema \xe9 que **n\xe3o** estamos falando de rotacionar a partir do ponto (0,0) mas sim da posi\xe7\xe3o da articula\xe7\xe3o.  \\n\\n![Mostrando diferen\xe7a entre o \xe2ngulo local e global](./rotation.svg)  \\n\\n**\u03b81**: Rota\xe7\xe3o global, usando ponto (0,0) como refer\xeancia.  \\n**\u03b82**: Rota\xe7\xe3o local, usando a posi\xe7\xe3o da articula\xe7\xe3o como refer\xeancia.  \\n\\nPara solucionar isto podemos calcular a posi\xe7\xe3o do ponto em rela\xe7\xe3o a articula\xe7\xe3o:  \\n\\n```\\nposi\xe7\xe3o do ponto relativa \xe0 articula\xe7\xe3o =\\n        posi\xe7\xe3o global do ponto - posi\xe7\xe3o global da articula\xe7\xe3o\\n```  \\n\\nExemplo:\\n\\nPosi\xe7\xe3o global do ponto: (35, 10)  \\nPosi\xe7\xe3o global da articula\xe7\xe3o: (25, 10)  \\nPosi\xe7\xe3o do ponto relativa \xe0 articula\xe7\xe3o: (10, 0)  \\n\xc2ngulo: 0\xba  \\n\\nSe movermos o ponto:  \\n\\nPosi\xe7\xe3o global do ponto: (50, 30)  \\nPosi\xe7\xe3o global da articula\xe7\xe3o: (25, 10)  \\nPosi\xe7\xe3o do ponto relativa \xe0 articula\xe7\xe3o: (25, 20)  \\n\xc2ngulo: 38\xba  \\n\\nPronto, agora sabemos qual deveria ser a rota\xe7\xe3o daquela articula\xe7\xe3o!  \\n\\n## Conclusion\\n\\nVoc\xea provavelmente n\xe3o ter\xe1 que pensar em nada disso pois muitas game engines j\xe1 possuem m\xe9todos para lidar com isto, por exemplo em Godot podemos encontrar algo como:  \\n\\n`Node2D.get_angle_to(global_position)`  \\n\\nEssa fun\xe7\xe3o retorna o \xe2ngulo global que falta para estar em dire\xe7\xe3o ao ponto global.  \\n\\n## References\\n- https://www.youtube.com/watch?v=8Eur16foTMw  \\n- https://cplusplus.com/reference/cmath/atan2/"},{"id":"/2023/12/31/union-enum","metadata":{"permalink":"/en/blog/2023/12/31/union-enum","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-12-31-union-enum/index.md","source":"@site/blog/2023-12-31-union-enum/index.md","title":"Unions e Enums","description":"Ao come\xe7ar a estudar Rust percebi o qu\xe3o a rela\xe7\xe3o deste dois s\xe3o pr\xf3xima, por\xe9m primeiro precisamos rever unions e enums.","date":"2023-12-31T00:00:00.000Z","formattedDate":"December 31, 2023","tags":[{"label":"enum","permalink":"/en/blog/tags/enum"},{"label":"rust","permalink":"/en/blog/tags/rust"},{"label":"union","permalink":"/en/blog/tags/union"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["enum","rust","union"]},"unlisted":false,"prevItem":{"title":"Inverse Kinematics: Look At","permalink":"/en/blog/2024/02/04/ik-look-at"},"nextItem":{"title":"Forward Kinematics","permalink":"/en/blog/2023/12/18/fk"}},"content":"Ao come\xe7ar a estudar Rust percebi o qu\xe3o a rela\xe7\xe3o deste dois s\xe3o pr\xf3xima, por\xe9m primeiro precisamos rever unions e enums.  \\n\\n## Union\\n\\nSe trata de utilizar o mesmo espa\xe7o de mem\xf3ria para armazenar um entre diversos tipos.  \\n\\n```C\\nunion Content {\\n    int i;\\n    float f;\\n    char c;\\n};\\n\\nunion Content content;\\n```\\n\\nNesse exemplo eu declarei um union que pode conter um dos seguintes valores: int, float, char.  \\n\\nEnt\xe3o eu posso escrever qualquer um dos tipos nele:\\n\\n```C\\ncontent.i = 10;\\ncontent.f = 5.0;\\ncontent.c = \'a\';\\n```\\n\\nO valor final de `content` vai ser `a` pois foi o \xfaltimo valor que botamos.  \\n\\nPor\xe9m a parte importante \xe9 justamente o fato de usarmos o mesmo espa\xe7o de mem\xf3ria para armazenar qualquer um destes tipos.\\n\\n```C\\ncontent.c = \'a\';\\n\\nprintf(\\"%c\\\\n\\", content.c); // print \\"a\\"\\nprintf(\\"%c\\\\n\\", content.i); // print \\"a\\"\\n```\\n\\nQuando voc\xea declara uma union, o tamanho dela \xe9 definido pelo maior tamanho entre os tipos que ela precisa conseguir armazenar.  \\n\\n| Tipo | Tamanho |\\n| ---- | ------- |\\n| int  | 4 bytes |\\n| float | 4 bytes |\\n| char | 1 byte |\\n\\nNo nosso caso o melhor tamanho seria 4 bytes, pois com ele voc\xea consegue armazenar o `char` tamb\xe9m.  \\n\\nNada impede de armazenarmos um `char` e tentarmos ler aquele espa\xe7o da mem\xf3ria como um `int`.  \\n\\n```C\\ncontent.c = \'a\';\\n\\nprintf(\\"%c\\\\n\\", content.c); // print \\"a\\"\\nprintf(\\"%c\\\\n\\", content.i); // print \\"a\\"\\n\\n// O character \'a\' \xe9 nada mais que o n\xfamero 97 na mem\xf3ria.\\nprintf(\\"%i\\\\n\\", content.c); // print \\"97\\"\\nprintf(\\"%i\\\\n\\", content.i); // print \\"97\\"\\n```\\n\\nResta a n\xf3s utilizar corretamente o valor daquele espa\xe7o de mem\xf3ria. \\n\\nAfinal n\xe3o queremos armazenar um `char` na union e mais tarde no c\xf3digo tentar utilizar como um `int`, n\xe9?  \\n\\n```C\\ncontent.c = \'a\';\\n\\n// ...\\n\\nprintf(\\"%i\\\\n\\", content.i + 5); // print \\"102\\"\\n```\\n\\nN\xe3o s\xf3 isso como quando voc\xea armazena um valor naquele espa\xe7o de mem\xf3ria, ele apenas escreve no espa\xe7o que ele usaria.  \\n\\n```C\\ncontent.c = \'a\';\\n\\nprintf(\\"%i\\\\n\\", content.c); // print \\"97\\"\\nprintf(\\"%i\\\\n\\", content.i); // print \\"97\\"\\n\\ncontent.i = -10;\\ncontent.c = \'a\';\\n\\nprintf(\\"%i\\\\n\\", content.c); // print \\"97\\"\\nprintf(\\"%i\\\\n\\", content.i); // print \\"-159\\"\\n```\\n\\nO que aconteceu aqui?  \\n\\n- In\xedcio do programa os **4** bytes de `content` est\xe3o com zero\\n- Content recebeu no **primeiro** byte o valor 97 (pois `a` == 97)\\n- Printamos utilizando `content.c`\\n    - Isto nos faz utilizar **um** byte\\n- Printamos utilizando `content.i`\\n    - Isto nos faz utilizar **4** bytes\\n- Content recebeu encheu os **4** bytes para formar o valor de -10\\n- Content recebeu no **primeiro** byte o valor 97\\n- Printamos utilizando `content.c`\\n    - Isto nos faz utilizar **um** byte (primeiro byte est\xe1 com o valor de 97)\\n- Printamos utilizando `content.i`\\n    - Isto nos faz utilizar **4** bytes (primeiro byte + os outros 3 bytes que n\xe3o foram limpos)\\n\\nPodemos confirmar isto settando para zero antes de preenchermos.  \\n\\n```C\\ncontent.c = \'a\';\\n\\nprintf(\\"%i\\\\n\\", content.c); // print \\"97\\"\\nprintf(\\"%i\\\\n\\", content.i); // print \\"97\\"\\n\\ncontent.i = -10;\\ncontent.i = 0;\\ncontent.c = \'a\';\\n\\nprintf(\\"%i\\\\n\\", content.c); // print \\"97\\"\\nprintf(\\"%i\\\\n\\", content.i); // print \\"97\\"\\n```\\n\\nComo podemos ver, \xe9 essencial termos uma maneira de identificar qual \xe9 o tipo atual na union.  \\n\\n## Enum\\n\\nSe trata de ligar um identificador a um n\xfamero \xfanico dentro de um agrupamento.  \\n\\n```C\\nenum Type {\\n    Integer,\\n    Floating,\\n    Character,\\n};\\n\\nenum Type type;\\n```\\n\\nNeste caso est\xe1 ligando:  \\n\\n| Identificador | N\xfamero |\\n| ------------- | ------ |\\n| Integer       | 0      |\\n| Floating      | 1      |\\n| Character     | 2      |\\n\\nIsto poupa trabalho de criarmos manualmente uma vari\xe1vel para cada valor, por exemplo:  \\n\\n```C\\nint Integer = 0;\\nint Floating = 1;\\nint Character = 2;\\n```\\n\\nAl\xe9m de deixarmos claro o tipo de vari\xe1vel durante a cria\xe7\xe3o dela (como um valor dentro daquele agrupamento).  \\n\\n```C\\nenum Type type = Integer;\\n\\nprintf(\\"%i\\\\n\\", type); // print \\"0\\"\\n```\\n\\nEnfim, a essa altura voc\xea pode j\xe1 ter notado a import\xe2ncia de enum para unions.  \\n\\nCom eles podemos criar ligar um identificador a um tipo, como se fosse uma tag para aquele union.  \\n\\n```C\\nunion content {\\n    int i;\\n    float f;\\n    char c;\\n} content;\\n\\nenum Types {\\n    Integer,\\n    Floating,\\n    Character,\\n} type;\\n\\ncontent.f = 5.0;\\ntype = Floating;\\n```\\n\\nNote que precisamos atualizar `type` sempre que mudarmos o tipo de `content`, por\xe9m ganhamos a capacidade de tratar corretamente a union.  \\n\\n```C\\nif (type == Floating) {\\n    printf(\\"%f\\\\n\\", content.f);\\n} else if (type == Character) {\\n    printf(\\"%c\\\\n\\", content.c);\\n} else {\\n    printf(\\"%i\\\\n\\", content.i);\\n}\\n```\\n\\nEste tipo de estrutura \xe9 t\xe3o comum que tem o nome de [Tagged Union](https://en.wikipedia.org/wiki/Tagged_union).  \\n\\n## Rust Enum\\n\\nAcredito que o `enum` do Rust seja nada mais que um tagged union.  \\n\\n```Rust\\n#[derive(Debug)]\\nenum Type {\\n    Integer,\\n    Floating,\\n    Character,\\n}\\n\\nprintln!(\\"{:#?}\\", Type::Integer);\\n```\\n\\nEm outras lugares enum ligaria apenas identificadores a n\xfameros, por\xe9m em Rust voc\xea pode armazenar estrutura/tipos juntos aos enums.  \\n\\n```Rust\\n#[derive(Debug)]\\nenum Type {\\n    Integer(i32),\\n    Floating(f32),\\n    Character(char),\\n}\\n\\nlet content: Type = Type::Floating(5.0);\\n\\nprintln!(\\"{:#?}\\", content);\\n```\\n\\nIsso nos da uma estrutura s\xf3 que possue a capacidade de fazer o mesmo que tagged union e com menos chance do desenvolvedor cometer um erro.  \\n\\nPor exemplo, n\xe3o precisamos mais atualizar o tipo armazenado na vari\xe1vel toda vez que alteramos:  \\n\\n```\\n// C\\ncontent.f = 5.0;\\ntype = Floating;\\n\\n// Rust\\nlet content: Type = Type::Floating(5.0);\\n```\\n\\nRust \xe9 linguagem que preza bastante seguran\xe7a, ent\xe3o faria sentido tratar como se fosse uma \xfanica estrutura para evitar os problemas de union (embora Rust tenha o tipo union).  \\n\\n## Comparison\\n\\n### C\\n\\n```C\\nunion content {\\n    int i;\\n    float f;\\n    char c;\\n} content;\\n\\nenum Types {\\n    Integer,\\n    Floating,\\n    Character,\\n} type;\\n\\ncontent.f = 5.0;\\ntype = Floating;\\n\\nif (type == Floating) {\\n    // Fazer algo com float\\n} else if (type == Character) {\\n    // Fazer algo com char\\n} else {\\n    // Fazer algo com int\\n}\\n```\\n\\n### Rust\\n\\n```Rust\\n#[derive(Debug)]\\nenum Type {\\n    Integer(i32),\\n    Floating(f32),\\n    Character(char),\\n}\\n\\nlet content: Type = Type::Floating(5.0);\\n\\nmatch content {\\n    Type::Floating(f) => // Fazer algo com float\\n    Type::Character(c) => // Fazer algo com char\\n    Type::Integer(i) => // Fazer algo com int\\n}\\n```"},{"id":"/2023/12/18/fk","metadata":{"permalink":"/en/blog/2023/12/18/fk","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-12-18-fk/index.md","source":"@site/blog/2023-12-18-fk/index.md","title":"Forward Kinematics","description":"Esses \xfaltimos meses eu tenho gastado um grande tempo (mais do que gostaria) vendo o c\xf3digo de inverse kinematics 2D do Godot.","date":"2023-12-18T00:00:00.000Z","formattedDate":"December 18, 2023","tags":[{"label":"godot","permalink":"/en/blog/tags/godot"},{"label":"gdscript","permalink":"/en/blog/tags/gdscript"},{"label":"forward kinematics","permalink":"/en/blog/tags/forward-kinematics"},{"label":"physics","permalink":"/en/blog/tags/physics"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["godot","gdscript","forward kinematics","physics"]},"unlisted":false,"prevItem":{"title":"Unions e Enums","permalink":"/en/blog/2023/12/31/union-enum"},"nextItem":{"title":"Little-endian and Big-endian","permalink":"/en/blog/2023/11/27/little-and-big-endians"}},"content":"Esses \xfaltimos meses eu tenho gastado um grande tempo (mais do que gostaria) vendo o c\xf3digo de inverse kinematics 2D do Godot.  \\n\\nE eu preciso passar a limpo o conhecimento b\xe1sico que eu possuo, para melhor garantir que n\xe3o estou cagando tudo no c\xf3digo deles.  \\n\\n![Mesma cara do meme \\"awkward look monkey puppet\\"](monkey_face.svg)  \\n\\n## Robotic Arms\\n\\n\xc9 dif\xedcil falar de forward kinematics (FK) e inverse kinematics (IK) sem entender bra\xe7os rob\xf3ticos, pois foi o primeiro uso destas l\xf3gicas.  \\n\\nPara entender melhor um bra\xe7o, vamos dividi-lo em 4 partes:  \\n- Base\\n- Limbs (membros)\\n- Joints (articula\xe7\xf5es)\\n- End effector (m\xe3o do bra\xe7o)  \\n\\n![Bra\xe7o rob\xf3tico](robotic_arm.svg)  \\n\\n- Base, provid\xeancia estabilidade para o bra\xe7o\\n- Limbs, separa as partes entre si\\n- Joints, s\xe3o respons\xe1veis por se rotacionar\\n- End effector, interage com o objeto\\n\\nA parte que mais damos aten\xe7\xe3o quando falamos de FK e IK s\xe3o joints, pois elas provid\xeancia a l\xf3gica de movimenta\xe7\xe3o do bra\xe7o.\\n\\n## FK & IK\\n\\nSe tivessemos que resumir cada assunto, seria algo por parte de:\\n- Forward kinematics\\n    - Foca em descobrir o estado da m\xe3o, dado que o bra\xe7o est\xe1 em certo estado.  \\n- Inverse kinematics\\n    - Foca em descobrir o estado do bra\xe7o, dado que deseja a m\xe3o em certa estado.  \\n\\n:::note\\nQuando eu digo \\"estado\\", estou me referindo a posi\xe7\xe3o e rota\xe7\xe3o dos respectivos componentes.\\n:::\\n\\n### FK\\n![FK](fk.svg)  \\n\\n### IK\\n![IK](ik.svg)  \\n\\n## Forward Kinematic\\n\\nMinha kinematic favorita por ser a mais simples de calcular, onde tudo se resume a um grande somat\xf3rio.  \\n\\n![Bra\xe7o rob\xf3tico totalmente vertical](robotic_arm_state_0.svg)  \\n\\nAdicionei setas nessa imagem para represetarem as rota\xe7\xf5es locais das joints (articula\xe7\xf5es), essa rota\xe7\xe3o se refere ao quanto aquela joint (articula\xe7\xe3o) se rotacionou.  \\n\\n![Bra\xe7o rob\xf3tico totalmente vertical com \xe2ngulos cl\xe1ssicos](robotic_arm_state_1.svg)  \\n\\nAgora adicionei uma circufer\xeancia mostrando os \xe2ngulos cl\xe1ssicos e podemos usar eles como refer\xeancia para a rota\xe7\xe3o global, essa rota\xe7\xe3o \xe9 sempre relacionada \xe0 direita (eixo X).  \\n\\nPara come\xe7ar nosso experimento, podemos rotacionar o end effector (m\xe3o) por 90 graus e ver o que podemos concluir.  \\n\\n![M\xe3o rotacionada 90 graus](robotic_arm_state_2.svg)  \\n\\n- End effector\\n    - Rota\xe7\xe3o local: 90\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n- Joint 2\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: 0\xba\\n- Joint 1\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: 0\xba\\n\\nPodemos ver que rotacionar um ponto localmente n\xe3o afeta os anteriores (os pais). Tamb\xe9m importante notar que rota\xe7\xe3o local sempre ir\xe1 afetar a rota\xe7\xe3o global daquele ponto.  \\n\\nMas se tivessemos rotacionado a joint 2 por 90 graus?  \\n\\n![Joint 2 rotacionada 90 graus](robotic_arm_state_3.svg)  \\n\\n- End effector\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n- Joint 2\\n    - Rota\xe7\xe3o local: 90\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n- Joint 1\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: 0\xba\\n\\nNotamos que rotacionar localmente um ponto, afeta a rota\xe7\xe3o global dos pontos seguintes pela mesma quantidade.  \\n\\nSe rotacionarmos localmente o end effector por -90 graus?  \\n\\n![End effector rotacionada -90 graus](robotic_arm_state_4.svg)  \\n\\n- End effector\\n    - Rota\xe7\xe3o local: -90\xba\\n    - Rota\xe7\xe3o global: 0\xba\\n- Joint 2\\n    - Rota\xe7\xe3o local: 90\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n- Joint 1\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: 0\xba\\n\\nN\xf3s conseguimos voltar a rota\xe7\xe3o global do end effector para 0\xba pois rotacionar localmente sempre afeta o global do mesmo ponto.  \\n\\nNesse pequeno experimento j\xe1 podemos come\xe7ar a notar uma formula bem simples:  \\n`Rota\xe7\xe3o global = Rota\xe7\xe3o global do ponto anterior + Rota\xe7\xe3o local`  \\n\\nUtilizando o end effector como refer\xeancia:  \\n`Rota\xe7\xe3o global = 90\xba + (-90\xba) = 0\xba`  \\n\\n:::info\\nNo caso do primeiro ponto (joint 1), a rota\xe7\xe3o global anterior seria 0 graus.  \\n`Rota\xe7\xe3o global = 0 + Rota\xe7\xe3o local`  \\n:::\\n\\nO que aconteceria se rotacionarmos a joint 1 por 90 graus?  \\n\\n![Joint 1 rotacionada 90 graus](robotic_arm_state_5.svg)  \\n\\n- End effector\\n    - Rota\xe7\xe3o local: -90\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n- Joint 2\\n    - Rota\xe7\xe3o local: 90\xba\\n    - Rota\xe7\xe3o global: 180\xba\\n- Joint 1\\n    - Rota\xe7\xe3o local: 90\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n\\nPodemos ver que afetamos a rota\xe7\xe3o global de todos os pontos seguintes, aumentando eles por 90 graus.  \\n\\n## Conclusion\\n\\nLembra quando falei que forward kinematics \\"foca em descobrir o estado da m\xe3o, dado que o bra\xe7o est\xe1 em certo estado\\".  \xc9 exatamente esse somat\xf3rio que nos ajuda a resolver o problema.  \\n\\nVamos supor que temos 5 pontos (ponto 1 \xe9 a base):\\n\\n- Ponto 5\\n    - Rota\xe7\xe3o local: -90\xba\\n    - Rota\xe7\xe3o global: ?\\n- Ponto 4\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: ?\\n- Ponto 3\\n    - Rota\xe7\xe3o local: 180\xba\\n    - Rota\xe7\xe3o global: ?\\n- Ponto 2\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: ?\\n- Ponto 1\\n    - Rota\xe7\xe3o local: 90\xba\\n    - Rota\xe7\xe3o global: ?\\n\\nE que n\xf3s queremos descobrir para onde cada ponto est\xe1 apontando.  \\n\\nSe a gente come\xe7ar da base, podemos ir calculando a rota\xe7\xe3o global de cada ponto usando a formula:  \\n`Rota\xe7\xe3o global = Rota\xe7\xe3o global do ponto anterior + Rota\xe7\xe3o local`  \\n\\nRota\xe7\xe3o global do ponto 1: `0\xba + 90\xba = 90\xba`  \\nRota\xe7\xe3o global do ponto 2: `90\xba + 0\xba = 90\xba`  \\nRota\xe7\xe3o global do ponto 3: `90\xba + 180\xba = 270\xba`  \\nRota\xe7\xe3o global do ponto 4: `270\xba + 0\xba = 270\xba`  \\nRota\xe7\xe3o global do ponto 5: `270\xba + -90\xba = 180\xba`  \\n\\n\\n:::note\\nIsto tamb\xe9m deixa bem vis\xedvel o como a rota\xe7\xe3o global de um ponto anterior afeta o pr\xf3ximo ponto. Por exemplo:  \\n\\nSomar 90 graus ao ponto 1 faria com que ponto 2 tivesse mais 90 graus...  \\nPonto 2 com 90 graus a mais faria com que ponto 3 tivesse mais 90 graus...  \\nPonto 3 com 90 graus a mais faria com que ponto 4 tivesse mais 90 graus...  \\n:::\\n\\n- Ponto 5\\n    - Rota\xe7\xe3o local: -90\xba\\n    - Rota\xe7\xe3o global: 180\xba\\n- Ponto 4\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: 270\xba\\n- Ponto 3\\n    - Rota\xe7\xe3o local: 180\xba\\n    - Rota\xe7\xe3o global: 270\xba\\n- Ponto 2\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n- Ponto 1\\n    - Rota\xe7\xe3o local: 90\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n\\n## References\\n\\n- [Alan Zucconi Blog](https://www.alanzucconi.com/2017/04/06/forward-kinematics/)\\n- [Milo\u0161 \u010cern\xfd Animation Video](https://www.youtube.com/watch?v=0a9qIj7kwiA)\\n- [Forward Kinematics Wikipedia](https://en.wikipedia.org/wiki/Forward_kinematics)\\n- [Robot Kinematics Wikipedia](https://en.wikipedia.org/wiki/Robot_kinematics)"},{"id":"/2023/11/27/little-and-big-endians","metadata":{"permalink":"/en/blog/2023/11/27/little-and-big-endians","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-11-27-little-and-big-endians/index.md","source":"@site/blog/2023-11-27-little-and-big-endians/index.md","title":"Little-endian and Big-endian","description":"Defini\xe7\xf5es utilizadas para informar em que ordem os bytes v\xe3o ser escritos na mem\xf3ria.","date":"2023-11-27T00:00:00.000Z","formattedDate":"November 27, 2023","tags":[{"label":"bit","permalink":"/en/blog/tags/bit"},{"label":"byte","permalink":"/en/blog/tags/byte"},{"label":"bytes","permalink":"/en/blog/tags/bytes"},{"label":"bits","permalink":"/en/blog/tags/bits"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["bit","byte","bytes","bits"]},"unlisted":false,"prevItem":{"title":"Forward Kinematics","permalink":"/en/blog/2023/12/18/fk"},"nextItem":{"title":"Least vs Most significant bit","permalink":"/en/blog/2023/11/27/most-and-least-significant-bit"}},"content":"Defini\xe7\xf5es utilizadas para informar em que ordem os bytes v\xe3o ser escritos na mem\xf3ria.  \\n\\n\xc9 preciso lembrar que a mem\xf3ria tem endere\xe7os, existe in\xedcio e final.  \\nPara o nosso exemplo iremos usar 16 bits (2 bytes):  \\n\\n```\\n| Endere\xe7o da mem\xf3ria |\\n| ------------------- |\\n| 0                   |\\n| 1                   |\\n| 2                   |\\n| 3                   |\\n| 4                   |\\n| 5                   |\\n| 6                   |\\n| 7                   |\\n| 8                   |\\n| 9                   |\\n| 10                  |\\n| 11                  |\\n| 12                  |\\n| 13                  |\\n| 14                  |\\n| 15                  |\\n```\\n\\nO computador apenas trabalha com bytes (modifica\xe7\xf5es s\xe3o feitas em bytes, n\xe3o bits).  \\nEnt\xe3o vamos representar uma divis\xe3o entre os bytes.  \\n\\n```\\n| Endere\xe7o da mem\xf3ria |\\n| ------------------- |\\n| 0                   |\\n| 1                   |\\n| 2                   |\\n| 3                   |\\n| 4                   |\\n| 5                   |\\n| 6                   |\\n| 7                   |\\n| ------------------- |\\n| 8                   |\\n| 9                   |\\n| 10                  |\\n| 11                  |\\n| 12                  |\\n| 13                  |\\n| 14                  |\\n| 15                  |\\n```\\n\\nSe pegarmos um inteiro (unsigned) como 5351, vamos precisar de 2 bytes para armazena-lo (pois seu bin\xe1rio \xe9 `00010100 11100111`).  \\nExiste duas maneiras famosas de se armazenar eles.  \\n\\n**Little-endian**: Byte menos significativo primeiro (\\"little end first\\").  \\n**Big-endian**: Byte mais significativo primeiro (\\"big end first\\").  \\n\\n```\\n| Endere\xe7o da mem\xf3ria | Little-endian | Big-endian |\\n| ------------------- | ------------- | ---------- |\\n| 0                   | 1             | 0          |\\n| 1                   | 1             | 0          |\\n| 2                   | 1             | 0          |\\n| 3                   | 0             | 1          |\\n| 4                   | 0             | 0          |\\n| 5                   | 1             | 1          |\\n| 6                   | 1             | 0          |\\n| 7                   | 1             | 0          |\\n| ------------------- | ------------- | ---------- |\\n| 8                   | 0             | 1          |\\n| 9                   | 0             | 1          |\\n| 10                  | 0             | 1          |\\n| 11                  | 1             | 0          |\\n| 12                  | 0             | 0          |\\n| 13                  | 1             | 1          |\\n| 14                  | 0             | 1          |\\n| 15                  | 0             | 1          |\\n```\\n\\nNote que os bits n\xe3o mudam de ordem, apenas os bytes."},{"id":"/2023/11/27/most-and-least-significant-bit","metadata":{"permalink":"/en/blog/2023/11/27/most-and-least-significant-bit","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-11-27-most-and-least-significant-bit/index.md","source":"@site/blog/2023-11-27-most-and-least-significant-bit/index.md","title":"Least vs Most significant bit","description":"O bit mais significativo \xe9 o bit que representa a maior valor do n\xfamero.","date":"2023-11-27T00:00:00.000Z","formattedDate":"November 27, 2023","tags":[{"label":"bit","permalink":"/en/blog/tags/bit"},{"label":"byte","permalink":"/en/blog/tags/byte"},{"label":"bytes","permalink":"/en/blog/tags/bytes"},{"label":"bits","permalink":"/en/blog/tags/bits"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["bit","byte","bytes","bits"]},"unlisted":false,"prevItem":{"title":"Little-endian and Big-endian","permalink":"/en/blog/2023/11/27/little-and-big-endians"},"nextItem":{"title":"Loading an image is simple","permalink":"/en/blog/2023/11/09/load-image-simple"}},"content":"O bit mais significativo \xe9 o bit que representa a maior valor do n\xfamero.  \\nO bit menos significativo \xe9 o bit que representa o menor valor do n\xfamero.  \\n\\nO n\xfamero 149 em bin\xe1rio \xe9 `10010101`, cada bit \xe9 respons\xe1vel por representar um n\xfamero.    \\n\\n|  1  |  0  |  0  |  1  |  0  |  1  |  0  |  1  |\\n| --- | --- | --- | --- | --- | --- | --- | --- |\\n| 128 | 64  | 32  | 16  | 8   | 4   | 2   | 1   |\\n\\nN\xf3s sabemos que isto \xe9 equivalente a 149 pois somando o valor de todos os bits que s\xe3o 1 obtemos 149.  \\n\\n128 + 16 + 4 + 1 = 149"},{"id":"/2023/11/09/load-image-simple","metadata":{"permalink":"/en/blog/2023/11/09/load-image-simple","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-11-09-load-image-simple/index.md","source":"@site/blog/2023-11-09-load-image-simple/index.md","title":"Loading an image is simple","description":"Sprite2D","date":"2023-11-09T00:00:00.000Z","formattedDate":"November 9, 2023","tags":[{"label":"godot","permalink":"/en/blog/tags/godot"},{"label":"gdscript","permalink":"/en/blog/tags/gdscript"},{"label":"image","permalink":"/en/blog/tags/image"},{"label":"texture","permalink":"/en/blog/tags/texture"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["godot","gdscript","image","texture"]},"unlisted":false,"prevItem":{"title":"Least vs Most significant bit","permalink":"/en/blog/2023/11/27/most-and-least-significant-bit"},"nextItem":{"title":"Mondot","permalink":"/en/blog/2023/10/09/mondot"}},"content":"```gdscript\\nvar sprite := Sprite2D.new()\\nsprite.texture = load(\\"res://image.png\\") as Texture2D\\n```\\n\\n```gdscript\\nvar sprite := Sprite2D.new()\\nvar image := Image.load_from_file(\\"user://image.png\\")\\nsprite.texture = ImageTexture.create_from_image(image) as Texture2D\\n```\\n\\n### Sprite2D\\n\\nSprite2D \xe9 um Node que j\xe1 possui informa\xe7\xf5es do que quer exibir e apenas fica respons\xe1vel por administrar como exibir.  \\n\\nO que ele quer exiber? Texture.\\n\\n### Texture\\n\\nTexture possui a informa\xe7\xe3o daquilo que quer exibir e j\xe1 foi carregado na placa de video.  \\n\\nO que ele quer exibir? Image.\\n\\n### Image\\n\\nImage possui a informa\xe7\xe3o daquilo que quer exibir e j\xe1 foi carregado na mem\xf3ria RAM.\\n\\nO que ele quer exibir? File.\\n\\n### File\\n\\nFile possui os bytes daquilo que quer exibir por\xe9m ainda est\xe1 no HD/SSD.\\n\\n## `load()` vs `load_from_file()`\\n\\n### load()\\n\\nUtilizado para carregar imagens que foram comprimidas e armazenadas juntas ao execut\xe1vel do jogo (as imagens que voc\xea tem que refer\xeanciar com `res://`).  \\n\\nEst\xe1 fun\xe7\xe3o tamb\xe9m mant\xe9m um cache das imagens carregadas, toda chamada ir\xe1 retornar a mesma imagem j\xe1 carregada anteriormente.  \\n\\n### load_from_file()\\n\\nUtilizado para carregar imagens novas, sem pr\xe9vio conhecimento (imagens refer\xeanciadas com `user://` ou que voc\xea possui os bytes em uma vari\xe1vel).  \\n\\nEst\xe1 fun\xe7\xe3o **n\xe3o** mant\xe9m cache, cada imagem gerada por ela ir\xe1 ocupar mais espa\xe7o na mem\xf3ria.  \\n\\n\\n## References\\n\\n- [Sprite2D](https://docs.godotengine.org/en/stable/classes/class_sprite2d.html)\\n    - [Godot code](https://github.com/godotengine/godot/blob/master/scene/2d/sprite_2d.h)\\n- [ImageTexture](https://docs.godotengine.org/en/stable/classes/class_imagetexture.html)\\n    - [Godot code](https://github.com/godotengine/godot/blob/master/scene/resources/image_texture.h)\\n- [Texture2D](https://docs.godotengine.org/en/stable/classes/class_texture2d.html)\\n    - [Godot code](https://github.com/godotengine/godot/blob/master/scene/resources/texture.h)\\n- [Texture](https://docs.godotengine.org/en/stable/classes/class_texture.html)\\n    - [Godot code](https://github.com/godotengine/godot/blob/master/scene/resources/texture.h)\\n- [Image](https://docs.godotengine.org/en/stable/classes/class_image.html)\\n    - [Godot code](https://github.com/godotengine/godot/blob/master/core/io/image.h)\\n- [ImageLoader Godot code](https://github.com/godotengine/godot/blob/master/core/io/image_loader.h)"},{"id":"/2023/10/09/mondot","metadata":{"permalink":"/en/blog/2023/10/09/mondot","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-10-09-mondot/index.md","source":"@site/blog/2023-10-09-mondot/index.md","title":"Mondot","description":"No post anterior declarei que busquei por um tempo uma interface gr\xe1fica (GUI) para MongoDB por\xe9m n\xe3o fiquei satisfeita com nenhuma.","date":"2023-10-09T00:00:00.000Z","formattedDate":"October 9, 2023","tags":[{"label":"mongo","permalink":"/en/blog/tags/mongo"},{"label":"mongodb","permalink":"/en/blog/tags/mongodb"},{"label":"gui","permalink":"/en/blog/tags/gui"},{"label":"godot","permalink":"/en/blog/tags/godot"},{"label":"python","permalink":"/en/blog/tags/python"},{"label":"gdscript","permalink":"/en/blog/tags/gdscript"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["mongo","mongodb","gui","godot","python","gdscript"]},"unlisted":false,"prevItem":{"title":"Loading an image is simple","permalink":"/en/blog/2023/11/09/load-image-simple"},"nextItem":{"title":"MongoDB GUI","permalink":"/en/blog/2023/09/22/mongodb-gui"}},"content":"No [post anterior](../2023-09-22-mongodb-gui/index.md) declarei que busquei por um tempo uma interface gr\xe1fica (GUI) para [MongoDB](https://www.mongodb.com/) por\xe9m n\xe3o fiquei satisfeita com nenhuma.  \\n\\nNeste post vou falar do desenvolvimento do [Mondot](https://github.com/thiagola92/Mondot), interface gr\xe1fica para o banco MongoDB.  \\n\\n> Por favor, levar em conta que eu posso tomar decis\xf5es ruins \ud83e\udd23\\n\\n## Reason\\n\\nEm 2021, eu tinha duas coisas em mente:\\n- Nenhuma GUI de Mongo me agrada\\n- Quero aprender [Godot](https://godotengine.org/)\\n\\nBastou essas duas coisas para eu querer come\xe7ar este projeto.  \\nEu n\xe3o queria fazer a melhor GUI do mundo, eu queria me divertir com Godot ao mesmo tempo que resolvia um incomodo que eu tinha com GUIs.  \\n\\n## Start\\n\\nAbri o Godot, comecei a criar containers, janelas, bot\xf5es, etc. Dias depois me veio a pergunta:  \\n\\n> Como diabos eu vou me comunicar com o Mongo?  \\n\\n![Rosto de idiota com o olhar torto para fora](oh_crap.svg)  \\n\\nEu vou pegar o texto que o usu\xe1rio escrever e fazer o que com ele?  \\nPassar para um Node.js?  \\nEu vou ter que instalar Node.js na m\xe1quina da pessoa?  \\nComo eu pego a resposta?  \\nEu conseguiria usar GDNative?  \\nComo que os outros projetos fazem isto?  \\n\\nAgora eu precisava descobrir como faria isto acontecer.  \\n\\n## Cheating\\n\\n![Colando do colega do lado](cheating.svg)  \\n\\n**[Robomongo](https://github.com/Studio3T/robomongo)**! Tamb\xe9m conhecido como **Robo 3T**.  \\nUm projeto open-source que em 2017 foi adquirido pelos criadores do [Studio 3T](https://studio3t.com/).  \\n\\nO que importa \xe9 que eu tenho um projeto para ~~copiar~~ estudar!  \\n\\nRobo 3T possui dois reposit\xf3rios:\\n- robomongo\\n    - Respons\xe1vel pela interface gr\xe1fica\\n- robomongo-shell\\n    - Respons\xe1vel pela intera\xe7\xe3o com o Mongo.\\n\\nImportante notar que o segundo \xe9 um fork do Mongo oficial, justamente pois nele \xe9 incluido um shell interativo para se comunicar com o banco.  \\n\\nIsso faz sentido, j\xe1 que a interface de linha de comando geralmente \xe9 a primeira coisa a ser feita para interagir com bancos. Como mais as pessoas interagiriam com o banco antes de GUI existirem? Poderia ser por c\xf3digo mas seria um baita trabalho cada opera\xe7\xe3o.  \\n\\nEnt\xe3o era isso, tudo que eu tinha que fazer era:\\n1. Incluir o shell do Mongo na minha interface gr\xe1fica\\n2. Utilizar o modo iterativo do shell\\n\\n## Problems\\n\\nEu n\xe3o tinha ideia de como fazer para incluir o shell na interface gr\xe1fica.  \\nDecidi aceitar que passaria como o shell separado para o usu\xe1rio e dei essa parte como dada.  \\n\\nEu que n\xe3o vou reclamar das minhas decis\xf5es idiotas no meu projeto pessoal.  \\n\\n![Shrug face](shrug.svg)\\n\\nAgora tudo que eu tinha que fazer \xe9 chamar o shell pelo Godot.  \\nPara isto eu iria precisar usar o m\xe9todo [`OS.execute()`](https://docs.godotengine.org/en/3.6/classes/class_os.html#class-os-method-execute).  \\n\\n```\\nint execute (\\n    String path,\\n    PoolStringArray arguments,\\n    bool blocking=true,\\n    Array output=[],\\n    bool read_stderr=false,bool open_console=false\\n)\\n```\\n\\nO problema \xe9 que essa fun\xe7\xe3o possui dois comportamentos dependendo se `blocking` for `true` ou `false`, por\xe9m nenhum dos dois era o que eu buscava.  \\n\\n![Outro rosto de idiota com o olhar torto para fora](oh_fuck.svg)  \\n\\n`blocking` -> `true`: Godot vai pausar enquanto a sa\xedda n\xe3o \xe9 escrita em output.  \\n\\nN\xe3o queremos isto pois uma busca pode resultar em milhares de documentos. Queremos retornar mais documentos conforme o usu\xe1rio pedir por mais documentos.  \\n\\n`blocking` -> `false`: Godot vai continuar executando e o comando ir\xe1 rodar em um processo separado. Por\xe9m n\xe3o ser\xe1 poss\xedvel recuperar o output do comando.  \\n\\nN\xf3s queremos receber a sa\xedda aos poucos se estivermos falando de pesquisas que resultam em muitos documentos.  \\n\\nFun\xe7\xe3o do Godot n\xe3o \xe9 interativa, como vou usar o shell interativo?  \\nPosso ler input e output usando algum conhecimento do sistema operacional?  \\nEu vou ter que conhecer bem todos sistemas operacionais?  \\nVou ter que descobrir como Robo 3T linka o shell?  \\n\\n## Solution\\n\\nCriar meu pr\xf3prio shell.  \\n\\n![Shell](shell.svg)  \\n\\nVantagens:\\n- Utilizar a linguagem que mais estou em dia Python\\n    - Em outras palavras: Nenhum tempo perdido por errar algo de uma linguagem que n\xe3o estou acostumado (JavaScript)\\n- Utilizar a mesma linguagem com qual trabalho para fazer queryies\\n- Utilizar o padr\xe3o de comunica\xe7\xe3o que eu quiser\\n    - No pr\xf3ximo t\xf3pico voc\xea vai entender o que eu quero dizer com isto\\n\\nSe estivessemos falando de um produto para diversos usu\xe1rios, definitivamente JavaScript seria a melhor escolha.  \\n\\nPara projeto pessoal com interesse em Godot? Utilizar a linguagem que mais tenho conhecimento no momento.  \\n\\n## Communication\\n\\n![Shell](shell_mondot.svg)  \\n\\nDe todas as maneiras para duas aplica\xe7\xf5es se comunicarem, eu escolhi a mais simples.\\n\\n**Arquivos...** :D  \\n\\nEm vez de quebrar a cabe\xe7a para entender como eu poderia reproduzir a interatividade do shell do Mongo, eu poderia apenas fazer com que ambos escrevessem em arquivos quando quisessem se comunicar um com o outro.  \\n\\nO processo em si \xe9 bem simples:  \\n1. Godot executa o shell, passando a query\\n2. Shell escreve X documentos em um arquivo\\n3. Godot solicita mais documentos\\n\\nNote que voc\xea deve repetir etapa 2 e 3 at\xe9 acabar os documentos ou Godot mandar parar.  \\n\\n### Start\\n\\n![Primeira parte da comunica\xe7\xe3o entre shell e Mondot](shell_mondot_communication_0.svg)  \\n\\n1. Godot escreve o c\xf3digo Python em um arquivo\\n    - `xxxxx` representa o nome do arquivo\\n    - O nome do arquivo \xe9 aleat\xf3rio\\n2. Godot executa o shell passando o caminho para o arquivo como par\xe2metro\\n\\n### Output\\n\\n![Segunda parte da comunica\xe7\xe3o entre shell e Mondot](shell_mondot_communication_1.svg)  \\n\\n- Godot fica periodicamente conferindo se o arquivo de sa\xedda existe\\n    - `xxxxx_out_0` representa o **primeiro** arquivo de sa\xedda\\n        - `xxxxx_out_1` segundo arquivo de sa\xedda\\n        - `xxxxx_out_2` terceiro arquivo de sa\xedda\\n        - etc\\n- Shell escreve no arquivo de sa\xedda um [JSON](https://en.wikipedia.org/wiki/JSON) com o resultado da query\\n    - O resultado de uma query pode ser partido em diversos arquivos\\n        - `xxxxx_out_0`, `xxxxx_out_1`, `xxxxx_out_2`, ...\\n        - Esses arquivos s\xe3o criados conforme o usu\xe1rio solicita mais documentos do resultado\\n\\n### Input\\n\\n![Terceira parte da comunica\xe7\xe3o entre shell e Mondot](shell_mondot_communication_2.svg)  \\n\\n- Godot escreve no arquivo de entrada solicitando mais documentos do resultado da query\\n- Shell fica periodicamente conferindo se tem algo escrito no arquivo de entrada\\n    - `xxxxx_in` representa o arquivo de entrada\\n    - Ele l\xea o arquivo e remove o conte\xfado do arquivo\\n        - Justamente para receber futuras solicita\xe7\xf5es pelo mesmo arquivo\\n\\n## Shell\\n\\nO que o meu shell precisa fazer?\\n\\n- Receber o c\xf3digo do usu\xe1rio\\n- Executar o c\xf3digo do usu\xe1rio\\n- Iterar sobre o resultado do c\xf3digo\\n    - Iterar em partes (pegando X documentos por vez)\\n\\nEm outras palavras, eu preciso acoplar o c\xf3digo do usu\xe1rio ao c\xf3digo do shell.  \\n\\n![C\xf3digo do usu\xe1rio sendo acoplado no meio do c\xf3digo do shell](shell_python_code.svg)  \\n\\nNote que existem opera\xe7\xf5es que meu shell ir\xe1 fazer antes e ap\xf3s a execu\xe7\xe3o do c\xf3digo do usu\xe1rio. Por causa disso, o desenho mostra o c\xf3digo no meio do c\xf3digo shell.  \\n\\nO plano era receber um c\xf3digo simples do usu\xe1rio, parecido com o do shell do Mongo:  \\n\\n```python\\ndb.test.find({})\\n```\\n\\n### Attempt 1\\n\\n[`eval(expression, globals=None, locals=None)`](https://docs.python.org/3/library/functions.html#eval)  \\n\\n**Bom**: A fun\xe7\xe3o faz o parser e avalia a express\xe3o, retornando o resultado dela.  \\n\\n```python\\nresult = eval(\\"\\"\\"\\n    db.test.find({})\\n\\"\\"\\")\\n```  \\n\\n**Ruim**: Precisa ser uma express\xe3o. Uma ou mais declara\xe7\xf5es n\xe3o funcionam.  \\n\\n```python\\n# Error\\nresult = eval(\\"\\"\\"\\n    db.test.find({})\\n    db.test.find({})\\n\\"\\"\\")\\n```\\n\\n### Attempt 2\\n\\n[`exec(object, globals=None, locals=None, /, *, closure=None)`](https://docs.python.org/3/library/functions.html#exec)  \\n\\n**Bom**: Executa m\xfaltiplas declara\xe7\xf5es.  \\n\\n```python\\nexec(\\"\\"\\"\\n    db.test.find({})\\n    db.test.find({})\\n\\"\\"\\")\\n```\\n\\n**Ruim**: Cada declara\xe7\xe3o pode ter ou n\xe3o um resultado, ent\xe3o essa fun\xe7\xe3o n\xe3o retornar nada.  \\n\\n```python\\n# result is None\\nresult = exec(\\"\\"\\"\\n    db.test.find({})\\n    db.test.find({})\\n\\"\\"\\")\\n```\\n\\n### Problem\\n\\nNas tentativas acima, para obter o resultado desejado eu teria que alterar a string. Por\xe9m, isto apresenta grande risco da altera\xe7\xe3o dar erro pois cada caso pode requer uma altera\xe7\xe3o diferente.  \\n\\nNo final eu seria for\xe7ado a ler o c\xf3digo, entende-lo para depois alterar sem grande chance de erros. Mas sabe quem j\xe1 faz isso de ler e entender c\xf3digo? O compilador.  \\n\\n## AST\\n\\n![Desenho de uma \xe1rvore para representar AST](tree.svg)  \\n\\nA compila\xe7\xe3o de uma linguagem envolve diversas etapas. Uma delas envolve gerar uma [\xe1rvore sint\xe1tica abstrata](https://en.wikipedia.org/wiki/Abstract_syntax_tree), uma \xe1rvore que garante que os objetos est\xe3o ligados corretamente.  \\n\\nPodemos usar este conhecimento para compilar parcialmente o c\xf3digo do usu\xe1rio. Por exemplo, o seguinte c\xf3digo:  \\n\\n```python\\nfor x in db.test.find({}):\\n    db.test.update({\\"_id\\": x[\\"_id\\"]}, {\\"code\\": x[\\"code\\"] + 1})\\ndb.test.find({})\\n```\\n\\nGera uma \xe1rvore com a seguinte raiz:  \\n\\n![Simples AST](ast_example.svg)  \\n\\n> Note que eu s\xf3 mostrei o in\xedcio da \xe1rvore pois todo o resto \xe9 irrelevante para n\xf3s.  \\n> N\xe3o vamos alterar nada que esteja a fundo do c\xf3digo do usu\xe1rio, apenas na raiz.  \\n\\nCom esse conhecimento em m\xe3o, podemos finalmente alterar o c\xf3digo do usu\xe1rio!  \\n\\n:::info\\nUtilizei um m\xf3dulo do pr\xf3prio Python chamado [ast](https://docs.python.org/3/library/ast.html#module-ast) para analisar e reestruturar a AST.  \\n:::\\n\\n## Rewriting code\\n\\nVamos criar um c\xf3digo in\xfatil apenas para usar como exemplo:  \\n\\n```python\\n# User code\\ndoc = db.test.find_one({})\\ndb.test.update_one({}, {\\"valid\\": True})\\ndb.test.find({})\\n```\\n\\nA id\xe9ia \xe9 transformar este c\xf3digo em uma fun\xe7\xe3o que o shell poder\xe1 chamar e receber de volta o valor da \xfaltima express\xe3o. Em outras palavras, queremos isto:  \\n\\n```python\\ndef code():\\n    # User code\\n    doc = db.test.find_one({})\\n    db.test.update_one({}, {\\"valid\\": True})\\n    return db.test.find({})\\n```\\n\\nVamos ao passo a passo de como obter isto:\\n\\n1. An\xe1lisar o c\xf3digo do usu\xe1rio com AST\\n2. Inserir o conte\xfado do m\xf3dulo dentro de uma fun\xe7\xe3o pr\xe9 montada\\n3. Encapsular a \xfaltima express\xe3o em um `return`\\n    - Apenas fazer isto se for uma express\xe3o que retorna valor\\n\\nO video seguinte demonstra a transforma\xe7\xe3o que est\xe1 sendo feita de certa forma.  \\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/F2In19FGfxg?si=zNhw4kjCnjwPBRJg\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>  \\n\\n## Conclusion\\n\\nCom isto eu consegui preparar justamente uma interface gr\xe1fica para o Mongo em Godot. Esse foi meu projeto de 2021!  \\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/OlV9N12_UxE?si=bmihRtrP3vznuQo5\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>  \\n\\n---\\n\\nEm 2023 eu decidi dar uma refatorada e criei uma segunda vers\xe3o. Mas toda essa base vista do Mondot ainda \xe9 a mesma!  \\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/laGAwJniaUc?si=rtEg3tyhduiRbFh-\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>  \\n\\n---\\n\\nAgora j\xe1 estou cansado de falar deste projeto hahahaha, foi bom enquanto durou.  \\n\\n## References\\n\\n- [Robomongo adquirido pelo 3T](https://blog.robomongo.org/robomongo-has-been-acquired-by-3t/)  \\n- [Robomongo e integra\xe7\xe3o com shell](https://blog.robomongo.org/mongodb-shell-integration/)  \\n- [robomongo-shell](https://github.com/Studio3T/robomongo-shell)  \\n- [robomongo](https://github.com/Studio3T/robomongo)  \\n- [Mongo](https://github.com/mongodb/mongo)  \\n- [Mongo shell docs](https://www.mongodb.com/docs/v4.4/mongo/)  \\n- [AST](https://en.wikipedia.org/wiki/Abstract_syntax_tree)  \\n- [Python AST](https://docs.python.org/3/library/ast.html)"},{"id":"/2023/09/22/mongodb-gui","metadata":{"permalink":"/en/blog/2023/09/22/mongodb-gui","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-09-22-mongodb-gui/index.md","source":"@site/blog/2023-09-22-mongodb-gui/index.md","title":"MongoDB GUI","description":"Em 2019 eu comecei a trabalhar em uma startup que usava banco de dados MongoDB.","date":"2023-09-22T00:00:00.000Z","formattedDate":"September 22, 2023","tags":[{"label":"mongo","permalink":"/en/blog/tags/mongo"},{"label":"mongodb","permalink":"/en/blog/tags/mongodb"},{"label":"gui","permalink":"/en/blog/tags/gui"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["mongo","mongodb","gui"]},"unlisted":false,"prevItem":{"title":"Mondot","permalink":"/en/blog/2023/10/09/mondot"},"nextItem":{"title":"Wang Tiles pt. 2","permalink":"/en/blog/2023/09/21/wang-tiles-2"}},"content":"Em 2019 eu comecei a trabalhar em uma startup que usava banco de dados [MongoDB](https://www.mongodb.com/).  \\n\\nNa \xe9poca mantermos diversas licen\xe7as da interface gr\xe1fica [Studio 3T](https://studio3t.com/) n\xe3o era uma boa ideia, n\xe3o eramos uma empresa lucrativa e o uso dela por pessoa n\xe3o iria valer a pena.  \\n\\nE por isso comecei a buscar por um interface gr\xe1fica que fosse me satisfazer.  \\n\\n![Pessoa caminhando com uma madeira carregando seus pertences na ponta](./migrate.svg)\\n\\n## Robot 3T\\n\\nUma alternativa considerada foi [Robo 3T/Robomongo](https://robomongo.org/) mas pelo fato dele ter sido adquirido pelo Studio 3T j\xe1 n\xe3o era um bom sinal para mim.  \\n\\n\xc9 muito normal ver empresas grandes comprando concorrentes e depois deixando eles aos poucos sumirem, ent\xe3o meu palpite era que Robot 3T n\xe3o iria receber tantas atualiza\xe7\xf5es e n\xe3o cresceria como ferramenta.  \\n\\n**Hoje em em 2023**: Fazendo 6 anos desde que foi adquirido e uma vers\xe3o de gra\xe7a do Studio 3T foi lan\xe7ada para substituir o Robo 3T que foi descontinuado.  \\n\\n## Mongo-Express\\n\\nUtilizei [mongo-express](https://github.com/mongo-express/mongo-express) por um tempo e satisfazia o m\xednimo que eu precisava mas a interface gr\xe1fica n\xe3o me agradava.  \\n\\n**Hoje em em 2023**:  Parece ter mantido a mesma interface, o que n\xe3o me atrai.  \\n\\n## QueryAssist\\n\\nEm 2020, [QueryAssist](https://twitter.com/QueryAssist) foi a ferramenta que eu decidi utilizar sempre para interagir com o Mongo.  \\n\\nEla possuia uma vers\xe3o gratuita mas voc\xea podia comprar a vers\xe3o vital\xedcia e ganhar mais funcionalidades. A vers\xe3o gratuita era mais que o suficiente para mim e funcionava muito bem.   \\n\\nInfelizmente durou pouco, fui notando a falta de atualiza\xe7\xe3o no blog e nos posts do Twitter. Claramente um sinal que a ferramenta iria desaparecer, por causa disso decidi retornar a minha busca por outra interface gr\xe1fica antes que est\xe1 parece de funcionar sem aviso pr\xe9vio.  \\n\\n**Hoje em em 2023**: Site deles foi desligado e eles n\xe3o tem postagens novas desde 2020.  \\n\\n## MongoDB Compass\\n\\n[MongoDB Compass](https://www.mongodb.com/products/tools/compass) parece estar em constru\xe7\xe3o desde 2015, mas na \xe9poca que eu estava buscando interfaces gr\xe1ficas era como se ele **n\xe3o existisse** para mim. Meu palpite era que n\xe3o estava divulgando j\xe1 que n\xe3o estava pronto para produ\xe7\xe3o \ud83e\udd14.  \\n\\nTudo que posso dizer \xe9 que quando finalmente descobri a exist\xeancia dele, a aus\xeancia de alguma funcionalidade n\xe3o me agradou...  \\n\\n**Hoje em em 2023**: Aposto que hoje em dia j\xe1 devem ter implementado a funcionalidade que eu queria mas n\xe3o estou em dia com as ferramentas do Mongo para saber.  \\n\\n## MongoDB for VS Code\\n\\nQuando [MongoDB for VS Code](https://www.mongodb.com/products/tools/vs-code) lan\xe7ou oficialmente para mim era um sinal que minha busca tinha terminado, pois era uma ferramenta desenvolvida pelos mesmos criadores do MongoDB e que era s\xf3 uma quest\xe3o de tempo at\xe9 implementarem diversas funcionalidades legais.  \\n\\nNesta \xe9poca eu at\xe9 parei o desenvolvimento de uma ferramenta que eu estava construindo.  \\n\\n**Hoje em em 2023**: Parece que a extens\xe3o apenas foi criada para fazer o m\xednimo e n\xe3o deve evoluir muito."},{"id":"/2023/09/21/wang-tiles-2","metadata":{"permalink":"/en/blog/2023/09/21/wang-tiles-2","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-09-21-wang-tiles-2/index.md","source":"@site/blog/2023-09-21-wang-tiles-2/index.md","title":"Wang Tiles pt. 2","description":"Na primeira parte n\xf3s focamos exclusivamente em tiles que precisavam apenas satisfazer uma rela\xe7\xe3o com os adjacentes. Por\xe9m existe casos onde rela\xe7\xe3o com as diagonais tamb\xe9m \xe9 importante.","date":"2023-09-21T00:00:00.000Z","formattedDate":"September 21, 2023","tags":[{"label":"wang","permalink":"/en/blog/tags/wang"},{"label":"tiles","permalink":"/en/blog/tags/tiles"},{"label":"godot","permalink":"/en/blog/tags/godot"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["wang","tiles","godot"]},"unlisted":false,"prevItem":{"title":"MongoDB GUI","permalink":"/en/blog/2023/09/22/mongodb-gui"},"nextItem":{"title":"Wang Tiles pt. 1","permalink":"/en/blog/2023/09/19/wang-tiles"}},"content":"Na [**primeira parte**](../2023-09-19-wang-tiles/index.md) n\xf3s focamos exclusivamente em tiles que precisavam apenas satisfazer uma rela\xe7\xe3o com os adjacentes. Por\xe9m existe casos onde rela\xe7\xe3o com as diagonais tamb\xe9m \xe9 importante.  \\n\\nVamos organizar em 3 tipos:\\n- **Sides** (visto anteriormente)\\n    - O foco era casar a adjacente.\\n- **Corners** (ser\xe1 visto)\\n    - O foco vai ser casar **duas** adjacentes e **uma** diagonal.\\n- **Corners and Sides** (ser\xe1 visto)\\n    - O foco vai ser resolver **corners** e **sides**.\\n\\nA seguinte imagem desmonstra como cada tipo deve casar:  \\n\\n![Compara\xe7\xe3o entre os 3 tipos de tiles](./matching.svg)  \\n\\nTirando isto a l\xf3gica principal de Wang tiles permanece, ou seja, n\xe3o precisamos falar dos mesmos assuntos vistos na primeira parte pois voc\xea s\xf3 precisa adaptar a maneira de casar tiles.  \\n\\nPor\xe9m iremos mostrar para cada um dos tipos:\\n- Todos os possiveis tiles\\n- M\xednimo de tiles considerando rota\xe7\xe3o e reflex\xe3o\\n\\n-----------------------------------\\n\\n## Sides\\n\\n![Todos os possiveis tiles para \\"sides\\"](./sides.svg)  \\n\\n16 tiles  \\n\\n### Minimal  \\n\\n![O m\xednimo tiles para \\"sides\\"](./sides_minimalist.svg)  \\n\\n6 tiles  \\n\\n-----------------------------------\\n\\n## Corners\\n\\n![Todos os possiveis tiles para \\"corners\\"](./corners.svg)  \\n\\n16 tiles  \\n\\n### Minimal  \\n\\n![Todos os possiveis tiles para \\"corners\\"](./corners_minimalist.svg)  \\n\\n6 tiles  \\n\\n-----------------------------------\\n\\n## Corners and Sides\\n\\n:::note\\nClique nas imagens para abrir em outra janela e depois de bastante zoom.  \\nE lembre que para restar o zoom existe o atalho `Ctrl+0`.  \\n:::\\n\\n[![Todos possiveis tiles para \\"corners and sides\\"](./corners_sides.svg)](./corners_sides.svg)  \\n\\n256 tiles  \\n\\n### Minimal  \\n\\n![Todos os possiveis tiles para \\"corners\\"](./corners_sides_minimalist.svg)  \\n\\n51 tiles  \\n\\n-----------------------------------\\n\\n## References\\n\\n- [cr31 website](http://www.cr31.co.uk/stagecast/wang/intro.html)  \\n    - Site is down \ud83d\ude2d"},{"id":"/2023/09/19/wang-tiles","metadata":{"permalink":"/en/blog/2023/09/19/wang-tiles","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-09-19-wang-tiles/index.md","source":"@site/blog/2023-09-19-wang-tiles/index.md","title":"Wang Tiles pt. 1","description":"(Wang tiles foi proposto pelo matem\xe1tico Hao Wang em 1961)","date":"2023-09-19T00:00:00.000Z","formattedDate":"September 19, 2023","tags":[{"label":"wang","permalink":"/en/blog/tags/wang"},{"label":"tiles","permalink":"/en/blog/tags/tiles"},{"label":"godot","permalink":"/en/blog/tags/godot"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["wang","tiles","godot"]},"unlisted":false,"prevItem":{"title":"Wang Tiles pt. 2","permalink":"/en/blog/2023/09/21/wang-tiles-2"},"nextItem":{"title":"Tumblr","permalink":"/en/blog/2023/09/16/tumblr"}},"content":"(Wang tiles foi proposto pelo matem\xe1tico Hao Wang em 1961)  \\n\\nAssuma que teremos um conjunto de tiles onde cada lado est\xe1 pintado de apenas uma cor. Por exemplo:  \\n\\n![Exemplo de 5 tiles diferentes](./tiles.svg)  \\n\\n1. Cada lado com uma cor.  \\n2. Dois lados com a mesma cor.  \\n3. Todos os lados com a mesma cor.\\n4. Dois lados adjacentes com a mesma cor.\\n5. Varia\xe7\xe3o das cores j\xe1 vistas s\xf3 que em posi\xe7\xf5es diferentes.\\n\\n:::note\\nPor simplicidade mudaremos para duas cores apenas.  \\n:::\\n\\nA ideia \xe9 reutilizar os mesmos tiles quantas vezes quisermos para botar eles lado a lado e formar um plano, por\xe9m com as cores laterais do tiles sempre casando. No exemplo seguinte temos 5 tiles e 2 exemplos de planos formados por eles:  \\n\\n![Exemplo utilizando 5 tiles diferentes para criar 2 combina\xe7\xf5es de plano](./tiles_match.svg)  \\n\\nImportante notar que:\\n- Tiles **n\xe3o** podem se sobrepor.  \\n- Tiles **n\xe3o** podem ser rotacionados ou refletidos.  \\n\\nPois n\xe3o \xe9 poss\xedvel saber se seriam tiles v\xe1lidos sem conhecer a imagem utilizada neles.  \\n\\n## Automation\\n\\nEmbora reutiliza\xe7\xe3o de tiles para gerar diversos planos/mapas n\xe3o seja especial, Wang tiles adiciona a l\xf3gica de relacionar os tiles entre si. Isto nos permite verificar se um tile \xe9 v\xe1lido numa determinada posi\xe7\xe3o.  \\n\\nPor exemplo, possuindo 2 cores e 4 lados, podemos formar 16 (2<sup>4</sup>) tiles diferentes:  \\n\\n![Todas os poss\xedveis tiles com duas cores e quatro lados](./sides.svg)  \\n\\n:::note\\nAdicionamos um quadrado cinza no centro de cada tile.\\n:::\\n\\nBotamos estes tiles na game engine [Godot](https://godotengine.org/) e nela definimos a rela\xe7\xe3o entre os tiles.  \\n\\nAo come\xe7ar a pintar tiles dentro da game engine, podemos ver que ela consegue verificar qual tile \xe9 v\xe1lido naquela posi\xe7\xe3o ou se precisa alterar os vizinhos.  \\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/aWyol4H4Csc?si=JpoIgIEVf9v2dJ45\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>  \\n\\nEm segundos conseguimos construir planos onde os tiles tem uma conex\xe3o entre si.  \\n\\n## Variations\\n\\n\xc9 importante notar que n\xe3o h\xe1 problema criar varia\xe7\xf5es do mesmo tile. Por exemplo:  \\n\\n![Mesmos 16 por\xe9m com a adi\xe7\xe3o de 3 tiles com todos os lados verdes](./sides_with_trees.svg)  \\n\\nNo momento de preencher por um tile v\xe1lido naquela posi\xe7\xe3o, a ferramenta iria ter que escolher entre 4 tiles diferentes. Algumas ferramentas como Godot escolheram aleatoriamente:  \\n\\nAntes  \\n![Exemplo de plano criado utilizando os 16 tiles](./plane00.png)  \\n\\nDepois  \\n![Exemplo 3 de plano criado utilizando os tiles, por\xe9m com \xe1rvores](./plane01.png)  \\n\\n## Rotation & Reflection\\n\\nNa proposta de Wang n\xe3o se pode rotacionar e refletir tiles pois n\xe3o existe garantia que a imagem continuar\xe1 fazendo sentido ap\xf3s rotacionada ou refletida.  \\n\\nPor\xe9m como criador dos tiles, somos capazes de deduzir est\xe1 informa\xe7\xe3o e apenas fazer os tiles necess\xe1rios. Vamos pegar este conjunto de tiles:  \\n\\n![Todas os poss\xedveis tiles com duas cores e quatro lados](./sides.svg)  \\n\\nAlguns destes tiles s\xe3o varia\xe7\xf5es dos anteriores por\xe9m rotacionados ou refletidos. Levando isto em conta, podemos minimizar para 6 tiles apenas:  \\n\\n![Seis tiles que conseguem representar os mesmo tiles acima](./sides_minimalist.svg)  \\n\\n\xc9 importante notar que s\xf3 \xe9 poss\xedvel se conhecermos a imagem. Botando a mesma \xe1rvore utilizada anteriormente em um dos tiles, podemos ver o tile perder o sentido quando rotacionado mas n\xe3o quando refletido:  \\n\\n![\xc1rvore adicionada a um tile e suas varia\xe7\xf5es de rota\xe7\xe3o e reflex\xe3o](./tile_with_tree.svg)  \\n\\n## Example\\n\\nTodos nossos tiles tem sido com cores, por\xe9m as cores apenas servem para representar a rela\xe7\xe3o entre os tiles.  \\n\\nPara deixar isto claro, vamos substituir o desenho dos tiles por desenhos que melhor representem um labirinto. Vamos trocar **azul por arbustos** e **verde por terra**:  \\n\\n![Compara\xe7\xe3o do tiles bases com tiles do labirinto](./maze_tiles.svg)  \\n\\nUtilizando estes tiles com suas rota\xe7\xf5es/relex\xf5es, podemos criar em segundos o nosso labirinto:  \\n\\n![Tiles do labirinto](./maze.png)  \\n\\n:::note\\nEste labirinto est\xe1 com cara de circuitos da placa m\xe3e. \ud83e\udd14\\n:::\\n\\n## References\\n\\n- http://www.cr31.co.uk/stagecast/wang/intro.html\\n    - Site is down \ud83d\ude2d\\n- https://en.wikipedia.org/wiki/Wang_tile\\n- https://www.youtube.com/watch?v=tQSL2scuqeU"},{"id":"/2023/09/16/tumblr","metadata":{"permalink":"/en/blog/2023/09/16/tumblr","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-09-16-tumblr/index.md","source":"@site/blog/2023-09-16-tumblr/index.md","title":"Tumblr","description":"Estou experimentando alternativas j\xe1 que o Tumblr me deixou puto.","date":"2023-09-16T00:00:00.000Z","formattedDate":"September 16, 2023","tags":[{"label":"tumblr","permalink":"/en/blog/tags/tumblr"},{"label":"website","permalink":"/en/blog/tags/website"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["tumblr","website"]},"unlisted":false,"prevItem":{"title":"Wang Tiles pt. 1","permalink":"/en/blog/2023/09/19/wang-tiles"},"nextItem":{"title":"Sieve","permalink":"/en/blog/2023/05/12/sieve"}},"content":"Estou experimentando alternativas j\xe1 que o Tumblr me deixou puto.  \\nE a pior parte \xe9 que foram funcionalidades importantes para um site de blogs!  \\n\\n## Text Editor\\n\\n![Imagem ilustrativa. Uma caneta escrevendo num papel, no papel tem diversas linhas e uma delas \xe9 um video \ud83e\udd23](./text_editor.svg)\\n\\nPrimeiro preciso falar dos 3 editores de texto que o Tumblr fornece:\\n- Rich Text (default)\\n    - **Positivo**: Os criadores do site gastaram tempo planejando como melhor te passar a habilidade de escrever texto em negrito/it\xe1lico ou como inserir links/imagens/videos.  \\n    - **Negativo**: N\xe3o existe garantia que possa mover seu texto para outros blogs sem perder qualidade, as chances de estar preso ao Tumblr s\xe3o altas.  \\n- HTML\\n    - **Positivo**: Todos os websites s\xe3o feitos utilizando HTML, ent\xe3o o \xfanico limite do que se pode fazer \xe9 o quanto o Tumblr limitou de utiliza\xe7\xe3o.  \\n    - **Negativo**: N\xe3o \xe9 pr\xe1tico de escrever ou alterar sem ajuda de editores de texto modernos.  \\n- Markdown\\n    - **Positivo**: Criada para provid\xeanciar formata\xe7\xe3o ao texto sem dificultar a legibilidade. Por baixo dos panos faz uma convers\xe3o para HTML, ent\xe3o tamb\xe9m \xe9 normal ver essa linguagem aceitar funcionalidade do HTML.  \\n    - **Negativo**: Relativamente limitado de como se pode formatar seu texto.  \\n\\nNa minha cabe\xe7a HTML e Markdown parecem existir apenas para enfeitar, eles n\xe3o parecem dar suporte para nada que n\xe3o seja poss\xedvel no Rich Text. Funcionalidades simples como a linha horizontal n\xe3o s\xe3o implementadas e apenas recebemos o aviso:\\n\\n> Contents contains unsupported HTML, the post may not be what you expected.  \\n\\n> Contents contains unsupported Markdown, the post may not be what you expected.  \\n\\nEu entendo filtrar funcionalidades do HTML \xe9 aceit\xe1vel pois poderia ser perigoso permitir tudo. Por\xe9m filtrar funcionalidade do Markdown n\xe3o faz sentido j\xe1 que a linguagem j\xe1 foi feita para ser bem limitada e n\xe3o oferecer nenhum risco (estou considerando Markdown sem HTML).  \\n\\nNo final ambos acabam sendo uma vers\xe3o mais limitada que o pr\xf3prio Rich Text. Se tentarmos ser otimistas, podemos dizer que agora podemos exportar para HTML/Markdown e levar para outros sites.  \\n\\nAgora vamos ver os pr\xf3ximos detalhes que me incomodaram, tipo o fato do Tumblr gostar de alterar o seu texto...\\n\\n## Switching Text Editors\\n\\n![Setas apontando para os 3 tipos de formatos permitidos, sinalizando que est\xe1 indo de um para o outro](./switch.svg)\\n\\nPrimeiro vamos deixar claro que \xe9 um bom senso na vida **n\xe3o** alterar algo que voc\xea v\xe1 precisar da vers\xe3o original mais tarde. E no caso do Tumblr eu n\xe3o tenho certeza de qual formato \xe9 o original entre Rich Text, HTML e Markdown (eu apostaria no Rich Text por ser o formato padr\xe3o).  \\n\\nO problema que me deparei foi que ao trocar de editor de texto, nem todas as funcionalidades dos editores de texto s\xe3o conversiveis entre eles, e n\xe3o parece ter uma regra do que vai acontecer com a funcionalidade quando voc\xea trocar. Exemplos:  \\n\\n- **Rich text to HTML/Markdown**\\n    - A funcionalidade \\"read more\\" vai ser **removido**.  \\n- **Rich text to Markdown**\\n    - Texto em Lucille vai ficar **invis\xedvel durante a edi\xe7\xe3o** por\xe9m ainda vai estar presente quando publicado.\\n\\nSe voc\xea decidir voltar para o editor de texto anterior, voc\xea pode ter perdido algo da formata\xe7\xe3o ou pode ter se mantido.  \\n\\n## Preview\\n\\n![Imagem ilustrativa do post entregando como \u2b50 e saindo como \ud83d\udca9](./preview_breaking.svg)\\n\\nNormalmente visualiza\xe7\xe3o pr\xe9via seria apenas para demonstrar como o seu trabalho ir\xe1 ficar quando finalizado, sem alterar em nada o escrito...  \\n\\nPor algum motivo Tumblr decide alterar o seu trabalho durante a prepara\xe7\xe3o da visualiza\xe7\xe3o, ou seja, grande chance de alterarem seu HTML ou Markdown. Nestes casos diga adeus a qualquer organiza\xe7\xe3o que tivesse sido usada, pois agora ter\xe1 que lidar com o c\xf3digo da maneira que o Tumblr deixou.  \\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/uQBsBePphYI\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>  \\n\\n## Hide Request Referer\\n\\n![Pessoa se escondendo atr\xe1s de um muro](./hidding.svg)  \\n\\nQuando voc\xea clica em um link de um site, o seu navegador ir\xe1 fazer a requisi\xe7\xe3o do conte\xfado daquele link para depois exibir ele na sua tela. Neste caso \xe9 normal enviar para o link que voc\xea clicou de onde voc\xea est\xe1 vindo, para que o site que vai te enviar o conte\xfado saber de onde est\xe1 vindo o tr\xe1fico.  \\n\\nTumblr obrigatoriamente altera todos seus links que levem a sites exteriores, justamente para que consiga esconder este tipo de informa\xe7\xe3o. Por exemplo:  \\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/ullzdbGvQp8?si=oPAob5XZzFmYSX9T\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>  \\n\\nExistem casos que voc\xea realmente n\xe3o quer que o outro site saiba de onde est\xe1 vindo o tr\xe1fico. Mas eu imagino que exista casos onde voc\xea quer que o outro lado saiba que voc\xea est\xe1 levando tr\xe1fico a eles.  \\n\\n![Minha configura\xe7\xe3o de privacidade no tumblr](./settings.png)  \\n\\nNote como ambos \\"Hide thiagola92 from people without an account\\" e \\"Discourage searching of thiagola92\\" est\xe3o desligados mas mesmo assim eu recebo aquela prote\xe7\xe3o de privacidade.  \\n\\n## Undo?\\n\\n![Pessoa confusa](./confuse.svg)  \\n\\nAviso logo que eu n\xe3o consegui reproduzir esse problema que eu tive um dia qualquer, mas basicamente quando eu apertei `Ctrl+z` o post desfez tudo at\xe9 a minha \xfaltima inser\xe7\xe3o de imagem.  \\n\\nComo n\xe3o conseguir reproduzir, pode ter sido um bug do dia...\\n\\n## Conclusion\\n\\n![Pessoa surpresa](./surprised.svg)  \\n\\nNo final das contas, todas essas chatisses me levaram a experimentar outras maneiras de compartilhar conte\xfado. Ainda n\xe3o estou completamente feliz mas est\xe1 me satisfazendo.  \\n\\n**Observa\xe7\xe3o**: Recentemente eu descobri que Tumblr tinha sido comprado pela mesma empresa do [Wordpress](https://en.wikipedia.org/wiki/WordPress.com) ent\xe3o isso deve explicar o pouco carinho que o website tem recebido em quest\xe3o de funcionalidade."},{"id":"/2023/05/12/sieve","metadata":{"permalink":"/en/blog/2023/05/12/sieve","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-05-12-sieve/index.md","source":"@site/blog/2023-05-12-sieve/index.md","title":"Sieve","description":"Enquanto estava explorando as aplica\xe7\xf5es do Murena Cloud acabei parando para olhar o servi\xe7o de email deles. Nisso acabei descobrindo que eles utilizam a linguagem de programa\xe7\xe3o Sieve para filtro de email.","date":"2023-05-12T00:00:00.000Z","formattedDate":"May 12, 2023","tags":[{"label":"sieve","permalink":"/en/blog/tags/sieve"},{"label":"programming language","permalink":"/en/blog/tags/programming-language"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["sieve","programming language"]},"unlisted":false,"prevItem":{"title":"Tumblr","permalink":"/en/blog/2023/09/16/tumblr"},"nextItem":{"title":"SVG","permalink":"/en/blog/2023/04/18/svg"}},"content":"Enquanto estava explorando as aplica\xe7\xf5es do [Murena Cloud](https://murena.com/) acabei parando para olhar o servi\xe7o de email deles. Nisso acabei descobrindo que eles utilizam a linguagem de programa\xe7\xe3o [Sieve](http://sieve.info/) para filtro de email.  \\n\\nO que me deixou a desejar que [Gmail](https://en.wikipedia.org/wiki/Gmail) usasse pois deixaria f\xe1cil de automatizar algumas tarefas. Al\xe9m disso seria interessante os servidores de email usarem a mesma linguagem para filtros de email.  \\n\\nInfelizmente a linguagem parece pouco popular e n\xe3o acho que v\xe1 ficar tanto tempo viva... Mas me chamou tanta aten\xe7\xe3o que tentei fazer um [pull request](https://github.com/adambard/learnxinyminutes-docs/pull/4661) para adicionar ela no [Learn X in Y minutes](https://learnxinyminutes.com/)."},{"id":"/2023/04/18/svg","metadata":{"permalink":"/en/blog/2023/04/18/svg","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-04-18-svg/index.md","source":"@site/blog/2023-04-18-svg/index.md","title":"SVG","description":"Eu tenho explorado maneiras de fazer gr\xe1fico para o meu jogo.","date":"2023-04-18T00:00:00.000Z","formattedDate":"April 18, 2023","tags":[{"label":"svg","permalink":"/en/blog/tags/svg"},{"label":"inkscape","permalink":"/en/blog/tags/inkscape"},{"label":"aseprite","permalink":"/en/blog/tags/aseprite"},{"label":"art","permalink":"/en/blog/tags/art"},{"label":"2d","permalink":"/en/blog/tags/2-d"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["svg","inkscape","aseprite","art","2d"]},"unlisted":false,"prevItem":{"title":"Sieve","permalink":"/en/blog/2023/05/12/sieve"},"nextItem":{"title":"GDScript RefCounted","permalink":"/en/blog/godot-refcounted"}},"content":"Eu tenho explorado maneiras de fazer gr\xe1fico para o meu jogo.  \\n\\n## Pixel art\\n\\nMeu plano sempre foi fazer algo simples, e originalmente a ideia seria pixel art com [Aseprite](https://www.aseprite.org/), por\xe9m com o tempo eu percebi que mesmo coisas \\"simples\\" em pixel art me dariam trabalho \ud83d\ude06.  \\n\\nInfelizmente eu n\xe3o lembro dos problemas que tive durante a utiliza\xe7\xe3o mas acredito que seja pelo fato de eu n\xe3o conhecer boas pr\xe1ticas de arte para jogos em geral (e eu n\xe3o tinha planos de me aventurar em detalhes sobre assunto).  \\n\\nEu n\xe3o queria entender como fazer para a arte n\xe3o perde qualidade depois de alterar a escala, ou como a fazer anima\xe7\xf5es boas, ... O foco para mim sempre foi aprender a utilizar bem [Godot](https://godotengine.org/).  \\n\\n## SVG\\n\\nO interesse come\xe7ou pelo fato de SVG conseguir escalar para diversos tamanhos sem perda de qualidade. Isto quer dizer que eu poderia fazer em um tamanho pequeno e escalar no jogo sem que ficasse esquisito.  \\n\\nIsso pode ser f\xe1cilmente demonstrado alterando duas propriedades da imagem SVG, que por sua vez \xe9 algo simples de fazer (abrir a imagem com um editor de texto e alterar).  \\n\\n![Pessoa dentro de uma aura circular que se expande verticalmente](./example01.svg)\\n![Pessoa em p\xe9 com os bra\xe7os semi levantados e pernas abertas](./example02.svg)\\n![Aura circular que se expande verticalmente](./example03.svg)  \\n\\nEstas 3 imagems possuem 16 pixel para `width` e `height`.  \\n\\n```svg\\n<svg\\n   width=\\"16\\"\\n   height=\\"16\\"\\n   ...\\n></svg>\\n```\\n\\nAgora alterando elas para respectivamente 64, 128 e 256:  \\n\\n![Pessoa dentro de uma aura circular que se expande verticalmente](./example01_big.svg)\\n![Pessoa em p\xe9 com os bra\xe7os semi levantados e pernas abertas](./example02_big.svg)\\n![Aura circular que se expande verticalmente](./example03_big.svg)  \\n\\nZero perda de qualidade e tudo que eu fiz foi alterar a propriedades dentro da imagem.  \\n\\n```svg title=\\"\xdaltima imagem\\"\\n<svg\\n   width=\\"256\\"\\n   height=\\"256\\"\\n   ...\\n></svg>\\n```\\n\\n## Aseprite\\n\\nAseprite exporta para SVG de uma maneira bem prec\xe1ria. Cada pixel \xe9 transformado em um quadrado, cada quadrado \xe9 uma linha do tipo:  \\n\\n```svg\\n<rect x=\\"1\\" y=\\"1\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n```\\n\\nPara representar um ret\xe2ngulo de 10 pixels, ele iria fazer 10 quadrados um no lado do outro.\\n\\nO que \xe9 horr\xedvel quando voc\xea entende que a qualidade do SVG vem pelo fato de voc\xea conseguir representar uma forma geom\xe9trica com uma tag apenas.  \\n\\n```svg title=\\"Aseprite\\"\\n<rect x=\\"1\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"2\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"3\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"4\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"5\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"6\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"7\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"8\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"9\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"10\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n```\\n\\n```svg title=\\"Escrito a m\xe3o\\"\\n<rect x=\\"1\\" y=\\"5\\" width=\\"10\\" height=\\"1\\" fill=\\"#000000\\" />\\n```\\n\\nOs dois geram a mesma imagem por\xe9m o do Aseprite utiliza muitos mais bytes que o outro.\\n\\n## Inkscape\\n\\nEu tive muita avers\xe3o ao [Inkscape](https://inkscape.org/) no in\xedcio e passei um bom tempo procurando por ferramenta alternativa. N\xe3o que Inkscape seja uma ferramenta ruim, mas ao me ver \xe9 ferramenta avan\xe7ada que a muito tempo se tornou visualmente inst\xe1vel.  \\n\\nO visual de uma ferramenta precisa ser flex\xedvel a ponto de aprender o como certas features n\xe3o est\xe3o sendo bem entregues a novos usu\xe1rios.  \\n\\nComo ferramenta, seu objetivo \xe9 ajudar o usu\xe1rio a alcan\xe7ar o seu objetivo com o m\xednimo de esfor\xe7o. Isto inclui o usu\xe1rio n\xe3o ter que buscar tutoriais ou videos na internet para utilizar a ferramenta.  \\n\\n## Conclusion\\n\\nMuitas altern\xe1tivas ainda estavam incompletas ou eram utilizadas de maneiras que eu n\xe3o gostaria (era uma ferramenta web).  \\n\\nEu optei por utilizar Inkscape mesmo por ser a ferramenta mais completa dispon\xedvel e de **gra\xe7a**."},{"id":"godot-refcounted","metadata":{"permalink":"/en/blog/godot-refcounted","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-02-18-gdscript-refcounted/index.md","source":"@site/blog/2023-02-18-gdscript-refcounted/index.md","title":"GDScript RefCounted","description":"Eu passei um dia inteiro curioso para saber o como funcionava contagem por refer\xeancia no GDScript (n\xe3o o conceito mas sim os detalhes tecnicos). Triste por ver que a documenta\xe7\xe3o n\xe3o conseguiu tirar as d\xfavidas que eu tinha e at\xe9 pensei que s\xf3 saberia mais testando ou olhando o c\xf3digo em C++.","date":"2023-02-18T00:00:00.000Z","formattedDate":"February 18, 2023","tags":[{"label":"godot","permalink":"/en/blog/tags/godot"},{"label":"gdscript","permalink":"/en/blog/tags/gdscript"},{"label":"refcounted","permalink":"/en/blog/tags/refcounted"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"slug":"godot-refcounted","title":"GDScript RefCounted","authors":"thiagola92","tags":["godot","gdscript","refcounted"]},"unlisted":false,"prevItem":{"title":"SVG","permalink":"/en/blog/2023/04/18/svg"},"nextItem":{"title":"GDScript Array","permalink":"/en/blog/2023/02/16/gdscript-array"}},"content":"Eu passei um dia inteiro curioso para saber o como funcionava contagem por refer\xeancia no GDScript (n\xe3o o conceito mas sim os detalhes tecnicos). Triste por ver que a documenta\xe7\xe3o n\xe3o conseguiu tirar as d\xfavidas que eu tinha e at\xe9 pensei que s\xf3 saberia mais testando ou olhando o c\xf3digo em C++.\\n\\nAt\xe9 que por acaso esbarrei em um coment\xe1rio de um video que simplesmente explica **muito** bem.\\n\\n\\n> I\'ve been following along in the course, but this particular video contains a lot of misinformation about Godot\'s internals. I\'ll clarify below:\\n> \\n> All variables defined in Godot\'s scripting API are wrapped in an object called a Variant. Each Variant is capable of storing different data types (int, string, bool, Object, Array, Dictionary, Color, Transform, etc.). You can see a list of the supported types `TYPE_*` enum values in the @GlobalScope class API documentation. This Variant class is why GDScript is able to change variable data types dynamically. Internally, every variable is a Variant. When you specify that a variable is typed and can only contain a single type, it is the GDScript language implementation, not Godot Engine, that blocks the type change.\\n> \\n> Now, if a Variant B is assigned to another Variant A, then MOST of the time, the B\'s value is \\"copied by value\\", meaning that the direct value is copied from B to A. There is no reference counting of any kind. They are primitive values. In fact, reference counting primitive values is generally a waste of time and less performant than just copying them directly. This is because, for reference counting, you have to pass around a memory address in order to refer to the variable (because there is only one instance of the variable), and then getting the variable involves looking up the memory address. But for primitive numeric values such as int, float, or bool, passing the direct value takes just as much memory (less than 64 bits or 8 bytes) as passing a memory address. And if you pass a direct value, then the other Variant doesn\'t have to look up the value in the first place; they already have it.\\n> \\n> There are only three data types in Godot 3.2.x and prior that \\"copy by reference\\", i.e. pass a memory address when assigning to a new variable: Object, Array, and Dictionary. EVERYTHING else will copy by value. In Godot 4.0 and beyond, the various Pool*Array classes, such as PoolIntArray, PoolStringArray, etc., will also be updated to copy by reference. With \\"copy by reference\\" data types, if you create one of those values and assign it to two variables, then modifying either one of the variables\' values will modify both variables\' values, since they both refer to the same memory address.\\n> \\n> ```\\n> var x = [1, 2, 3]\\n> var y = x\\n> x.push_back(4) # y is now also [1,2,3,4]\\n> ```\\n> \\n> As for reference counting, that is ONLY supported in Object classes that extend the Reference class. The top of the class hierarchy looks a bit like this...\\n> \\n> - Object  \\n>   - Node  \\n>     - CanvasItem  \\n>       - Node2D  \\n>       - Control  \\n>     - Spatial  \\n>   - Reference  \\n>     - Resource  \\n> \\n> So, Object has only direct new/free methods for allocating and deleting memory. Node and its subtypes can allocate memory, but 1) they can `.free()` immediately just like Objects or `.queue_free()` to schedule their deletion till the next frame (where you can more safely delete a large group of nodes at once), and 2) if you delete a Node, it also deletes all of that Node\'s children, so an entire tree of nodes can be deleted just by deleting the root node of that tree. With Reference, you never delete it directly. It just auto-deletes when you stop having any references to it due to the fact that it actually DOES do reference-counting.\\n> \\n> ```\\n> var ref = Reference.new()\\n> ref = null # the Reference object has now been freed\\n> ```\\n> \\n> Resources behave just like References, except in their case, they can track their reference by their filepath as well. That is, if you do `load(\\"res://my_file.gd\\")`, then you may end up loading a cached instance rather than allocating an entirely new object. If the engine\'s internal ResourceCache finds that the resource has already been loaded, then the `load()` function will just return the memory address of the existing object rather than creating a new one.\\n> \\n> Also note that the practice of creating an object pool for nodes and the like can be useful, but for different reasons than in other engines. This topic is quite advanced for people who may be learning programming for the first time, but: in stuff like C# (Unity), memory is \\"garbage collected\\", i.e. the program tracks memory for you and auto-deletes it on your behalf. This can lead to random pauses in a game if the garbage collector suddenly starts up and interrupts gameplay to clean up memory. Object pooling, i.e. creating a group of objects and then just cycling through them rather than deleting and creating constantly, was a strategy to re-use existing memory for objects so as to stop the garbage collector from needing to run in the first place. But Godot does memory allocation manually and in small increments. It is designed in such a way that constantly creating and deleting objects doesn\'t lead to long-term memory fragmentation, i.e. it doesn\'t mess up your computer. You can read about this in the \\"development\\" section of the official documentation. Anyway, object pooling IS useful if, for performance reasons, you don\'t want to waste TIME deleting and creating large objects, but you won\'t need to worry about stuttering or memory issues, so most of the time, it\'s perfectly fine in Godot to just create and delete objects as you need them.\\n\\n*Algumas adapta\xe7\xf5es foram feitas para melhorar aleitura (adicionar nova linha, transformar em bullet points, etc) mas nenhuma altera\xe7\xe3o em palavras ou frases foram feitas.\\n\\n## Reference\\n\\n- [Video com o coment\xe1rio](https://www.youtube.com/watch?v=9LaB6wbZepg)  \\n- [A pessoa do coment\xe1rio tem um canal que fala bem sobre Godot](https://www.youtube.com/channel/UC7uU5XaPB9uYKlowYOhEHnA)"},{"id":"/2023/02/16/gdscript-array","metadata":{"permalink":"/en/blog/2023/02/16/gdscript-array","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-02-16-gdscript-array/index.md","source":"@site/blog/2023-02-16-gdscript-array/index.md","title":"GDScript Array","description":"Em vez de focar no que eu deveria para fazer um jogo, eu me distrai tentando ganhar desempenho onde n\xe3o precisava...","date":"2023-02-16T00:00:00.000Z","formattedDate":"February 16, 2023","tags":[{"label":"godot","permalink":"/en/blog/tags/godot"},{"label":"gdscript","permalink":"/en/blog/tags/gdscript"},{"label":"array","permalink":"/en/blog/tags/array"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["godot","gdscript","array"]},"unlisted":false,"prevItem":{"title":"GDScript RefCounted","permalink":"/en/blog/godot-refcounted"},"nextItem":{"title":"Git Book","permalink":"/en/blog/2023/02/08/git-book"}},"content":"Em vez de focar no que eu deveria para fazer um jogo, eu me distrai tentando ganhar desempenho onde n\xe3o precisava...\\n\\n------\\n\\nEu pretendia ter um Array de [buffs](https://en.wikipedia.org/wiki/Status_effect) e a ideia era verificar se cada um dos buffs j\xe1 expirou para remover quando eles acabassem. Primeira coisa que pensei foi em percorrer ele e ir removendo um a um os que expiraram.\\n\\nConforme fui olhando a documenta\xe7\xe3o de [Array](https://docs.godotengine.org/en/stable/classes/class_array.html) percebi um desafio que me chamou aten\xe7\xe3o... Remo\xe7\xe3o pode ser custoso:\\n\\n```gdscript\\nvoid\xa0erase\xa0(Variant\xa0value)\\n```\\n\\n> Note: On large arrays, this method will be slower if the removed element is close to the beginning of the array (index 0). This is because all elements placed after the removed element have to be reindexed.\\n\\n```gdscript\\nvoid\xa0remove\xa0(int\xa0position)\\n```\\n\\n> Note: On large arrays, this method will be slower if the removed element is close to the beginning of the array (index 0). This is because all elements placed after the removed element have to be reindexed.\\n\\n```gdscript\\nVariant\xa0pop_front()\\n```\\n\\n> Note: On large arrays, this method is much slower than pop_back as it will reindex all the array\'s elements every time it\'s called. The larger the array, the slower pop_front will be.\\n\\nPrimeiro fiz o c\xf3digo mais simples para isto, juntar todos que expiraram e depois remove-los um a um:\\n\\n```gdscript\\nvar expired: Array[Buff] = []\\n\\nfor buff in _buffs:\\n    if buff.timeout():\\n        expired.append(buff)\\n\\nfor buff in expired:\\n    _buffs.erase(buff)\\n```\\n\\nPensei nisto porque sei que n\xe3o posso remover elementos do Array enquanto o percorro, isso iria causar uma bagun\xe7a durante o processo (pode fazer com que voc\xea pule elementos enquanto percorre e reindexia).\\n\\nMas o que eu aprendi em uma aula da faculdade \xe9 que posso evitar este problema se eu percorrer o Array de tr\xe1s para frente (apenas use isso se voc\xea n\xe3o liga para a ordem em que os elementos v\xe3o ser removidos).\\n\\n```gdscript\\nfor in in range(_buffs.size() -1, -1, -1):\\n    if _buffs[i].timeout():\\n        _buffs.erase(_buffs[i])\\n```\\n\\nBem mais r\xe1pido que a vers\xe3o anterior e o Godot ainda consegue me sugerir os m\xe9todos a serem usados de cada elementos (pois eu usei tipagem no Array).\\n\\nN\xe3o satisfeito com o fato que reindexar tem um custo grande, resolvi fazer mais uma tentativa:\\n\\n```gdscript\\nvar up_to_date: Array[Buff] = []\\n\\nfor buff in _buffs:\\n    if not buff.timeout():\\n        up_to_date.append(buff)\\n\\n_buffs = up_to_date\\n```\\n\\nEm vez de me preocupar em remover, apenas anoto os buffs bons para depois sobreescrever o Array.  \\n\\nLado positivo: `append()` \xe9 bem mais barato que `erase()` pois n\xe3o precisa reindexar.  \\n\\nCada uma dessas maneira melhorou para quando eu precisava remover **MUITOS** elementos de um Array **MUITO** grande.  \\n\\nPor exemplo, no caso de um Array com 5k ok e 5k precisando ser removidos a diferen\xe7a foi de 648117\xb5s para 2286\xb5s (at\xe9 eu estou me perguntando se eu medi corretamente isto pq isso seria um aumento de 28.000%?)  \\n\\nVoltando para a realidade... Isto n\xe3o \xe9 um caso normal e as chances disso acontecer em um jogo \xe9 quase imposs\xedvel (at\xe9 para MMORPG 5k buffs \xe9 muito).  \\n\\nPelo lado positivo est\xe1 fun\xe7\xe3o n\xe3o \xe9 custosa, mesmo nos casos pequenos ela chega a ter o custo de 0~100% a mais que anterior.\\n\\n## Note\\n\\nDepois de tudo isso eu pensei... eu n\xe3o deveria estar dando `queue_free()` nestes meus Nodes? \ud83e\udd14\\n\\nN\xe3o era mais f\xe1cil deixar que os Nodes dessem `queue_free()` neles mesmo quando dessem timeout? \ud83e\udd14"},{"id":"/2023/02/08/git-book","metadata":{"permalink":"/en/blog/2023/02/08/git-book","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-02-08-git-book/index.md","source":"@site/blog/2023-02-08-git-book/index.md","title":"Git Book","description":"Tirei essa semana para ler alguns capitulos do livro Pro Git.","date":"2023-02-08T00:00:00.000Z","formattedDate":"February 8, 2023","tags":[{"label":"git","permalink":"/en/blog/tags/git"},{"label":"documentation","permalink":"/en/blog/tags/documentation"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"/img/dino.svg","key":"thiagola92"}],"frontMatter":{"authors":"thiagola92","tags":["git","documentation"]},"unlisted":false,"prevItem":{"title":"GDScript Array","permalink":"/en/blog/2023/02/16/gdscript-array"}},"content":"Tirei essa semana para ler alguns capitulos do livro [Pro Git](https://git-scm.com/book/en/v2).  \\n\\nEu uso [Git](https://en.wikipedia.org/wiki/Git) a anos e entendo boa parte dos comandos principais que se precisa no dia a dia... Mas \xe9 sempre bom uma leitura sobre o assunto bem organizado/explicado.  \\n\\nMeu foco foi em capitulos que pudessem introduzir conhecimento novo ou fortalecer conhecimento pr\xe9vio:  \\n[Getting Started](https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control)  \\n[Git Basics](https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository)  \\n[Git Branching](https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell)  \\n\\nDois capitulos possuem partes que me interessam e ainda estou para olhar:  \\n[Git Tools](https://git-scm.com/book/en/v2/Git-Tools-Revision-Selection)  \\n[Customizing Git](https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration)  \\n\\nDito isto, n\xe3o devo terminar de ler o livro pois alguns capitulos s\xe3o bem espec\xedficos:  \\n[Git on the Server](https://git-scm.com/book/en/v2/Git-on-the-Server-The-Protocols)  \\n[GitHub](https://git-scm.com/book/en/v2/GitHub-Account-Setup-and-Configuration)  \\n\\n## Notes\\n\\n\xc9 chato que o livro mant\xe9m uns comandos mais antigos pois alguns sistemas operacionais n\xe3o utilizam Git relativamente mais recente (pelo menos Git de 2020 seria bom)  \\n\\nGithub cobre bem as novidades do Git: https://github.blog/?s=Highlights+from+Git"}]}')}}]);