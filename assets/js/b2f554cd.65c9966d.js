"use strict";(self.webpackChunkthiagola_92_github_io=self.webpackChunkthiagola_92_github_io||[]).push([[1477],{30010:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2024/02/12/c-cpp-lib","metadata":{"permalink":"/blog/2024/02/12/c-cpp-lib","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-02-12-c-cpp-lib/index.md","source":"@site/blog/2024-02-12-c-cpp-lib/index.md","title":"C/C++ Libs","description":"- Durante a faculdade eu aprendi C","date":"2024-02-12T00:00:00.000Z","formattedDate":"February 12, 2024","tags":[{"label":"c","permalink":"/blog/tags/c"},{"label":"libs","permalink":"/blog/tags/libs"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["c","c++","libs"]},"unlisted":false,"nextItem":{"title":"Inverse Kinematics: Two Bone","permalink":"/blog/2024/02/07/two-bone"}},"content":"- Durante a faculdade eu aprendi C\\n    - Abri Visual Studio\\n    - Escrevi c\xf3digo em C\\n    - Executei\\n\\n- Recentemente eu usei C++ no projeto Godot\\n    - Segui instru\xe7\xe3o do Godot para configurar o VSCode\\n    - Escrevi c\xf3digo em C++\\n    - Executei\\n\\nEm ambos os casos eu nunca aprendi direito sobre bibliotecas... Notei claramente quando segui as instru\xe7\xf5es de projeto para **Build from Source** e n\xe3o sabia mais o que fazer com os arquivos `.a` e `.so` gerados.  \\n\\n![Desenho de um rosto rindo que nem idiota](./stupid_laughting_face.svg)\\n\\nEu sabia que poderia compilar C/C++ com GCC ou Clang, mas meu conhecimento se resumia a compilar projetos 100% meus.  \\n\\n```\\ngcc main.c -o main\\n```\\n\\nBem, vamos entender cada um dois formatos primeiro.\\n\\n# `.a` (archive)\\n\\nSe trata de uma biblioteca est\xe1tica (**static library**), ou seja, podemos ver como um conjunto de fun\xe7\xf5es/vari\xe1veis que seram anexadas ao seu execut\xe1vel durante a etapa de compila\xe7\xe3o (na etapa do **linker**).  \\n\\n\xd3timo quando voc\xea quer que seu programa tenha toda a l\xf3gica.  \\n\\n# `.so` (shared object)\\n\\nSe trata de uma biblioteca compartilhada (**shared library**), ou seja, podemos ver como um execut\xe1vel que ser\xe1 utilizado por qualquer programa que precise dele (ainda \xe9 preciso avisar ao **linker** da existencia da biblioteca).  \\n\\n\xd3timo pois ocupa menos espa\xe7o do computador da pessoa com a mesma l\xf3gica.  \\n\\n# GCC 4 Steps\\n\\nEu j\xe1 mencionei linker duas vezes, para entender o que ele \xe9 precisamos olhar para cada etapa do GCC.  \\n\\n[![4 etapas do GCC](./big_steps.svg)](./big_steps.svg)  \\n\\nUm resumo seria:\\n\\n- Preprocessor\\n    - Respons\xe1vel por fazer pr\xe9 processamentos, o mais popular \xe9 a substitui\xe7\xe3o de `#include` pelo c\xf3digo dentro dos headers (`.h`).\\n    - A sa\xedda dessa etapa \xe9 conhecida como [translation unit](https://en.wikipedia.org/wiki/Translation_unit_%28programming%29) (ainda \xe9 c\xf3digo C).\\n- Compiler\\n    - Respons\xe1vel por converter o c\xf3digo C para c\xf3digo assembly.\\n- Assembler\\n    - Respons\xe1vel por converter o c\xf3digo assembly para um [object code](https://en.wikipedia.org/wiki/Object_code), ele \xe9 formado de c\xf3digo de m\xe1quina (c\xf3digo especifico para rodar naquela m\xe1quina) e \\"refer\xeancias\\" a serem encontradas.\\n        - Por exemplo, voc\xea pode refer\xeanciar a fun\xe7\xe3o `void do_it()` mas ela n\xe3o estar neste arquivo `.c`.\\n- Linker\\n    - Respons\xe1vel por encontrar as refer\xeancias de um arquivo e linkar elas, a sa\xedda \xe9 justamente o execut\xe1vel final.\\n\\n# Project from Zero\\n\\nCome\xe7amos com uma estrutura bem vazia de projeto:  \\n\\n```\\nproject/\\n\u2514\u2500\u2500 src/\\n    \u251c\u2500\u2500 main.c\\n    \u2514\u2500\u2500 ...\\n```\\n\\nApens possuimos c\xf3digo nosso ent\xe3o tudo que precisamos fazer para criar o execut\xe1vel \xe9  \\n\\n```\\ngcc main.c -o main\\n``` \\n\\n---\\n\\nAlgum momento do nosso projeto decidimos usar bibliotecas de terceiro e n\xe3o queremos misturar ela com o nosso c\xf3digo ent\xe3o resolvemos sempre separar os arquivos dela em outros diret\xf3rios.  \\n\\nO primeiro tipo de arquivo que bibliotecas trazem junto s\xe3o os headers, utilizados justamente para o compilador conseguir determinar o que exatamente tem que buscar nas bibliotecas.  \\n\\n```\\nproject/\\n\u251c\u2500\u2500 include/\\n\u2502   \u2514\u2500\u2500 header.h\\n\u2514\u2500\u2500 src/\\n    \u251c\u2500\u2500 main.c\\n    \u2514\u2500\u2500 ...\\n```\\n \\nPodemos adicionar um diret\xf3rio onde se buscar headers com o argumento `-I` seguido pelo diret\xf3rio (n\xe3o \xe9 separado por espa\xe7o):  \\n\\n```\\ngcc main.c -o main -Iinclude\\n```\\n\\nAgora podemos adicionar `#include <header.h>` sem o compilador reclamar que `header.h` n\xe3o foi encontrado.  \\n\\nSe tentarmos chamar uma fun\xe7\xe3o que est\xe1 no `header.h` ainda teremos erro pois n\xe3o temos a fun\xe7\xe3o, apenas a assinatura dela. N\xf3s precisamos do c\xf3digo da fun\xe7\xe3o, que pode estar em um `.so` ou `.a`.  \\n\\n:::warning\\nSaiba se sua biblioteca \xe9 C++ ou C para saber se deve usar `gcc` ou `g++`.\\n:::\\n\\n---\\n\\n### `.a`\\n\\nNovamente n\xe3o vamos querer misturar este arquivo com os do nosso projeto, ent\xe3o vamos deixar a biblioteca na pasta `lib`.  \\n\\n```\\nproject/\\n\u251c\u2500\u2500 include/\\n\u2502   \u2514\u2500\u2500 header.h\\n\u251c\u2500\u2500 lib/\\n\u2502   \u2514\u2500\u2500 libname.a\\n\u2514\u2500\u2500 src/\\n    \u251c\u2500\u2500 main.c\\n    \u2514\u2500\u2500 ...\\n```\\n\\nPodemos passar ao compilador diret\xf3rio onde as nossas bibliotecas se encontram com o argumento `-L` seguido pelo diret\xf3rio (n\xe3o \xe9 separado por espa\xe7o):  \\n\\n```\\ngcc main.c -o main -Iinclude -Llib\\n```\\n\\nPrecisamos especificar as que desajamos usar e isso \xe9 feito com o argumento `-l` seguido pelo nome base da biblitoeca (n\xe3o \xe9 separado por espa\xe7o):  \\n\\n```\\ngcc main.c -o main -Iinclude -Llib -lname\\n```\\n\\n:::note\\n`-lname` vai buscar pela biblioteca `libname.a`, este \xe9 um atalho para refer\xeanciar bibliotecas.  \\n`-l:libname.so` pode ser usado em casos que o nome da biblioteca n\xe3o segue estes padr\xf5es.  \\n:::\\n\\n### `.so`\\n\\nSegue basicamente a mesma l\xf3gica do `.a`, deixar a biblioteca no diret\xf3rio `lib`.  \\n\\n```\\nproject/\\n\u251c\u2500\u2500 include/\\n\u2502   \u2514\u2500\u2500 header.h\\n\u251c\u2500\u2500 lib/\\n\u2502   \u2514\u2500\u2500 libname.so\\n\u2514\u2500\u2500 src/\\n    \u251c\u2500\u2500 main.c\\n    \u2514\u2500\u2500 ...\\n```\\n\\nPassar ao compilador diret\xf3rio onde as nossas bibliotecas se encontram com o argumento `-L` seguido pelo diret\xf3rio (n\xe3o \xe9 separado por espa\xe7o):  \\n\\n```\\ngcc main.c -o main -Iinclude -Llib\\n```\\n\\nNo caso de bibliotecas compartilhadas este diret\xf3rio pode possuir centenas de bibliotecas, ent\xe3o faz sentido voc\xea ter que especificar as que voc\xea quer usar. Novamente usamos o argumento `-l` seguido pelo nome base da biblitoeca (n\xe3o \xe9 separado por espa\xe7o):  \\n\\n```\\ngcc main.c -o main -Iinclude -Llib -lname\\n```\\n\\n:::note\\n`-lname` vai buscar pela biblioteca `libname.so`, este \xe9 um atalho para refer\xeanciar bibliotecas.  \\n`-l:libname.so` pode ser usado em casos que o nome da biblioteca n\xe3o segue estes padr\xf5es.  \\n:::\\n\\nAinda precisamos passar ao linker onde ele deve buscar essa biblioteca durante a execu\xe7\xe3o do c\xf3digo (dentro do seu projeto sabemos que est\xe1 no diret\xf3rio `lib` mas na m\xe1quina de quem estiver executando vai estar aonde?).  \\n\\n```\\ngcc main.c -o main -Iinclude -Llib -lname -Wl,-Rlib\\n```\\n\\n:::note\\nEste argumento (`-Wl`) passa diversos argumentos para o linker (separados por virgula).  \\nPoderiamos passar outros argumentos, por exemplo `-Wl,X,Y,Z`.  \\n:::\\n\\nNosso execut\xe1vel agora vai sempre tentar buscar a biblioteca na pasta `lib` que estiver no mesmo diret\xf3rio que ele.  \\n\\n# References\\n- https://en.wikipedia.org/wiki/GNU_Compiler_Collection#Design  \\n- https://en.wikipedia.org/wiki/Preprocessor  \\n- https://en.wikipedia.org/wiki/Linker_(computing)  \\n- https://stackoverflow.com/questions/25160245/clang-linking-with-a-so-file  \\n- https://stackoverflow.com/questions/31176747/how-to-use-a-library-with-headers-and-so-files  \\n- https://stackoverflow.com/questions/480764/linux-error-while-loading-shared-libraries-cannot-open-shared-object-file-no-s  \\n- https://www.youtube.com/watch?v=or1dAmUO8k0  \\n- https://www.youtube.com/watch?v=pLy69V2F_8M  \\n- https://www.youtube.com/watch?v=Wt4dxDNmDA8  \\n- https://tree.nathanfriend.io/"},{"id":"/2024/02/07/two-bone","metadata":{"permalink":"/blog/2024/02/07/two-bone","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-02-07-two-bone/index.md","source":"@site/blog/2024-02-07-two-bone/index.md","title":"Inverse Kinematics: Two Bone","description":"- https://www.alanzucconi.com/2018/05/02/ik-2d-1/","date":"2024-02-07T00:00:00.000Z","formattedDate":"February 7, 2024","tags":[{"label":"godot","permalink":"/blog/tags/godot"},{"label":"gdscript","permalink":"/blog/tags/gdscript"},{"label":"inverse kinematics","permalink":"/blog/tags/inverse-kinematics"},{"label":"physics","permalink":"/blog/tags/physics"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["godot","gdscript","inverse kinematics","physics"]},"unlisted":false,"prevItem":{"title":"C/C++ Libs","permalink":"/blog/2024/02/12/c-cpp-lib"},"nextItem":{"title":"Inverse Kinematics: Look At","permalink":"/blog/2024/02/04/ik-look-at"}},"content":"# References\\n- https://www.alanzucconi.com/2018/05/02/ik-2d-1/"},{"id":"/2024/02/04/ik-look-at","metadata":{"permalink":"/blog/2024/02/04/ik-look-at","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2024-02-04-ik-look-at/index.md","source":"@site/blog/2024-02-04-ik-look-at/index.md","title":"Inverse Kinematics: Look At","description":"Dado que j\xe1 refleti sobre forward kinematics, est\xe1 na hora de falar sobre inverse kinematics (por mais que eu esteja com pregui\xe7a de fazer isso).","date":"2024-02-04T00:00:00.000Z","formattedDate":"February 4, 2024","tags":[{"label":"godot","permalink":"/blog/tags/godot"},{"label":"gdscript","permalink":"/blog/tags/gdscript"},{"label":"inverse kinematics","permalink":"/blog/tags/inverse-kinematics"},{"label":"physics","permalink":"/blog/tags/physics"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["godot","gdscript","inverse kinematics","physics"]},"unlisted":false,"prevItem":{"title":"Inverse Kinematics: Two Bone","permalink":"/blog/2024/02/07/two-bone"},"nextItem":{"title":"Unions e Enums","permalink":"/blog/2023/12/31/union-enum"}},"content":"Dado que j\xe1 refleti sobre [forward kinematics](../2023-12-18-fk/index.md), est\xe1 na hora de falar sobre inverse kinematics (por mais que eu esteja com pregui\xe7a de fazer isso).  \\n\\nVamos come\xe7ar por algo que eu at\xe9 me questiono se seria inverse kinematic: **Look at**.  \\n\\nSer capaz de fazer uma m\xe3o apontar para uma posi\xe7\xe3o ou a cabe\xe7a olhar para uma dire\xe7\xe3o.  \\n\\n![Jogador 2D movendo a cabe\xe7a para cima](./player_looking_animated.svg)  \\n\\n# Look At\\n\\nLembrando que articula\xe7\xf5es sempre possuem as suas informa\xe7\xf5es locais e que as informa\xe7\xf5es globais s\xe3o facilmente calcul\xe1veis, nossa tarefa \xe9 descobrir como queremos alterar qualquer uma delas para alcan\xe7ar nosso objetivo.  \\n\\nNo caso, nosso objetivo \xe9 fazer com que o vetor da articula\xe7\xe3o aponte para X.  \\n\\n![Uma imagem com o vector apontando para um X na direita dele e outra imagem igual por\xe9m com o X movido para cima do vetor](./simple_example.svg)  \\n\\nNa primeira parte da imagem, temos o vetor j\xe1 apontando em dire\xe7\xe3o do X.  \\nNa segunda parte da imagem, o X se encontra a 90\xba graus do vetor.  \\n\\nOlhando a imagem n\xf3s conseguimos saber que para continuar apontando para X temos que rotacionar por 90\xba, mas como conseguir este \xe2ngulo matem\xe1ticamente?  \\n\\nTalvez voc\xea j\xe1 tenha notado mas vamos fazer isto usando trigonometria (se prepare que IK \xe9 tri\xe2ngulo para tudo que \xe9 lado).  \\n\\n# 0\xba ~ 90\xba\\n\\nUm bom come\xe7o \xe9 sabermos calcular o \xe2ngulo para uma posi\xe7\xe3o, sem se preocupar com detalhes como global e local.  \\n\\n![Vetor com \xe2ngulo desconhecido entre 0\xba e 90\xba](./angle.svg)  \\n\\nFun\xe7\xf5es trigonom\xe9tricas s\xe3o o segredo para trabalhar com tri\xe2ngulos (seno, cosseno e tangente) e neste caso tangente \xe9 justamente o que procuramos.  \\n\\n```\\ntan \u03b8 = cateto oposto / cateto adjacente\\n```\\n\\nAgora n\xf3s temos o valor da tangente para qualquer posi\xe7\xe3o (x,y).  \\n\\n* (1,1)\\n    * `tan(\u03b8) = 1`\\n* (3,2)\\n    * `tan(\u03b8) = 2/3`\\n* (4,7)\\n    * `tan(\u03b8) = 7/4`\\n\\nSe voc\xea bem se lembra, existem fun\xe7\xf5es trigonom\xe9tricas inversas que s\xe3o justamente quem v\xe3o nos dar o \xe2ngulo que chega ao valor que temos.  \\n\\n* (1,1)\\n    * `tan(\u03b8) = 1`\\n        * `atan(1) = \u03b8`\\n            * 45\\n* (3,2)\\n    * `tan(\u03b8) = 2/3`\\n        * `atan(2/3) = \u03b8`\\n            * 33.690067526\\n* (4,7)\\n    * `tan(\u03b8) = 7/4`\\n        * `atan(7/4) = \u03b8`\\n            * 60.255118703\\n\\n\\n# 0\xba ~ 360\xba\\n\\nUm problema que cedo ou tarde iriamos notar \xe9 que dos valores da tangete n\xe3o \xe9 poss\xedvel definir qual quadrante se trata.  \\n\\n![Imagem mostrando que n\xe3o da pra decompor o \xe2ngulo a partir do valor da tangente](./angles.svg)  \\n\\n`atan(1)` pode ser 45\xba ou 225\xba  \\n`atan(-1)` pode ser 135\xba ou 315\xba  \\n\\n\xdanica maneira de saber exatamente o quadrante \xe9 sabendo o sinal dos eixos.  \\n\\n* (positivo,positivo)\\n    * atan(\u03b8) + 0\xba\\n* (negativo,positivo)\\n    * atan(\u03b8) + 90\xba\\n* (negativo,negativo)\\n    * atan(\u03b8) + 180\xba\\n* (positivo,negativo)\\n    * atan(\u03b8) + 270\xba\\n\\n\xc9 por isso que em muitas bibliotecas matem\xe1ticas existe a fun\xe7\xe3o `atan(v)` e a fun\xe7\xe3o `atan2(x, y)`.  \\nA segunda utiliza os eixos para saber o real \xe2ngulo.  \\n\\n# Rotating\\n\\nAgora que sabemos como obter o \xe2ngulo do ponto (0,0) at\xe9 uma posi\xe7\xe3o qualquer, podemos finalmente rotacionar a articula\xe7\xe3o.  \\n\\nO pr\xf3ximo problema \xe9 que **n\xe3o** estamos falando de rotacionar a partir do ponto (0,0) mas sim da posi\xe7\xe3o da articula\xe7\xe3o.  \\n\\n![Mostrando diferen\xe7a entre o \xe2ngulo local e global](./rotation.svg)  \\n\\n**\u03b81**: Rota\xe7\xe3o global, usando ponto (0,0) como refer\xeancia.  \\n**\u03b82**: Rota\xe7\xe3o local, usando a posi\xe7\xe3o da articula\xe7\xe3o como refer\xeancia.  \\n\\nPara solucionar isto podemos calcular a posi\xe7\xe3o do ponto em rela\xe7\xe3o a articula\xe7\xe3o:  \\n\\n```\\nposi\xe7\xe3o do ponto relativa \xe0 articula\xe7\xe3o =\\n        posi\xe7\xe3o global do ponto - posi\xe7\xe3o global da articula\xe7\xe3o\\n```  \\n\\nExemplo:\\n\\nPosi\xe7\xe3o global do ponto: (35, 10)  \\nPosi\xe7\xe3o global da articula\xe7\xe3o: (25, 10)  \\nPosi\xe7\xe3o do ponto relativa \xe0 articula\xe7\xe3o: (10, 0)  \\n\xc2ngulo: 0\xba  \\n\\nSe movermos o ponto:  \\n\\nPosi\xe7\xe3o global do ponto: (50, 30)  \\nPosi\xe7\xe3o global da articula\xe7\xe3o: (25, 10)  \\nPosi\xe7\xe3o do ponto relativa \xe0 articula\xe7\xe3o: (25, 20)  \\n\xc2ngulo: 38\xba  \\n\\nPronto, agora sabemos qual deveria ser a rota\xe7\xe3o daquela articula\xe7\xe3o!  \\n\\n# Conclusion\\n\\nVoc\xea provavelmente n\xe3o ter\xe1 que pensar em nada disso pois muitas game engines j\xe1 possuem m\xe9todos para lidar com isto, por exemplo em Godot podemos encontrar algo como:  \\n\\n`get_angle_to(global_position)`  \\n\\n# References\\n- https://www.youtube.com/watch?v=8Eur16foTMw  \\n- https://cplusplus.com/reference/cmath/atan2/"},{"id":"/2023/12/31/union-enum","metadata":{"permalink":"/blog/2023/12/31/union-enum","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-12-31-union-enum/index.md","source":"@site/blog/2023-12-31-union-enum/index.md","title":"Unions e Enums","description":"Ao come\xe7ar a estudar Rust percebi o qu\xe3o a rela\xe7\xe3o deste dois s\xe3o pr\xf3xima, por\xe9m primeiro precisamos rever unions e enums.","date":"2023-12-31T00:00:00.000Z","formattedDate":"December 31, 2023","tags":[{"label":"enum","permalink":"/blog/tags/enum"},{"label":"rust","permalink":"/blog/tags/rust"},{"label":"union","permalink":"/blog/tags/union"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["enum","rust","union"]},"unlisted":false,"prevItem":{"title":"Inverse Kinematics: Look At","permalink":"/blog/2024/02/04/ik-look-at"},"nextItem":{"title":"Forward Kinematics","permalink":"/blog/2023/12/18/fk"}},"content":"Ao come\xe7ar a estudar Rust percebi o qu\xe3o a rela\xe7\xe3o deste dois s\xe3o pr\xf3xima, por\xe9m primeiro precisamos rever unions e enums.  \\n\\n# Union\\n\\nSe trata de utilizar o mesmo espa\xe7o de mem\xf3ria para armazenar um entre diversos tipos.  \\n\\n```C\\nunion Content {\\n    int i;\\n    float f;\\n    char c;\\n};\\n\\nunion Content content;\\n```\\n\\nNesse exemplo eu declarei um union que pode conter um dos seguintes valores: int, float, char.  \\n\\nEnt\xe3o eu posso escrever qualquer um dos tipos nele:\\n\\n```C\\ncontent.i = 10;\\ncontent.f = 5.0;\\ncontent.c = \'a\';\\n```\\n\\nO valor final de `content` vai ser `a` pois foi o \xfaltimo valor que botamos.  \\n\\nPor\xe9m a parte importante \xe9 justamente o fato de usarmos o mesmo espa\xe7o de mem\xf3ria para armazenar qualquer um destes tipos.\\n\\n```C\\ncontent.c = \'a\';\\n\\nprintf(\\"%c\\\\n\\", content.c); // print \\"a\\"\\nprintf(\\"%c\\\\n\\", content.i); // print \\"a\\"\\n```\\n\\nQuando voc\xea declara uma union, o tamanho dela \xe9 definido pelo maior tamanho entre os tipos que ela precisa conseguir armazenar.  \\n\\n| Tipo | Tamanho |\\n| ---- | ------- |\\n| int  | 4 bytes |\\n| float | 4 bytes |\\n| char | 1 byte |\\n\\nNo nosso caso o melhor tamanho seria 4 bytes, pois com ele voc\xea consegue armazenar o `char` tamb\xe9m.  \\n\\nNada impede de armazenarmos um `char` e tentarmos ler aquele espa\xe7o da mem\xf3ria como um `int`.  \\n\\n```C\\ncontent.c = \'a\';\\n\\nprintf(\\"%c\\\\n\\", content.c); // print \\"a\\"\\nprintf(\\"%c\\\\n\\", content.i); // print \\"a\\"\\n\\n// O character \'a\' \xe9 nada mais que o n\xfamero 97 na mem\xf3ria.\\nprintf(\\"%i\\\\n\\", content.c); // print \\"97\\"\\nprintf(\\"%i\\\\n\\", content.i); // print \\"97\\"\\n```\\n\\nResta a n\xf3s utilizar corretamente o valor daquele espa\xe7o de mem\xf3ria. \\n\\nAfinal n\xe3o queremos armazenar um `char` na union e mais tarde no c\xf3digo tentar utilizar como um `int`, n\xe9?  \\n\\n```C\\ncontent.c = \'a\';\\n\\n// ...\\n\\nprintf(\\"%i\\\\n\\", content.i + 5); // print \\"102\\"\\n```\\n\\nN\xe3o s\xf3 isso como quando voc\xea armazena um valor naquele espa\xe7o de mem\xf3ria, ele apenas escreve no espa\xe7o que ele usaria.  \\n\\n```C\\ncontent.c = \'a\';\\n\\nprintf(\\"%i\\\\n\\", content.c); // print \\"97\\"\\nprintf(\\"%i\\\\n\\", content.i); // print \\"97\\"\\n\\ncontent.i = -10;\\ncontent.c = \'a\';\\n\\nprintf(\\"%i\\\\n\\", content.c); // print \\"97\\"\\nprintf(\\"%i\\\\n\\", content.i); // print \\"-159\\"\\n```\\n\\nO que aconteceu aqui?  \\n\\n- In\xedcio do programa os **4** bytes de `content` est\xe3o com zero\\n- Content recebeu no **primeiro** byte o valor 97 (pois `a` == 97)\\n- Printamos utilizando `content.c`\\n    - Isto nos faz utilizar **um** byte\\n- Printamos utilizando `content.i`\\n    - Isto nos faz utilizar **4** bytes\\n- Content recebeu encheu os **4** bytes para formar o valor de -10\\n- Content recebeu no **primeiro** byte o valor 97\\n- Printamos utilizando `content.c`\\n    - Isto nos faz utilizar **um** byte (primeiro byte est\xe1 com o valor de 97)\\n- Printamos utilizando `content.i`\\n    - Isto nos faz utilizar **4** bytes (primeiro byte + os outros 3 bytes que n\xe3o foram limpos)\\n\\nPodemos confirmar isto settando para zero antes de preenchermos.  \\n\\n```C\\ncontent.c = \'a\';\\n\\nprintf(\\"%i\\\\n\\", content.c); // print \\"97\\"\\nprintf(\\"%i\\\\n\\", content.i); // print \\"97\\"\\n\\ncontent.i = -10;\\ncontent.i = 0;\\ncontent.c = \'a\';\\n\\nprintf(\\"%i\\\\n\\", content.c); // print \\"97\\"\\nprintf(\\"%i\\\\n\\", content.i); // print \\"97\\"\\n```\\n\\nComo podemos ver, \xe9 essencial termos uma maneira de identificar qual \xe9 o tipo atual na union.  \\n\\n# Enum\\n\\nSe trata de ligar um identificador a um n\xfamero \xfanico dentro de um agrupamento.  \\n\\n```C\\nenum Type {\\n    Integer,\\n    Floating,\\n    Character,\\n};\\n\\nenum Type type;\\n```\\n\\nNeste caso est\xe1 ligando:  \\n\\n| Identificador | N\xfamero |\\n| ------------- | ------ |\\n| Integer       | 0      |\\n| Floating      | 1      |\\n| Character     | 2      |\\n\\nIsto poupa trabalho de criarmos manualmente uma vari\xe1vel para cada valor, por exemplo:  \\n\\n```C\\nint Integer = 0;\\nint Floating = 1;\\nint Character = 2;\\n```\\n\\nAl\xe9m de deixarmos claro o tipo de vari\xe1vel durante a cria\xe7\xe3o dela (como um valor dentro daquele agrupamento).  \\n\\n```C\\nenum Type type = Integer;\\n\\nprintf(\\"%i\\\\n\\", type); // print \\"0\\"\\n```\\n\\nEnfim, a essa altura voc\xea pode j\xe1 ter notado a import\xe2ncia de enum para unions.  \\n\\nCom eles podemos criar ligar um identificador a um tipo, como se fosse uma tag para aquele union.  \\n\\n```C\\nunion content {\\n    int i;\\n    float f;\\n    char c;\\n} content;\\n\\nenum Types {\\n    Integer,\\n    Floating,\\n    Character,\\n} type;\\n\\ncontent.f = 5.0;\\ntype = Floating;\\n```\\n\\nNote que precisamos atualizar `type` sempre que mudarmos o tipo de `content`, por\xe9m ganhamos a capacidade de tratar corretamente a union.  \\n\\n```C\\nif (type == Floating) {\\n    printf(\\"%f\\\\n\\", content.f);\\n} else if (type == Character) {\\n    printf(\\"%c\\\\n\\", content.c);\\n} else {\\n    printf(\\"%i\\\\n\\", content.i);\\n}\\n```\\n\\nEste tipo de estrutura \xe9 t\xe3o comum que tem o nome de [Tagged Union](https://en.wikipedia.org/wiki/Tagged_union).  \\n\\n# Rust Enum\\n\\nAcredito que o `enum` do Rust seja nada mais que um tagged union.  \\n\\n```Rust\\n#[derive(Debug)]\\nenum Type {\\n    Integer,\\n    Floating,\\n    Character,\\n}\\n\\nprintln!(\\"{:#?}\\", Type::Integer);\\n```\\n\\nEm outras lugares enum ligaria apenas identificadores a n\xfameros, por\xe9m em Rust voc\xea pode armazenar estrutura/tipos juntos aos enums.  \\n\\n```Rust\\n#[derive(Debug)]\\nenum Type {\\n    Integer(i32),\\n    Floating(f32),\\n    Character(char),\\n}\\n\\nlet content: Type = Type::Floating(5.0);\\n\\nprintln!(\\"{:#?}\\", content);\\n```\\n\\nIsso nos da uma estrutura s\xf3 que possue a capacidade de fazer o mesmo que tagged union e com menos chance do desenvolvedor cometer um erro.  \\n\\nPor exemplo, n\xe3o precisamos mais atualizar o tipo armazenado na vari\xe1vel toda vez que alteramos:  \\n\\n```\\n// C\\ncontent.f = 5.0;\\ntype = Floating;\\n\\n// Rust\\nlet content: Type = Type::Floating(5.0);\\n```\\n\\nRust \xe9 linguagem que preza bastante seguran\xe7a, ent\xe3o faria sentido tratar como se fosse uma \xfanica estrutura para evitar os problemas de union (embora Rust tenha o tipo union).  \\n\\n# Comparison\\n\\n### C\\n\\n```C\\nunion content {\\n    int i;\\n    float f;\\n    char c;\\n} content;\\n\\nenum Types {\\n    Integer,\\n    Floating,\\n    Character,\\n} type;\\n\\ncontent.f = 5.0;\\ntype = Floating;\\n\\nif (type == Floating) {\\n    // Fazer algo com float\\n} else if (type == Character) {\\n    // Fazer algo com char\\n} else {\\n    // Fazer algo com int\\n}\\n```\\n\\n### Rust\\n\\n```Rust\\n#[derive(Debug)]\\nenum Type {\\n    Integer(i32),\\n    Floating(f32),\\n    Character(char),\\n}\\n\\nlet content: Type = Type::Floating(5.0);\\n\\nmatch content {\\n    Type::Floating(f) => // Fazer algo com float\\n    Type::Character(c) => // Fazer algo com char\\n    Type::Integer(i) => // Fazer algo com int\\n}\\n```"},{"id":"/2023/12/18/fk","metadata":{"permalink":"/blog/2023/12/18/fk","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-12-18-fk/index.md","source":"@site/blog/2023-12-18-fk/index.md","title":"Forward Kinematics","description":"Esses \xfaltimos meses eu tenho gastado um grande tempo (mais do que gostaria) vendo o c\xf3digo de inverse kinematics 2D do Godot.","date":"2023-12-18T00:00:00.000Z","formattedDate":"December 18, 2023","tags":[{"label":"godot","permalink":"/blog/tags/godot"},{"label":"gdscript","permalink":"/blog/tags/gdscript"},{"label":"forward kinematics","permalink":"/blog/tags/forward-kinematics"},{"label":"physics","permalink":"/blog/tags/physics"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["godot","gdscript","forward kinematics","physics"]},"unlisted":false,"prevItem":{"title":"Unions e Enums","permalink":"/blog/2023/12/31/union-enum"},"nextItem":{"title":"Little-endian and Big-endian","permalink":"/blog/2023/11/27/little-and-big-endians"}},"content":"Esses \xfaltimos meses eu tenho gastado um grande tempo (mais do que gostaria) vendo o c\xf3digo de inverse kinematics 2D do Godot.  \\n\\nE eu preciso passar a limpo o conhecimento b\xe1sico que eu possuo, para melhor garantir que n\xe3o estou cagando tudo no c\xf3digo deles.  \\n\\n![Mesma cara do meme \\"awkward look monkey puppet\\"](monkey_face.svg)  \\n\\n## Robotic Arms\\n\\n\xc9 dif\xedcil falar de forward kinematics (FK) e inverse kinematics (IK) sem entender bra\xe7os rob\xf3ticos, pois foi o primeiro uso destas l\xf3gicas.  \\n\\nPara entender melhor um bra\xe7o, vamos dividi-lo em 4 partes:  \\n- Base\\n- Limbs (membros)\\n- Joints (articula\xe7\xf5es)\\n- End effector (m\xe3o do bra\xe7o)  \\n\\n![Bra\xe7o rob\xf3tico](robotic_arm.svg)  \\n\\n- Base, provid\xeancia estabilidade para o bra\xe7o\\n- Limbs, separa as partes entre si\\n- Joints, s\xe3o respons\xe1veis por se rotacionar\\n- End effector, interage com o objeto\\n\\nA parte que mais damos aten\xe7\xe3o quando falamos de FK e IK s\xe3o joints, pois elas provid\xeancia a l\xf3gica de movimenta\xe7\xe3o do bra\xe7o.\\n\\n## FK & IK\\n\\nSe tivessemos que resumir cada assunto, seria algo por parte de:\\n- Forward kinematics\\n    - Foca em descobrir o estado da m\xe3o, dado que o bra\xe7o est\xe1 em certo estado.  \\n- Inverse kinematics\\n    - Foca em descobrir o estado do bra\xe7o, dado que deseja a m\xe3o em certa estado.  \\n\\n:::note\\nQuando eu digo \\"estado\\", estou me referindo a posi\xe7\xe3o e rota\xe7\xe3o dos respectivos componentes.\\n:::\\n\\n### FK\\n![FK](fk.svg)  \\n\\n### IK\\n![IK](ik.svg)  \\n\\n## Forward Kinematic\\n\\nMinha kinematic favorita por ser a mais simples de calcular, onde tudo se resume a um grande somat\xf3rio.  \\n\\n![Bra\xe7o rob\xf3tico totalmente vertical](robotic_arm_state_0.svg)  \\n\\nAdicionei setas nessa imagem para represetarem as rota\xe7\xf5es locais das joints (articula\xe7\xf5es), essa rota\xe7\xe3o se refere ao quanto aquela joint (articula\xe7\xe3o) se rotacionou.  \\n\\n![Bra\xe7o rob\xf3tico totalmente vertical com \xe2ngulos cl\xe1ssicos](robotic_arm_state_1.svg)  \\n\\nAgora adicionei uma circufer\xeancia mostrando os \xe2ngulos cl\xe1ssicos e podemos usar eles como refer\xeancia para a rota\xe7\xe3o global, essa rota\xe7\xe3o \xe9 sempre relacionada \xe0 direita (eixo X).  \\n\\nPara come\xe7ar nosso experimento, podemos rotacionar o end effector (m\xe3o) por 90 graus e ver o que podemos concluir.  \\n\\n![M\xe3o rotacionada 90 graus](robotic_arm_state_2.svg)  \\n\\n- End effector\\n    - Rota\xe7\xe3o local: 90\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n- Joint 2\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: 0\xba\\n- Joint 1\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: 0\xba\\n\\nPodemos ver que rotacionar um ponto localmente n\xe3o afeta os anteriores (os pais). Tamb\xe9m importante notar que rota\xe7\xe3o local sempre ir\xe1 afetar a rota\xe7\xe3o global daquele ponto.  \\n\\nMas se tivessemos rotacionado a joint 2 por 90 graus?  \\n\\n![Joint 2 rotacionada 90 graus](robotic_arm_state_3.svg)  \\n\\n- End effector\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n- Joint 2\\n    - Rota\xe7\xe3o local: 90\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n- Joint 1\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: 0\xba\\n\\nNotamos que rotacionar localmente um ponto, afeta a rota\xe7\xe3o global dos pontos seguintes pela mesma quantidade.  \\n\\nSe rotacionarmos localmente o end effector por -90 graus?  \\n\\n![End effector rotacionada -90 graus](robotic_arm_state_4.svg)  \\n\\n- End effector\\n    - Rota\xe7\xe3o local: -90\xba\\n    - Rota\xe7\xe3o global: 0\xba\\n- Joint 2\\n    - Rota\xe7\xe3o local: 90\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n- Joint 1\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: 0\xba\\n\\nN\xf3s conseguimos voltar a rota\xe7\xe3o global do end effector para 0\xba pois rotacionar localmente sempre afeta o global do mesmo ponto.  \\n\\nNesse pequeno experimento j\xe1 podemos come\xe7ar a notar uma formula bem simples:  \\n`Rota\xe7\xe3o global = Rota\xe7\xe3o global do ponto anterior + Rota\xe7\xe3o local`  \\n\\nUtilizando o end effector como refer\xeancia:  \\n`Rota\xe7\xe3o global = 90\xba + (-90\xba) = 0\xba`  \\n\\n:::info\\nNo caso do primeiro ponto (joint 1), a rota\xe7\xe3o global anterior seria 0 graus.  \\n`Rota\xe7\xe3o global = 0 + Rota\xe7\xe3o local`  \\n:::\\n\\nO que aconteceria se rotacionarmos a joint 1 por 90 graus?  \\n\\n![Joint 1 rotacionada 90 graus](robotic_arm_state_5.svg)  \\n\\n- End effector\\n    - Rota\xe7\xe3o local: -90\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n- Joint 2\\n    - Rota\xe7\xe3o local: 90\xba\\n    - Rota\xe7\xe3o global: 180\xba\\n- Joint 1\\n    - Rota\xe7\xe3o local: 90\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n\\nPodemos ver que afetamos a rota\xe7\xe3o global de todos os pontos seguintes, aumentando eles por 90 graus.  \\n\\n## Conclusion\\n\\nLembra quando falei que forward kinematics \\"foca em descobrir o estado da m\xe3o, dado que o bra\xe7o est\xe1 em certo estado\\".  \xc9 exatamente esse somat\xf3rio que nos ajuda a resolver o problema.  \\n\\nVamos supor que temos 5 pontos (ponto 1 \xe9 a base):\\n\\n- Ponto 5\\n    - Rota\xe7\xe3o local: -90\xba\\n    - Rota\xe7\xe3o global: ?\\n- Ponto 4\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: ?\\n- Ponto 3\\n    - Rota\xe7\xe3o local: 180\xba\\n    - Rota\xe7\xe3o global: ?\\n- Ponto 2\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: ?\\n- Ponto 1\\n    - Rota\xe7\xe3o local: 90\xba\\n    - Rota\xe7\xe3o global: ?\\n\\nE que n\xf3s queremos descobrir para onde cada ponto est\xe1 apontando.  \\n\\nSe a gente come\xe7ar da base, podemos ir calculando a rota\xe7\xe3o global de cada ponto usando a formula:  \\n`Rota\xe7\xe3o global = Rota\xe7\xe3o global do ponto anterior + Rota\xe7\xe3o local`  \\n\\nRota\xe7\xe3o global do ponto 1: `0\xba + 90\xba = 90\xba`  \\nRota\xe7\xe3o global do ponto 2: `90\xba + 0\xba = 90\xba`  \\nRota\xe7\xe3o global do ponto 3: `90\xba + 180\xba = 270\xba`  \\nRota\xe7\xe3o global do ponto 4: `270\xba + 0\xba = 270\xba`  \\nRota\xe7\xe3o global do ponto 5: `270\xba + -90\xba = 180\xba`  \\n\\n\\n:::note\\nIsto tamb\xe9m deixa bem vis\xedvel o como a rota\xe7\xe3o global de um ponto anterior afeta o pr\xf3ximo ponto. Por exemplo:  \\n\\nSomar 90 graus ao ponto 1 faria com que ponto 2 tivesse mais 90 graus...  \\nPonto 2 com 90 graus a mais faria com que ponto 3 tivesse mais 90 graus...  \\nPonto 3 com 90 graus a mais faria com que ponto 4 tivesse mais 90 graus...  \\n:::\\n\\n- Ponto 5\\n    - Rota\xe7\xe3o local: -90\xba\\n    - Rota\xe7\xe3o global: 180\xba\\n- Ponto 4\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: 270\xba\\n- Ponto 3\\n    - Rota\xe7\xe3o local: 180\xba\\n    - Rota\xe7\xe3o global: 270\xba\\n- Ponto 2\\n    - Rota\xe7\xe3o local: 0\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n- Ponto 1\\n    - Rota\xe7\xe3o local: 90\xba\\n    - Rota\xe7\xe3o global: 90\xba\\n\\n## References\\n\\n- [Alan Zucconi Blog](https://www.alanzucconi.com/2017/04/06/forward-kinematics/)\\n- [Milo\u0161 \u010cern\xfd Animation Video](https://www.youtube.com/watch?v=0a9qIj7kwiA)\\n- [Forward Kinematics Wikipedia](https://en.wikipedia.org/wiki/Forward_kinematics)\\n- [Robot Kinematics Wikipedia](https://en.wikipedia.org/wiki/Robot_kinematics)"},{"id":"/2023/11/27/little-and-big-endians","metadata":{"permalink":"/blog/2023/11/27/little-and-big-endians","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-11-27-little-and-big-endians/index.md","source":"@site/blog/2023-11-27-little-and-big-endians/index.md","title":"Little-endian and Big-endian","description":"Defini\xe7\xf5es utilizadas para informar em que ordem os bytes v\xe3o ser escritos na mem\xf3ria.","date":"2023-11-27T00:00:00.000Z","formattedDate":"November 27, 2023","tags":[{"label":"bit","permalink":"/blog/tags/bit"},{"label":"byte","permalink":"/blog/tags/byte"},{"label":"bytes","permalink":"/blog/tags/bytes"},{"label":"bits","permalink":"/blog/tags/bits"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["bit","byte","bytes","bits"]},"unlisted":false,"prevItem":{"title":"Forward Kinematics","permalink":"/blog/2023/12/18/fk"},"nextItem":{"title":"Least vs Most significant bit","permalink":"/blog/2023/11/27/most-and-least-significant-bit"}},"content":"Defini\xe7\xf5es utilizadas para informar em que ordem os bytes v\xe3o ser escritos na mem\xf3ria.  \\n\\nPrimeiro \xe9 preciso lembrar que a mem\xf3ria tem endere\xe7os, existe in\xedcio e final.  \\n\\n| Endere\xe7o da mem\xf3ria |\\n| ------------------- |\\n| 0                   |\\n| 1                   |\\n| 2                   |\\n| 3                   |\\n| 4                   |\\n| 5                   |\\n| 6                   |\\n| 7                   |\\n\\nDado que queremos armazenar o n\xfamero 149, em bin\xe1rio `10010101`, das duas maneiras mais conhecidas de armazenas isto \xe9 little-endian e big-endian.  \\n\\n**Little-endian**: Bit menos significativo primeiro.  \\n**Big-endian**: Bit mais significativo primeiro.  \\n\\n| Endere\xe7o da mem\xf3ria | Little-endian | Big-endian |\\n| ------------------- | ------------- | ---------- |\\n| 0                   | 1             | 1          |\\n| 1                   | 0             | 0          |\\n| 2                   | 1             | 0          |\\n| 3                   | 0             | 1          |\\n| 4                   | 1             | 0          |\\n| 5                   | 0             | 1          |\\n| 6                   | 0             | 0          |\\n| 7                   | 1             | 1          |"},{"id":"/2023/11/27/most-and-least-significant-bit","metadata":{"permalink":"/blog/2023/11/27/most-and-least-significant-bit","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-11-27-most-and-least-significant-bit/index.md","source":"@site/blog/2023-11-27-most-and-least-significant-bit/index.md","title":"Least vs Most significant bit","description":"O bit mais significativo \xe9 o bit que representa a maior valor do n\xfamero.","date":"2023-11-27T00:00:00.000Z","formattedDate":"November 27, 2023","tags":[{"label":"bit","permalink":"/blog/tags/bit"},{"label":"byte","permalink":"/blog/tags/byte"},{"label":"bytes","permalink":"/blog/tags/bytes"},{"label":"bits","permalink":"/blog/tags/bits"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["bit","byte","bytes","bits"]},"unlisted":false,"prevItem":{"title":"Little-endian and Big-endian","permalink":"/blog/2023/11/27/little-and-big-endians"},"nextItem":{"title":"Loading an image is simple","permalink":"/blog/2023/11/09/load-image-simple"}},"content":"O bit mais significativo \xe9 o bit que representa a maior valor do n\xfamero.  \\nO bit menos significativo \xe9 o bit que representa o menor valor do n\xfamero.  \\n\\nO n\xfamero 149 em bin\xe1rio \xe9 `10010101`, cada bit \xe9 respons\xe1vel por representar um n\xfamero.    \\n\\n|  1  |  0  |  0  |  1  |  0  |  1  |  0  |  1  |\\n| --- | --- | --- | --- | --- | --- | --- | --- |\\n| 128 | 64  | 32  | 16  | 8   | 4   | 2   | 1   |\\n\\nN\xf3s sabemos que isto \xe9 equivalente a 149 pois somando o valor de todos os bits que s\xe3o 1 obtemos 149.  \\n\\n128 + 16 + 4 + 1 = 149"},{"id":"/2023/11/09/load-image-simple","metadata":{"permalink":"/blog/2023/11/09/load-image-simple","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-11-09-load-image-simple/index.md","source":"@site/blog/2023-11-09-load-image-simple/index.md","title":"Loading an image is simple","description":"Sprite2D","date":"2023-11-09T00:00:00.000Z","formattedDate":"November 9, 2023","tags":[{"label":"godot","permalink":"/blog/tags/godot"},{"label":"gdscript","permalink":"/blog/tags/gdscript"},{"label":"image","permalink":"/blog/tags/image"},{"label":"texture","permalink":"/blog/tags/texture"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://media.discordapp.net/attachments/807746464833863709/1110163082984034334/discord.png","key":"thiagola92-derp"}],"frontMatter":{"authors":"thiagola92-derp","tags":["godot","gdscript","image","texture"]},"unlisted":false,"prevItem":{"title":"Least vs Most significant bit","permalink":"/blog/2023/11/27/most-and-least-significant-bit"},"nextItem":{"title":"Mondot","permalink":"/blog/2023/10/09/mondot"}},"content":"```gdscript\\nvar sprite := Sprite2D.new()\\nsprite.texture = load(\\"res://image.png\\") as Texture2D\\n```\\n\\n```gdscript\\nvar sprite := Sprite2D.new()\\nvar image := Image.load_from_file(\\"user://image.png\\")\\nsprite.texture = ImageTexture.create_from_image(image) as Texture2D\\n```\\n\\n### Sprite2D\\n\\nSprite2D \xe9 um Node que j\xe1 possui informa\xe7\xf5es do que quer exibir e apenas fica respons\xe1vel por administrar como exibir.  \\n\\nO que ele quer exiber? Texture.\\n\\n### Texture\\n\\nTexture possui a informa\xe7\xe3o daquilo que quer exibir e j\xe1 foi carregado na placa de video.  \\n\\nO que ele quer exibir? Image.\\n\\n### Image\\n\\nImage possui a informa\xe7\xe3o daquilo que quer exibir e j\xe1 foi carregado na mem\xf3ria RAM.\\n\\nO que ele quer exibir? File.\\n\\n### File\\n\\nFile possui os bytes daquilo que quer exibir por\xe9m ainda est\xe1 no HD/SSD.\\n\\n## `load()` vs `load_from_file()`\\n\\n### load()\\n\\nUtilizado para carregar imagens que foram comprimidas e armazenadas juntas ao execut\xe1vel do jogo (as imagens que voc\xea tem que refer\xeanciar com `res://`).  \\n\\nEst\xe1 fun\xe7\xe3o tamb\xe9m mant\xe9m um cache das imagens carregadas, toda chamada ir\xe1 retornar a mesma imagem j\xe1 carregada anteriormente.  \\n\\n### load_from_file()\\n\\nUtilizado para carregar imagens novas, sem pr\xe9vio conhecimento (imagens refer\xeanciadas com `user://` ou que voc\xea possui os bytes em uma vari\xe1vel).  \\n\\nEst\xe1 fun\xe7\xe3o **n\xe3o** mant\xe9m cache, cada imagem gerada por ela ir\xe1 ocupar mais espa\xe7o na mem\xf3ria.  \\n\\n\\n## References\\n\\n- [Sprite2D](https://docs.godotengine.org/en/stable/classes/class_sprite2d.html)\\n    - [Godot code](https://github.com/godotengine/godot/blob/master/scene/2d/sprite_2d.h)\\n- [ImageTexture](https://docs.godotengine.org/en/stable/classes/class_imagetexture.html)\\n    - [Godot code](https://github.com/godotengine/godot/blob/master/scene/resources/image_texture.h)\\n- [Texture2D](https://docs.godotengine.org/en/stable/classes/class_texture2d.html)\\n    - [Godot code](https://github.com/godotengine/godot/blob/master/scene/resources/texture.h)\\n- [Texture](https://docs.godotengine.org/en/stable/classes/class_texture.html)\\n    - [Godot code](https://github.com/godotengine/godot/blob/master/scene/resources/texture.h)\\n- [Image](https://docs.godotengine.org/en/stable/classes/class_image.html)\\n    - [Godot code](https://github.com/godotengine/godot/blob/master/core/io/image.h)\\n- [ImageLoader Godot code](https://github.com/godotengine/godot/blob/master/core/io/image_loader.h)"},{"id":"/2023/10/09/mondot","metadata":{"permalink":"/blog/2023/10/09/mondot","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-10-09-mondot/index.md","source":"@site/blog/2023-10-09-mondot/index.md","title":"Mondot","description":"No post anterior declarei que busquei por um tempo uma interface gr\xe1fica (GUI) para MongoDB por\xe9m n\xe3o fiquei satisfeita com nenhuma.","date":"2023-10-09T00:00:00.000Z","formattedDate":"October 9, 2023","tags":[{"label":"mongo","permalink":"/blog/tags/mongo"},{"label":"mongodb","permalink":"/blog/tags/mongodb"},{"label":"gui","permalink":"/blog/tags/gui"},{"label":"godot","permalink":"/blog/tags/godot"},{"label":"python","permalink":"/blog/tags/python"},{"label":"gdscript","permalink":"/blog/tags/gdscript"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://media.discordapp.net/attachments/807746464833863709/1110163112579047544/itchio.png","key":"thiagola92-happy"}],"frontMatter":{"authors":"thiagola92-happy","tags":["mongo","mongodb","gui","godot","python","gdscript"]},"unlisted":false,"prevItem":{"title":"Loading an image is simple","permalink":"/blog/2023/11/09/load-image-simple"},"nextItem":{"title":"MongoDB GUI","permalink":"/blog/2023/09/22/mongodb-gui"}},"content":"No [post anterior](../2023-09-22-mongodb-gui/index.md) declarei que busquei por um tempo uma interface gr\xe1fica (GUI) para [MongoDB](https://www.mongodb.com/) por\xe9m n\xe3o fiquei satisfeita com nenhuma.  \\n\\nNeste post vou falar do desenvolvimento do [Mondot](https://github.com/thiagola92/Mondot), interface gr\xe1fica para o banco MongoDB.  \\n\\n> Por favor, levar em conta que eu posso tomar decis\xf5es ruins \ud83e\udd23\\n\\n## Reason\\n\\nEm 2021, eu tinha duas coisas em mente:\\n- Nenhuma GUI de Mongo me agrada\\n- Quero aprender [Godot](https://godotengine.org/)\\n\\nBastou essas duas coisas para eu querer come\xe7ar este projeto.  \\nEu n\xe3o queria fazer a melhor GUI do mundo, eu queria me divertir com Godot ao mesmo tempo que resolvia um incomodo que eu tinha com GUIs.  \\n\\n## Start\\n\\nAbri o Godot, comecei a criar containers, janelas, bot\xf5es, etc. Dias depois me veio a pergunta:  \\n\\n> Como diabos eu vou me comunicar com o Mongo?  \\n\\n![Rosto de idiota com o olhar torto para fora](oh_crap.svg)  \\n\\nEu vou pegar o texto que o usu\xe1rio escrever e fazer o que com ele?  \\nPassar para um Node.js?  \\nEu vou ter que instalar Node.js na m\xe1quina da pessoa?  \\nComo eu pego a resposta?  \\nEu conseguiria usar GDNative?  \\nComo que os outros projetos fazem isto?  \\n\\nAgora eu precisava descobrir como faria isto acontecer.  \\n\\n## Cheating\\n\\n![Colando do colega do lado](cheating.svg)  \\n\\n**[Robomongo](https://github.com/Studio3T/robomongo)**! Tamb\xe9m conhecido como **Robo 3T**.  \\nUm projeto open-source que em 2017 foi adquirido pelos criadores do [Studio 3T](https://studio3t.com/).  \\n\\nO que importa \xe9 que eu tenho um projeto para ~~copiar~~ estudar!  \\n\\nRobo 3T possui dois reposit\xf3rios:\\n- robomongo\\n    - Respons\xe1vel pela interface gr\xe1fica\\n- robomongo-shell\\n    - Respons\xe1vel pela intera\xe7\xe3o com o Mongo.\\n\\nImportante notar que o segundo \xe9 um fork do Mongo oficial, justamente pois nele \xe9 incluido um shell interativo para se comunicar com o banco.  \\n\\nIsso faz sentido, j\xe1 que a interface de linha de comando geralmente \xe9 a primeira coisa a ser feita para interagir com bancos. Como mais as pessoas interagiriam com o banco antes de GUI existirem? Poderia ser por c\xf3digo mas seria um baita trabalho cada opera\xe7\xe3o.  \\n\\nEnt\xe3o era isso, tudo que eu tinha que fazer era:\\n1. Incluir o shell do Mongo na minha interface gr\xe1fica\\n2. Utilizar o modo iterativo do shell\\n\\n## Problems\\n\\nEu n\xe3o tinha ideia de como fazer para incluir o shell na interface gr\xe1fica.  \\nDecidi aceitar que passaria como o shell separado para o usu\xe1rio e dei essa parte como dada.  \\n\\nEu que n\xe3o vou reclamar das minhas decis\xf5es idiotas no meu projeto pessoal.  \\n\\n![Shrug face](shrug.svg)\\n\\nAgora tudo que eu tinha que fazer \xe9 chamar o shell pelo Godot.  \\nPara isto eu iria precisar usar o m\xe9todo [`OS.execute()`](https://docs.godotengine.org/en/3.6/classes/class_os.html#class-os-method-execute).  \\n\\n```\\nint execute (\\n    String path,\\n    PoolStringArray arguments,\\n    bool blocking=true,\\n    Array output=[],\\n    bool read_stderr=false,bool open_console=false\\n)\\n```\\n\\nO problema \xe9 que essa fun\xe7\xe3o possui dois comportamentos dependendo se `blocking` for `true` ou `false`, por\xe9m nenhum dos dois era o que eu buscava.  \\n\\n![Outro rosto de idiota com o olhar torto para fora](oh_fuck.svg)  \\n\\n`blocking` -> `true`: Godot vai pausar enquanto a sa\xedda n\xe3o \xe9 escrita em output.  \\n\\nN\xe3o queremos isto pois uma busca pode resultar em milhares de documentos. Queremos retornar mais documentos conforme o usu\xe1rio pedir por mais documentos.  \\n\\n`blocking` -> `false`: Godot vai continuar executando e o comando ir\xe1 rodar em um processo separado. Por\xe9m n\xe3o ser\xe1 poss\xedvel recuperar o output do comando.  \\n\\nN\xf3s queremos receber a sa\xedda aos poucos se estivermos falando de pesquisas que resultam em muitos documentos.  \\n\\nFun\xe7\xe3o do Godot n\xe3o \xe9 interativa, como vou usar o shell interativo?  \\nPosso ler input e output usando algum conhecimento do sistema operacional?  \\nEu vou ter que conhecer bem todos sistemas operacionais?  \\nVou ter que descobrir como Robo 3T linka o shell?  \\n\\n## Solution\\n\\nCriar meu pr\xf3prio shell.  \\n\\n![Shell](shell.svg)  \\n\\nVantagens:\\n- Utilizar a linguagem que mais estou em dia Python\\n    - Em outras palavras: Nenhum tempo perdido por errar algo de uma linguagem que n\xe3o estou acostumado (JavaScript)\\n- Utilizar a mesma linguagem com qual trabalho para fazer queryies\\n- Utilizar o padr\xe3o de comunica\xe7\xe3o que eu quiser\\n    - No pr\xf3ximo t\xf3pico voc\xea vai entender o que eu quero dizer com isto\\n\\nSe estivessemos falando de um produto para diversos usu\xe1rios, definitivamente JavaScript seria a melhor escolha.  \\n\\nPara projeto pessoal com interesse em Godot? Utilizar a linguagem que mais tenho conhecimento no momento.  \\n\\n## Communication\\n\\n![Shell](shell_mondot.svg)  \\n\\nDe todas as maneiras para duas aplica\xe7\xf5es se comunicarem, eu escolhi a mais simples.\\n\\n**Arquivos...** :D  \\n\\nEm vez de quebrar a cabe\xe7a para entender como eu poderia reproduzir a interatividade do shell do Mongo, eu poderia apenas fazer com que ambos escrevessem em arquivos quando quisessem se comunicar um com o outro.  \\n\\nO processo em si \xe9 bem simples:  \\n1. Godot executa o shell, passando a query\\n2. Shell escreve X documentos em um arquivo\\n3. Godot solicita mais documentos\\n\\nNote que voc\xea deve repetir etapa 2 e 3 at\xe9 acabar os documentos ou Godot mandar parar.  \\n\\n### Start\\n\\n![Primeira parte da comunica\xe7\xe3o entre shell e Mondot](shell_mondot_communication_0.svg)  \\n\\n1. Godot escreve o c\xf3digo Python em um arquivo\\n    - `xxxxx` representa o nome do arquivo\\n    - O nome do arquivo \xe9 aleat\xf3rio\\n2. Godot executa o shell passando o caminho para o arquivo como par\xe2metro\\n\\n### Output\\n\\n![Segunda parte da comunica\xe7\xe3o entre shell e Mondot](shell_mondot_communication_1.svg)  \\n\\n- Godot fica periodicamente conferindo se o arquivo de sa\xedda existe\\n    - `xxxxx_out_0` representa o **primeiro** arquivo de sa\xedda\\n        - `xxxxx_out_1` segundo arquivo de sa\xedda\\n        - `xxxxx_out_2` terceiro arquivo de sa\xedda\\n        - etc\\n- Shell escreve no arquivo de sa\xedda um [JSON](https://en.wikipedia.org/wiki/JSON) com o resultado da query\\n    - O resultado de uma query pode ser partido em diversos arquivos\\n        - `xxxxx_out_0`, `xxxxx_out_1`, `xxxxx_out_2`, ...\\n        - Esses arquivos s\xe3o criados conforme o usu\xe1rio solicita mais documentos do resultado\\n\\n### Input\\n\\n![Terceira parte da comunica\xe7\xe3o entre shell e Mondot](shell_mondot_communication_2.svg)  \\n\\n- Godot escreve no arquivo de entrada solicitando mais documentos do resultado da query\\n- Shell fica periodicamente conferindo se tem algo escrito no arquivo de entrada\\n    - `xxxxx_in` representa o arquivo de entrada\\n    - Ele l\xea o arquivo e remove o conte\xfado do arquivo\\n        - Justamente para receber futuras solicita\xe7\xf5es pelo mesmo arquivo\\n\\n## Shell\\n\\nO que o meu shell precisa fazer?\\n\\n- Receber o c\xf3digo do usu\xe1rio\\n- Executar o c\xf3digo do usu\xe1rio\\n- Iterar sobre o resultado do c\xf3digo\\n    - Iterar em partes (pegando X documentos por vez)\\n\\nEm outras palavras, eu preciso acoplar o c\xf3digo do usu\xe1rio ao c\xf3digo do shell.  \\n\\n![C\xf3digo do usu\xe1rio sendo acoplado no meio do c\xf3digo do shell](shell_python_code.svg)  \\n\\nNote que existem opera\xe7\xf5es que meu shell ir\xe1 fazer antes e ap\xf3s a execu\xe7\xe3o do c\xf3digo do usu\xe1rio. Por causa disso, o desenho mostra o c\xf3digo no meio do c\xf3digo shell.  \\n\\nO plano era receber um c\xf3digo simples do usu\xe1rio, parecido com o do shell do Mongo:  \\n\\n```python\\ndb.test.find({})\\n```\\n\\n### Attempt 1\\n\\n[`eval(expression, globals=None, locals=None)`](https://docs.python.org/3/library/functions.html#eval)  \\n\\n**Bom**: A fun\xe7\xe3o faz o parser e avalia a express\xe3o, retornando o resultado dela.  \\n\\n```python\\nresult = eval(\\"\\"\\"\\n    db.test.find({})\\n\\"\\"\\")\\n```  \\n\\n**Ruim**: Precisa ser uma express\xe3o. Uma ou mais declara\xe7\xf5es n\xe3o funcionam.  \\n\\n```python\\n# Error\\nresult = eval(\\"\\"\\"\\n    db.test.find({})\\n    db.test.find({})\\n\\"\\"\\")\\n```\\n\\n### Attempt 2\\n\\n[`exec(object, globals=None, locals=None, /, *, closure=None)`](https://docs.python.org/3/library/functions.html#exec)  \\n\\n**Bom**: Executa m\xfaltiplas declara\xe7\xf5es.  \\n\\n```python\\nexec(\\"\\"\\"\\n    db.test.find({})\\n    db.test.find({})\\n\\"\\"\\")\\n```\\n\\n**Ruim**: Cada declara\xe7\xe3o pode ter ou n\xe3o um resultado, ent\xe3o essa fun\xe7\xe3o n\xe3o retornar nada.  \\n\\n```python\\n# result is None\\nresult = exec(\\"\\"\\"\\n    db.test.find({})\\n    db.test.find({})\\n\\"\\"\\")\\n```\\n\\n### Problem\\n\\nNas tentativas acima, para obter o resultado desejado eu teria que alterar a string. Por\xe9m, isto apresenta grande risco da altera\xe7\xe3o dar erro pois cada caso pode requer uma altera\xe7\xe3o diferente.  \\n\\nNo final eu seria for\xe7ado a ler o c\xf3digo, entende-lo para depois alterar sem grande chance de erros. Mas sabe quem j\xe1 faz isso de ler e entender c\xf3digo? O compilador.  \\n\\n## AST\\n\\n![Desenho de uma \xe1rvore para representar AST](tree.svg)  \\n\\nA compila\xe7\xe3o de uma linguagem envolve diversas etapas. Uma delas envolve gerar uma [\xe1rvore sint\xe1tica abstrata](https://en.wikipedia.org/wiki/Abstract_syntax_tree), uma \xe1rvore que garante que os objetos est\xe3o ligados corretamente.  \\n\\nPodemos usar este conhecimento para compilar parcialmente o c\xf3digo do usu\xe1rio. Por exemplo, o seguinte c\xf3digo:  \\n\\n```python\\nfor x in db.test.find({}):\\n    db.test.update({\\"_id\\": x[\\"_id\\"]}, {\\"code\\": x[\\"code\\"] + 1})\\ndb.test.find({})\\n```\\n\\nGera uma \xe1rvore com a seguinte raiz:  \\n\\n![Simples AST](ast_example.svg)  \\n\\n> Note que eu s\xf3 mostrei o in\xedcio da \xe1rvore pois todo o resto \xe9 irrelevante para n\xf3s.  \\n> N\xe3o vamos alterar nada que esteja a fundo do c\xf3digo do usu\xe1rio, apenas na raiz.  \\n\\nCom esse conhecimento em m\xe3o, podemos finalmente alterar o c\xf3digo do usu\xe1rio!  \\n\\n:::info\\nUtilizei um m\xf3dulo do pr\xf3prio Python chamado [ast](https://docs.python.org/3/library/ast.html#module-ast) para analisar e reestruturar a AST.  \\n:::\\n\\n## Rewriting code\\n\\nVamos criar um c\xf3digo in\xfatil apenas para usar como exemplo:  \\n\\n```python\\n# User code\\ndoc = db.test.find_one({})\\ndb.test.update_one({}, {\\"valid\\": True})\\ndb.test.find({})\\n```\\n\\nA id\xe9ia \xe9 transformar este c\xf3digo em uma fun\xe7\xe3o que o shell poder\xe1 chamar e receber de volta o valor da \xfaltima express\xe3o. Em outras palavras, queremos isto:  \\n\\n```python\\ndef code():\\n    # User code\\n    doc = db.test.find_one({})\\n    db.test.update_one({}, {\\"valid\\": True})\\n    return db.test.find({})\\n```\\n\\nVamos ao passo a passo de como obter isto:\\n\\n1. An\xe1lisar o c\xf3digo do usu\xe1rio com AST\\n2. Inserir o conte\xfado do m\xf3dulo dentro de uma fun\xe7\xe3o pr\xe9 montada\\n3. Encapsular a \xfaltima express\xe3o em um `return`\\n    - Apenas fazer isto se for uma express\xe3o que retorna valor\\n\\nO video seguinte demonstra a transforma\xe7\xe3o que est\xe1 sendo feita de certa forma.  \\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/F2In19FGfxg?si=zNhw4kjCnjwPBRJg\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>  \\n\\n## Conclusion\\n\\nCom isto eu consegui preparar justamente uma interface gr\xe1fica para o Mongo em Godot. Esse foi meu projeto de 2021!  \\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/OlV9N12_UxE?si=bmihRtrP3vznuQo5\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>  \\n\\n---\\n\\nEm 2023 eu decidi dar uma refatorada e criei uma segunda vers\xe3o. Mas toda essa base vista do Mondot ainda \xe9 a mesma!  \\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/laGAwJniaUc?si=rtEg3tyhduiRbFh-\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>  \\n\\n---\\n\\nAgora j\xe1 estou cansado de falar deste projeto hahahaha, foi bom enquanto durou.  \\n\\n## References\\n\\n- [Robomongo adquirido pelo 3T](https://blog.robomongo.org/robomongo-has-been-acquired-by-3t/)  \\n- [Robomongo e integra\xe7\xe3o com shell](https://blog.robomongo.org/mongodb-shell-integration/)  \\n- [robomongo-shell](https://github.com/Studio3T/robomongo-shell)  \\n- [robomongo](https://github.com/Studio3T/robomongo)  \\n- [Mongo](https://github.com/mongodb/mongo)  \\n- [Mongo shell docs](https://www.mongodb.com/docs/v4.4/mongo/)  \\n- [AST](https://en.wikipedia.org/wiki/Abstract_syntax_tree)  \\n- [Python AST](https://docs.python.org/3/library/ast.html)"},{"id":"/2023/09/22/mongodb-gui","metadata":{"permalink":"/blog/2023/09/22/mongodb-gui","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-09-22-mongodb-gui/index.md","source":"@site/blog/2023-09-22-mongodb-gui/index.md","title":"MongoDB GUI","description":"Em 2019 eu comecei a trabalhar em uma startup que usava banco de dados MongoDB.","date":"2023-09-22T00:00:00.000Z","formattedDate":"September 22, 2023","tags":[{"label":"mongo","permalink":"/blog/tags/mongo"},{"label":"mongodb","permalink":"/blog/tags/mongodb"},{"label":"gui","permalink":"/blog/tags/gui"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["mongo","mongodb","gui"]},"unlisted":false,"prevItem":{"title":"Mondot","permalink":"/blog/2023/10/09/mondot"},"nextItem":{"title":"Wang Tiles pt. 2","permalink":"/blog/2023/09/21/wang-tiles-2"}},"content":"Em 2019 eu comecei a trabalhar em uma startup que usava banco de dados [MongoDB](https://www.mongodb.com/).  \\n\\nNa \xe9poca mantermos diversas licen\xe7as da interface gr\xe1fica [Studio 3T](https://studio3t.com/) n\xe3o era uma boa ideia, n\xe3o eramos uma empresa lucrativa e o uso dela por pessoa n\xe3o iria valer a pena.  \\n\\nE por isso comecei a buscar por um interface gr\xe1fica que fosse me satisfazer.  \\n\\n![Pessoa caminhando com uma madeira carregando seus pertences na ponta](./migrate.svg)\\n\\n## Robot 3T\\n\\nUma alternativa considerada foi [Robo 3T/Robomongo](https://robomongo.org/) mas pelo fato dele ter sido adquirido pelo Studio 3T j\xe1 n\xe3o era um bom sinal para mim.  \\n\\n\xc9 muito normal ver empresas grandes comprando concorrentes e depois deixando eles aos poucos sumirem, ent\xe3o meu palpite era que Robot 3T n\xe3o iria receber tantas atualiza\xe7\xf5es e n\xe3o cresceria como ferramenta.  \\n\\n**Hoje em em 2023**: Fazendo 6 anos desde que foi adquirido e uma vers\xe3o de gra\xe7a do Studio 3T foi lan\xe7ada para substituir o Robo 3T que foi descontinuado.  \\n\\n## Mongo-Express\\n\\nUtilizei [mongo-express](https://github.com/mongo-express/mongo-express) por um tempo e satisfazia o m\xednimo que eu precisava mas a interface gr\xe1fica n\xe3o me agradava.  \\n\\n**Hoje em em 2023**:  Parece ter mantido a mesma interface, o que n\xe3o me atrai.  \\n\\n## QueryAssist\\n\\nEm 2020, [QueryAssist](https://twitter.com/QueryAssist) foi a ferramenta que eu decidi utilizar sempre para interagir com o Mongo.  \\n\\nEla possuia uma vers\xe3o gratuita mas voc\xea podia comprar a vers\xe3o vital\xedcia e ganhar mais funcionalidades. A vers\xe3o gratuita era mais que o suficiente para mim e funcionava muito bem.   \\n\\nInfelizmente durou pouco, fui notando a falta de atualiza\xe7\xe3o no blog e nos posts do Twitter. Claramente um sinal que a ferramenta iria desaparecer, por causa disso decidi retornar a minha busca por outra interface gr\xe1fica antes que est\xe1 parece de funcionar sem aviso pr\xe9vio.  \\n\\n**Hoje em em 2023**: Site deles foi desligado e eles n\xe3o tem postagens novas desde 2020.  \\n\\n## MongoDB Compass\\n\\n[MongoDB Compass](https://www.mongodb.com/products/tools/compass) parece estar em constru\xe7\xe3o desde 2015, mas na \xe9poca que eu estava buscando interfaces gr\xe1ficas era como se ele **n\xe3o existisse** para mim. Meu palpite era que n\xe3o estava divulgando j\xe1 que n\xe3o estava pronto para produ\xe7\xe3o \ud83e\udd14.  \\n\\nTudo que posso dizer \xe9 que quando finalmente descobri a exist\xeancia dele, a aus\xeancia de alguma funcionalidade n\xe3o me agradou...  \\n\\n**Hoje em em 2023**: Aposto que hoje em dia j\xe1 devem ter implementado a funcionalidade que eu queria mas n\xe3o estou em dia com as ferramentas do Mongo para saber.  \\n\\n## MongoDB for VS Code\\n\\nQuando [MongoDB for VS Code](https://www.mongodb.com/products/tools/vs-code) lan\xe7ou oficialmente para mim era um sinal que minha busca tinha terminado, pois era uma ferramenta desenvolvida pelos mesmos criadores do MongoDB e que era s\xf3 uma quest\xe3o de tempo at\xe9 implementarem diversas funcionalidades legais.  \\n\\nNesta \xe9poca eu at\xe9 parei o desenvolvimento de uma ferramenta que eu estava construindo.  \\n\\n**Hoje em em 2023**: Parece que a extens\xe3o apenas foi criada para fazer o m\xednimo e n\xe3o deve evoluir muito."},{"id":"/2023/09/21/wang-tiles-2","metadata":{"permalink":"/blog/2023/09/21/wang-tiles-2","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-09-21-wang-tiles-2/index.md","source":"@site/blog/2023-09-21-wang-tiles-2/index.md","title":"Wang Tiles pt. 2","description":"Na primeira parte n\xf3s focamos exclusivamente em tiles que precisavam apenas satisfazer uma rela\xe7\xe3o com os adjacentes. Por\xe9m existe casos onde rela\xe7\xe3o com as diagonais tamb\xe9m \xe9 importante.","date":"2023-09-21T00:00:00.000Z","formattedDate":"September 21, 2023","tags":[{"label":"wang","permalink":"/blog/tags/wang"},{"label":"tiles","permalink":"/blog/tags/tiles"},{"label":"godot","permalink":"/blog/tags/godot"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["wang","tiles","godot"]},"unlisted":false,"prevItem":{"title":"MongoDB GUI","permalink":"/blog/2023/09/22/mongodb-gui"},"nextItem":{"title":"Wang Tiles pt. 1","permalink":"/blog/2023/09/19/wang-tiles"}},"content":"Na [**primeira parte**](../2023-09-19-wang-tiles/index.md) n\xf3s focamos exclusivamente em tiles que precisavam apenas satisfazer uma rela\xe7\xe3o com os adjacentes. Por\xe9m existe casos onde rela\xe7\xe3o com as diagonais tamb\xe9m \xe9 importante.  \\n\\nVamos organizar em 3 tipos:\\n- **Sides** (visto anteriormente)\\n    - O foco era casar a adjacente.\\n- **Corners** (ser\xe1 visto)\\n    - O foco vai ser casar **duas** adjacentes e **uma** diagonal.\\n- **Corners and Sides** (ser\xe1 visto)\\n    - O foco vai ser resolver **corners** e **sides**.\\n\\nA seguinte imagem desmonstra como cada tipo deve casar:  \\n\\n![Compara\xe7\xe3o entre os 3 tipos de tiles](./matching.svg)  \\n\\nTirando isto a l\xf3gica principal de Wang tiles permanece, ou seja, n\xe3o precisamos falar dos mesmos assuntos vistos na primeira parte pois voc\xea s\xf3 precisa adaptar a maneira de casar tiles.  \\n\\nPor\xe9m iremos mostrar para cada um dos tipos:\\n- Todos os possiveis tiles\\n- M\xednimo de tiles considerando rota\xe7\xe3o e reflex\xe3o\\n\\n-----------------------------------\\n\\n## Sides\\n\\n![Todos os possiveis tiles para \\"sides\\"](./sides.svg)  \\n\\n16 tiles  \\n\\n### Minimal  \\n\\n![O m\xednimo tiles para \\"sides\\"](./sides_minimalist.svg)  \\n\\n6 tiles  \\n\\n-----------------------------------\\n\\n## Corners\\n\\n![Todos os possiveis tiles para \\"corners\\"](./corners.svg)  \\n\\n16 tiles  \\n\\n### Minimal  \\n\\n![Todos os possiveis tiles para \\"corners\\"](./corners_minimalist.svg)  \\n\\n6 tiles  \\n\\n-----------------------------------\\n\\n## Corners and Sides\\n\\n:::note\\n\\nClique nas imagens para abrir em outra janela e depois de bastante zoom.  \\nE lembre que para restar o zoom existe o atalho `Ctrl+0`.  \\n\\n:::\\n\\n[![Todos possiveis tiles para \\"corners and sides\\"](./corners_sides.svg)](./corners_sides.svg)  \\n\\n256 tiles  \\n\\n### Minimal  \\n\\n![Todos os possiveis tiles para \\"corners\\"](./corners_sides_minimalist.svg)  \\n\\n51 tiles  \\n\\n-----------------------------------\\n\\n## References\\n\\n- [cr31 website](http://www.cr31.co.uk/stagecast/wang/intro.html)"},{"id":"/2023/09/19/wang-tiles","metadata":{"permalink":"/blog/2023/09/19/wang-tiles","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-09-19-wang-tiles/index.md","source":"@site/blog/2023-09-19-wang-tiles/index.md","title":"Wang Tiles pt. 1","description":"(Wang tiles foi proposto pelo matem\xe1tico Hao Wang em 1961)","date":"2023-09-19T00:00:00.000Z","formattedDate":"September 19, 2023","tags":[{"label":"wang","permalink":"/blog/tags/wang"},{"label":"tiles","permalink":"/blog/tags/tiles"},{"label":"godot","permalink":"/blog/tags/godot"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["wang","tiles","godot"]},"unlisted":false,"prevItem":{"title":"Wang Tiles pt. 2","permalink":"/blog/2023/09/21/wang-tiles-2"},"nextItem":{"title":"Tumblr","permalink":"/blog/2023/09/16/tumblr"}},"content":"(Wang tiles foi proposto pelo matem\xe1tico Hao Wang em 1961)  \\n\\nAssuma que teremos um conjunto de tiles onde cada lado est\xe1 pintado de apenas uma cor. Por exemplo:  \\n\\n![Exemplo de 5 tiles diferentes](./tiles.svg)  \\n\\n1. Cada lado com uma cor.  \\n2. Dois lados com a mesma cor.  \\n3. Todos os lados com a mesma cor.\\n4. Dois lados adjacentes com a mesma cor.\\n5. Varia\xe7\xe3o das cores j\xe1 vistas s\xf3 que em posi\xe7\xf5es diferentes.\\n\\n:::note\\n\\nPor simplicidade mudaremos para duas cores apenas.  \\n\\n:::\\n\\nA ideia \xe9 reutilizar os mesmos tiles quantas vezes quisermos para botar eles lado a lado e formar um plano, por\xe9m com as cores laterais do tiles sempre casando. No exemplo seguinte temos 5 tiles e 2 exemplos de planos formados por eles:  \\n\\n![Exemplo utilizando 5 tiles diferentes para criar 2 combina\xe7\xf5es de plano](./tiles_match.svg)  \\n\\nImportante notar que:\\n- Tiles **n\xe3o** podem se sobrepor.  \\n- Tiles **n\xe3o** podem ser rotacionados ou refletidos.  \\n\\nPois n\xe3o \xe9 poss\xedvel saber se seriam tiles v\xe1lidos sem conhecer a imagem utilizada neles.  \\n\\n## Automation\\n\\nEmbora reutiliza\xe7\xe3o de tiles para gerar diversos planos/mapas n\xe3o seja especial, Wang tiles adiciona a l\xf3gica de relacionar os tiles entre si. Isto nos permite verificar se um tile \xe9 v\xe1lido numa determinada posi\xe7\xe3o.  \\n\\nPor exemplo, possuindo 2 cores e 4 lados, podemos formar 16 (2<sup>4</sup>) tiles diferentes:  \\n\\n![Todas os poss\xedveis tiles com duas cores e quatro lados](./sides.svg)  \\n\\n:::note\\n\\nAdicionamos um quadrado cinza no centro de cada tile.\\n\\n:::\\n\\nBotamos estes tiles na game engine [Godot](https://godotengine.org/) e nela definimos a rela\xe7\xe3o entre os tiles.  \\n\\nAo come\xe7ar a pintar tiles dentro da game engine, podemos ver que ela consegue verificar qual tile \xe9 v\xe1lido naquela posi\xe7\xe3o ou se precisa alterar os vizinhos.  \\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/aWyol4H4Csc?si=JpoIgIEVf9v2dJ45\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>  \\n\\nEm segundos conseguimos construir planos onde os tiles tem uma conex\xe3o entre si.  \\n\\n## Variations\\n\\n\xc9 importante notar que n\xe3o h\xe1 problema criar varia\xe7\xf5es do mesmo tile. Por exemplo:  \\n\\n![Mesmos 16 por\xe9m com a adi\xe7\xe3o de 3 tiles com todos os lados verdes](./sides_with_trees.svg)  \\n\\nNo momento de preencher por um tile v\xe1lido naquela posi\xe7\xe3o, a ferramenta iria ter que escolher entre 4 tiles diferentes. Algumas ferramentas como Godot escolheram aleatoriamente:  \\n\\nAntes  \\n![Exemplo de plano criado utilizando os 16 tiles](./plane00.png)  \\n\\nDepois  \\n![Exemplo 3 de plano criado utilizando os tiles, por\xe9m com \xe1rvores](./plane01.png)  \\n\\n## Rotation & Reflection\\n\\nNa proposta de Wang n\xe3o se pode rotacionar e refletir tiles pois n\xe3o existe garantia que a imagem continuar\xe1 fazendo sentido ap\xf3s rotacionada ou refletida.  \\n\\nPor\xe9m como criador dos tiles, somos capazes de deduzir est\xe1 informa\xe7\xe3o e apenas fazer os tiles necess\xe1rios. Vamos pegar este conjunto de tiles:  \\n\\n![Todas os poss\xedveis tiles com duas cores e quatro lados](./sides.svg)  \\n\\nAlguns destes tiles s\xe3o varia\xe7\xf5es dos anteriores por\xe9m rotacionados ou refletidos. Levando isto em conta, podemos minimizar para 6 tiles apenas:  \\n\\n![Seis tiles que conseguem representar os mesmo tiles acima](./sides_minimalist.svg)  \\n\\n\xc9 importante notar que s\xf3 \xe9 poss\xedvel se conhecermos a imagem. Botando a mesma \xe1rvore utilizada anteriormente em um dos tiles, podemos ver o tile perder o sentido quando rotacionado mas n\xe3o quando refletido:  \\n\\n![\xc1rvore adicionada a um tile e suas varia\xe7\xf5es de rota\xe7\xe3o e reflex\xe3o](./tile_with_tree.svg)  \\n\\n## Example\\n\\nTodos nossos tiles tem sido com cores, por\xe9m as cores apenas servem para representar a rela\xe7\xe3o entre os tiles.  \\n\\nPara deixar isto claro, vamos substituir o desenho dos tiles por desenhos que melhor representem um labirinto. Vamos trocar **azul por arbustos** e **verde por terra**:  \\n\\n![Compara\xe7\xe3o do tiles bases com tiles do labirinto](./maze_tiles.svg)  \\n\\nUtilizando estes tiles com suas rota\xe7\xf5es/relex\xf5es, podemos criar em segundos o nosso labirinto:  \\n\\n![Tiles do labirinto](./maze.png)  \\n\\n:::note\\n\\nEste labirinto est\xe1 com cara de circuitos da placa m\xe3e. \ud83e\udd14\\n\\n:::\\n\\n## References\\n\\n- [cr31 website](http://www.cr31.co.uk/stagecast/wang/intro.html)  \\n- [Wikipedia](https://en.wikipedia.org/wiki/Wang_tile)"},{"id":"/2023/09/16/tumblr","metadata":{"permalink":"/blog/2023/09/16/tumblr","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-09-16-tumblr/index.md","source":"@site/blog/2023-09-16-tumblr/index.md","title":"Tumblr","description":"Estou experimentando alternativas j\xe1 que o Tumblr me deixou puto.","date":"2023-09-16T00:00:00.000Z","formattedDate":"September 16, 2023","tags":[{"label":"tumblr","permalink":"/blog/tags/tumblr"},{"label":"website","permalink":"/blog/tags/website"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://media.discordapp.net/attachments/807746464833863709/1110163211476533258/twitter.png","key":"thiagola92-angry"}],"frontMatter":{"authors":"thiagola92-angry","tags":["tumblr","website"]},"unlisted":false,"prevItem":{"title":"Wang Tiles pt. 1","permalink":"/blog/2023/09/19/wang-tiles"},"nextItem":{"title":"Sieve","permalink":"/blog/2023/05/12/sieve"}},"content":"Estou experimentando alternativas j\xe1 que o Tumblr me deixou puto.  \\nE a pior parte \xe9 que foram funcionalidades importantes para um site de blogs!  \\n\\n## Text Editor\\n\\n![Imagem ilustrativa. Uma caneta escrevendo num papel, no papel tem diversas linhas e uma delas \xe9 um video \ud83e\udd23](./text_editor.svg)\\n\\nPrimeiro preciso falar dos 3 editores de texto que o Tumblr fornece:\\n- Rich Text (default)\\n    - **Positivo**: Os criadores do site gastaram tempo planejando como melhor te passar a habilidade de escrever texto em negrito/it\xe1lico ou como inserir links/imagens/videos.  \\n    - **Negativo**: N\xe3o existe garantia que possa mover seu texto para outros blogs sem perder qualidade, as chances de estar preso ao Tumblr s\xe3o altas.  \\n- HTML\\n    - **Positivo**: Todos os websites s\xe3o feitos utilizando HTML, ent\xe3o o \xfanico limite do que se pode fazer \xe9 o quanto o Tumblr limitou de utiliza\xe7\xe3o.  \\n    - **Negativo**: N\xe3o \xe9 pr\xe1tico de escrever ou alterar sem ajuda de editores de texto modernos.  \\n- Markdown\\n    - **Positivo**: Criada para provid\xeanciar formata\xe7\xe3o ao texto sem dificultar a legibilidade. Por baixo dos panos faz uma convers\xe3o para HTML, ent\xe3o tamb\xe9m \xe9 normal ver essa linguagem aceitar funcionalidade do HTML.  \\n    - **Negativo**: Relativamente limitado de como se pode formatar seu texto.  \\n\\nNa minha cabe\xe7a HTML e Markdown parecem existir apenas para enfeitar, eles n\xe3o parecem dar suporte para nada que n\xe3o seja poss\xedvel no Rich Text. Funcionalidades simples como a linha horizontal n\xe3o s\xe3o implementadas e apenas recebemos o aviso:\\n\\n> Contents contains unsupported HTML, the post may not be what you expected.  \\n\\n> Contents contains unsupported Markdown, the post may not be what you expected.  \\n\\nEu entendo filtrar funcionalidades do HTML \xe9 aceit\xe1vel pois poderia ser perigoso permitir tudo. Por\xe9m filtrar funcionalidade do Markdown n\xe3o faz sentido j\xe1 que a linguagem j\xe1 foi feita para ser bem limitada e n\xe3o oferecer nenhum risco (estou considerando Markdown sem HTML).  \\n\\nNo final ambos acabam sendo uma vers\xe3o mais limitada que o pr\xf3prio Rich Text. Se tentarmos ser otimistas, podemos dizer que agora podemos exportar para HTML/Markdown e levar para outros sites.  \\n\\nAgora vamos ver os pr\xf3ximos detalhes que me incomodaram, tipo o fato do Tumblr gostar de alterar o seu texto...\\n\\n## Switching Text Editors\\n\\n![Setas apontando para os 3 tipos de formatos permitidos, sinalizando que est\xe1 indo de um para o outro](./switch.svg)\\n\\nPrimeiro vamos deixar claro que \xe9 um bom senso na vida **n\xe3o** alterar algo que voc\xea v\xe1 precisar da vers\xe3o original mais tarde. E no caso do Tumblr eu n\xe3o tenho certeza de qual formato \xe9 o original entre Rich Text, HTML e Markdown (eu apostaria no Rich Text por ser o formato padr\xe3o).  \\n\\nO problema que me deparei foi que ao trocar de editor de texto, nem todas as funcionalidades dos editores de texto s\xe3o conversiveis entre eles, e n\xe3o parece ter uma regra do que vai acontecer com a funcionalidade quando voc\xea trocar. Exemplos:  \\n\\n- **Rich text to HTML/Markdown**\\n    - A funcionalidade \\"read more\\" vai ser **removido**.  \\n- **Rich text to Markdown**\\n    - Texto em Lucille vai ficar **invis\xedvel durante a edi\xe7\xe3o** por\xe9m ainda vai estar presente quando publicado.\\n\\nSe voc\xea decidir voltar para o editor de texto anterior, voc\xea pode ter perdido algo da formata\xe7\xe3o ou pode ter se mantido.  \\n\\n## Preview\\n\\n![Imagem ilustrativa do post entregando como \u2b50 e saindo como \ud83d\udca9](./preview_breaking.svg)\\n\\nNormalmente visualiza\xe7\xe3o pr\xe9via seria apenas para demonstrar como o seu trabalho ir\xe1 ficar quando finalizado, sem alterar em nada o escrito...  \\n\\nPor algum motivo Tumblr decide alterar o seu trabalho durante a prepara\xe7\xe3o da visualiza\xe7\xe3o, ou seja, grande chance de alterarem seu HTML ou Markdown. Nestes casos diga adeus a qualquer organiza\xe7\xe3o que tivesse sido usada, pois agora ter\xe1 que lidar com o c\xf3digo da maneira que o Tumblr deixou.  \\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/uQBsBePphYI\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>  \\n\\n## Hide Request Referer\\n\\n![Pessoa se escondendo atr\xe1s de um muro](./hidding.svg)  \\n\\nQuando voc\xea clica em um link de um site, o seu navegador ir\xe1 fazer a requisi\xe7\xe3o do conte\xfado daquele link para depois exibir ele na sua tela. Neste caso \xe9 normal enviar para o link que voc\xea clicou de onde voc\xea est\xe1 vindo, para que o site que vai te enviar o conte\xfado saber de onde est\xe1 vindo o tr\xe1fico.  \\n\\nTumblr obrigatoriamente altera todos seus links que levem a sites exteriores, justamente para que consiga esconder este tipo de informa\xe7\xe3o. Por exemplo:  \\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/ullzdbGvQp8?si=oPAob5XZzFmYSX9T\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>  \\n\\nExistem casos que voc\xea realmente n\xe3o quer que o outro site saiba de onde est\xe1 vindo o tr\xe1fico. Mas eu imagino que exista casos onde voc\xea quer que o outro lado saiba que voc\xea est\xe1 levando tr\xe1fico a eles.  \\n\\n![Minha configura\xe7\xe3o de privacidade no tumblr](./settings.png)  \\n\\nNote como ambos \\"Hide thiagola92 from people without an account\\" e \\"Discourage searching of thiagola92\\" est\xe3o desligados mas mesmo assim eu recebo aquela prote\xe7\xe3o de privacidade.  \\n\\n## Undo?\\n\\n![Pessoa confusa](./confuse.svg)  \\n\\nAviso logo que eu n\xe3o consegui reproduzir esse problema que eu tive um dia qualquer, mas basicamente quando eu apertei `Ctrl+z` o post desfez tudo at\xe9 a minha \xfaltima inser\xe7\xe3o de imagem.  \\n\\nComo n\xe3o conseguir reproduzir, pode ter sido um bug do dia...\\n\\n## Conclusion\\n\\n![Pessoa surpresa](./surprised.svg)  \\n\\nNo final das contas, todas essas chatisses me levaram a experimentar outras maneiras de compartilhar conte\xfado. Ainda n\xe3o estou completamente feliz mas est\xe1 me satisfazendo.  \\n\\n**Observa\xe7\xe3o**: Recentemente eu descobri que Tumblr tinha sido comprado pela mesma empresa do [Wordpress](https://en.wikipedia.org/wiki/WordPress.com) ent\xe3o isso deve explicar o pouco carinho que o website tem recebido em quest\xe3o de funcionalidade."},{"id":"/2023/05/12/sieve","metadata":{"permalink":"/blog/2023/05/12/sieve","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-05-12-sieve/index.md","source":"@site/blog/2023-05-12-sieve/index.md","title":"Sieve","description":"Enquanto estava explorando as aplica\xe7\xf5es do Murena Cloud acabei parando para olhar o servi\xe7o de email deles. Nisso acabei descobrindo que eles utilizam a linguagem de programa\xe7\xe3o Sieve para filtro de email.","date":"2023-05-12T00:00:00.000Z","formattedDate":"May 12, 2023","tags":[{"label":"sieve","permalink":"/blog/tags/sieve"},{"label":"programming language","permalink":"/blog/tags/programming-language"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["sieve","programming language"]},"unlisted":false,"prevItem":{"title":"Tumblr","permalink":"/blog/2023/09/16/tumblr"},"nextItem":{"title":"SVG","permalink":"/blog/2023/04/18/svg"}},"content":"Enquanto estava explorando as aplica\xe7\xf5es do [Murena Cloud](https://murena.com/) acabei parando para olhar o servi\xe7o de email deles. Nisso acabei descobrindo que eles utilizam a linguagem de programa\xe7\xe3o [Sieve](http://sieve.info/) para filtro de email.  \\n\\nO que me deixou a desejar que [Gmail](https://en.wikipedia.org/wiki/Gmail) usasse pois deixaria f\xe1cil de automatizar algumas tarefas. Al\xe9m disso seria interessante os servidores de email usarem a mesma linguagem para filtros de email.  \\n\\nInfelizmente a linguagem parece pouco popular e n\xe3o acho que v\xe1 ficar tanto tempo viva... Mas me chamou tanta aten\xe7\xe3o que tentei fazer um [pull request](https://github.com/adambard/learnxinyminutes-docs/pull/4661) para adicionar ela no [Learn X in Y minutes](https://learnxinyminutes.com/)."},{"id":"/2023/04/18/svg","metadata":{"permalink":"/blog/2023/04/18/svg","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-04-18-svg/index.md","source":"@site/blog/2023-04-18-svg/index.md","title":"SVG","description":"Eu tenho explorado maneiras de fazer gr\xe1fico para o meu jogo.","date":"2023-04-18T00:00:00.000Z","formattedDate":"April 18, 2023","tags":[{"label":"svg","permalink":"/blog/tags/svg"},{"label":"inkscape","permalink":"/blog/tags/inkscape"},{"label":"aseprite","permalink":"/blog/tags/aseprite"},{"label":"art","permalink":"/blog/tags/art"},{"label":"2d","permalink":"/blog/tags/2-d"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["svg","inkscape","aseprite","art","2d"]},"unlisted":false,"prevItem":{"title":"Sieve","permalink":"/blog/2023/05/12/sieve"},"nextItem":{"title":"GDScript RefCounted","permalink":"/blog/godot-refcounted"}},"content":"Eu tenho explorado maneiras de fazer gr\xe1fico para o meu jogo.  \\n\\n## Pixel art\\n\\nMeu plano sempre foi fazer algo simples, e originalmente a ideia seria pixel art com [Aseprite](https://www.aseprite.org/), por\xe9m com o tempo eu percebi que mesmo coisas \\"simples\\" em pixel art me dariam trabalho \ud83d\ude06.  \\n\\nInfelizmente eu n\xe3o lembro dos problemas que tive durante a utiliza\xe7\xe3o mas acredito que seja pelo fato de eu n\xe3o conhecer boas pr\xe1ticas de arte para jogos em geral (e eu n\xe3o tinha planos de me aventurar em detalhes sobre assunto).  \\n\\nEu n\xe3o queria entender como fazer para a arte n\xe3o perde qualidade depois de alterar a escala, ou como a fazer anima\xe7\xf5es boas, ... O foco para mim sempre foi aprender a utilizar bem [Godot](https://godotengine.org/).  \\n\\n## SVG\\n\\nO interesse come\xe7ou pelo fato de SVG conseguir escalar para diversos tamanhos sem perda de qualidade. Isto quer dizer que eu poderia fazer em um tamanho pequeno e escalar no jogo sem que ficasse esquisito.  \\n\\nIsso pode ser f\xe1cilmente demonstrado alterando duas propriedades da imagem SVG, que por sua vez \xe9 algo simples de fazer (abrir a imagem com um editor de texto e alterar).  \\n\\n![Pessoa dentro de uma aura circular que se expande verticalmente](./example01.svg)\\n![Pessoa em p\xe9 com os bra\xe7os semi levantados e pernas abertas](./example02.svg)\\n![Aura circular que se expande verticalmente](./example03.svg)  \\n\\nEstas 3 imagems possuem 16 pixel para `width` e `height`.  \\n\\n```svg\\n<svg\\n   width=\\"16\\"\\n   height=\\"16\\"\\n   ...\\n></svg>\\n```\\n\\nAgora alterando elas para respectivamente 64, 128 e 256:  \\n\\n![Pessoa dentro de uma aura circular que se expande verticalmente](./example01_big.svg)\\n![Pessoa em p\xe9 com os bra\xe7os semi levantados e pernas abertas](./example02_big.svg)\\n![Aura circular que se expande verticalmente](./example03_big.svg)  \\n\\nZero perda de qualidade e tudo que eu fiz foi alterar a propriedades dentro da imagem.  \\n\\n```svg title=\\"\xdaltima imagem\\"\\n<svg\\n   width=\\"256\\"\\n   height=\\"256\\"\\n   ...\\n></svg>\\n```\\n\\n## Aseprite\\n\\nAseprite exporta para SVG de uma maneira bem prec\xe1ria. Cada pixel \xe9 transformado em um quadrado, cada quadrado \xe9 uma linha do tipo:  \\n\\n```svg\\n<rect x=\\"1\\" y=\\"1\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n```\\n\\nPara representar um ret\xe2ngulo de 10 pixels, ele iria fazer 10 quadrados um no lado do outro.\\n\\nO que \xe9 horr\xedvel quando voc\xea entende que a qualidade do SVG vem pelo fato de voc\xea conseguir representar uma forma geom\xe9trica com uma tag apenas.  \\n\\n```svg title=\\"Aseprite\\"\\n<rect x=\\"1\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"2\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"3\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"4\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"5\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"6\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"7\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"8\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"9\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"10\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n```\\n\\n```svg title=\\"Escrito a m\xe3o\\"\\n<rect x=\\"1\\" y=\\"5\\" width=\\"10\\" height=\\"1\\" fill=\\"#000000\\" />\\n```\\n\\nOs dois geram a mesma imagem por\xe9m o do Aseprite utiliza muitos mais bytes que o outro.\\n\\n## Inkscape\\n\\nEu tive muita avers\xe3o ao [Inkscape](https://inkscape.org/) no in\xedcio e passei um bom tempo procurando por ferramenta alternativa. N\xe3o que Inkscape seja uma ferramenta ruim, mas ao me ver \xe9 ferramenta avan\xe7ada que a muito tempo se tornou visualmente inst\xe1vel.  \\n\\nO visual de uma ferramenta precisa ser flex\xedvel a ponto de aprender o como certas features n\xe3o est\xe3o sendo bem entregues a novos usu\xe1rios.  \\n\\nComo ferramenta, seu objetivo \xe9 ajudar o usu\xe1rio a alcan\xe7ar o seu objetivo com o m\xednimo de esfor\xe7o. Isto inclui o usu\xe1rio n\xe3o ter que buscar tutoriais ou videos na internet para utilizar a ferramenta.  \\n\\n## Conclusion\\n\\nMuitas altern\xe1tivas ainda estavam incompletas ou eram utilizadas de maneiras que eu n\xe3o gostaria (era uma ferramenta web).  \\n\\nEu optei por utilizar Inkscape mesmo por ser a ferramenta mais completa dispon\xedvel e de **gra\xe7a**."},{"id":"godot-refcounted","metadata":{"permalink":"/blog/godot-refcounted","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-02-18-gdscript-refcounted/index.md","source":"@site/blog/2023-02-18-gdscript-refcounted/index.md","title":"GDScript RefCounted","description":"Eu passei um dia inteiro curioso para saber o como funcionava contagem por refer\xeancia no GDScript (n\xe3o o conceito mas sim os detalhes tecnicos). Triste por ver que a documenta\xe7\xe3o n\xe3o conseguiu tirar as d\xfavidas que eu tinha e at\xe9 pensei que s\xf3 saberia mais testando ou olhando o c\xf3digo em C++.","date":"2023-02-18T00:00:00.000Z","formattedDate":"February 18, 2023","tags":[{"label":"godot","permalink":"/blog/tags/godot"},{"label":"gdscript","permalink":"/blog/tags/gdscript"},{"label":"refcounted","permalink":"/blog/tags/refcounted"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"slug":"godot-refcounted","title":"GDScript RefCounted","authors":"thiagola92-calm","tags":["godot","gdscript","refcounted"]},"unlisted":false,"prevItem":{"title":"SVG","permalink":"/blog/2023/04/18/svg"},"nextItem":{"title":"GDScript Array","permalink":"/blog/2023/02/16/gdscript-array"}},"content":"Eu passei um dia inteiro curioso para saber o como funcionava contagem por refer\xeancia no GDScript (n\xe3o o conceito mas sim os detalhes tecnicos). Triste por ver que a documenta\xe7\xe3o n\xe3o conseguiu tirar as d\xfavidas que eu tinha e at\xe9 pensei que s\xf3 saberia mais testando ou olhando o c\xf3digo em C++.\\n\\nAt\xe9 que por acaso esbarrei em um coment\xe1rio de um video que simplesmente explica **muito** bem.\\n\\n\\n> I\'ve been following along in the course, but this particular video contains a lot of misinformation about Godot\'s internals. I\'ll clarify below:\\n> \\n> All variables defined in Godot\'s scripting API are wrapped in an object called a Variant. Each Variant is capable of storing different data types (int, string, bool, Object, Array, Dictionary, Color, Transform, etc.). You can see a list of the supported types `TYPE_*` enum values in the @GlobalScope class API documentation. This Variant class is why GDScript is able to change variable data types dynamically. Internally, every variable is a Variant. When you specify that a variable is typed and can only contain a single type, it is the GDScript language implementation, not Godot Engine, that blocks the type change.\\n> \\n> Now, if a Variant B is assigned to another Variant A, then MOST of the time, the B\'s value is \\"copied by value\\", meaning that the direct value is copied from B to A. There is no reference counting of any kind. They are primitive values. In fact, reference counting primitive values is generally a waste of time and less performant than just copying them directly. This is because, for reference counting, you have to pass around a memory address in order to refer to the variable (because there is only one instance of the variable), and then getting the variable involves looking up the memory address. But for primitive numeric values such as int, float, or bool, passing the direct value takes just as much memory (less than 64 bits or 8 bytes) as passing a memory address. And if you pass a direct value, then the other Variant doesn\'t have to look up the value in the first place; they already have it.\\n> \\n> There are only three data types in Godot 3.2.x and prior that \\"copy by reference\\", i.e. pass a memory address when assigning to a new variable: Object, Array, and Dictionary. EVERYTHING else will copy by value. In Godot 4.0 and beyond, the various Pool*Array classes, such as PoolIntArray, PoolStringArray, etc., will also be updated to copy by reference. With \\"copy by reference\\" data types, if you create one of those values and assign it to two variables, then modifying either one of the variables\' values will modify both variables\' values, since they both refer to the same memory address.\\n> \\n> ```\\n> var x = [1, 2, 3]\\n> var y = x\\n> x.push_back(4) # y is now also [1,2,3,4]\\n> ```\\n> \\n> As for reference counting, that is ONLY supported in Object classes that extend the Reference class. The top of the class hierarchy looks a bit like this...\\n> \\n> - Object  \\n>   - Node  \\n>     - CanvasItem  \\n>       - Node2D  \\n>       - Control  \\n>     - Spatial  \\n>   - Reference  \\n>     - Resource  \\n> \\n> So, Object has only direct new/free methods for allocating and deleting memory. Node and its subtypes can allocate memory, but 1) they can `.free()` immediately just like Objects or `.queue_free()` to schedule their deletion till the next frame (where you can more safely delete a large group of nodes at once), and 2) if you delete a Node, it also deletes all of that Node\'s children, so an entire tree of nodes can be deleted just by deleting the root node of that tree. With Reference, you never delete it directly. It just auto-deletes when you stop having any references to it due to the fact that it actually DOES do reference-counting.\\n> \\n> ```\\n> var ref = Reference.new()\\n> ref = null # the Reference object has now been freed\\n> ```\\n> \\n> Resources behave just like References, except in their case, they can track their reference by their filepath as well. That is, if you do `load(\\"res://my_file.gd\\")`, then you may end up loading a cached instance rather than allocating an entirely new object. If the engine\'s internal ResourceCache finds that the resource has already been loaded, then the `load()` function will just return the memory address of the existing object rather than creating a new one.\\n> \\n> Also note that the practice of creating an object pool for nodes and the like can be useful, but for different reasons than in other engines. This topic is quite advanced for people who may be learning programming for the first time, but: in stuff like C# (Unity), memory is \\"garbage collected\\", i.e. the program tracks memory for you and auto-deletes it on your behalf. This can lead to random pauses in a game if the garbage collector suddenly starts up and interrupts gameplay to clean up memory. Object pooling, i.e. creating a group of objects and then just cycling through them rather than deleting and creating constantly, was a strategy to re-use existing memory for objects so as to stop the garbage collector from needing to run in the first place. But Godot does memory allocation manually and in small increments. It is designed in such a way that constantly creating and deleting objects doesn\'t lead to long-term memory fragmentation, i.e. it doesn\'t mess up your computer. You can read about this in the \\"development\\" section of the official documentation. Anyway, object pooling IS useful if, for performance reasons, you don\'t want to waste TIME deleting and creating large objects, but you won\'t need to worry about stuttering or memory issues, so most of the time, it\'s perfectly fine in Godot to just create and delete objects as you need them.\\n\\n*Algumas adapta\xe7\xf5es foram feitas para melhorar aleitura (adicionar nova linha, transformar em bullet points, etc) mas nenhuma altera\xe7\xe3o em palavras ou frases foram feitas.\\n\\n## Reference\\n\\n- [Video com o coment\xe1rio](https://www.youtube.com/watch?v=9LaB6wbZepg)  \\n- [A pessoa do coment\xe1rio tem um canal que fala bem sobre Godot](https://www.youtube.com/channel/UC7uU5XaPB9uYKlowYOhEHnA)"},{"id":"/2023/02/16/gdscript-array","metadata":{"permalink":"/blog/2023/02/16/gdscript-array","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-02-16-gdscript-array/index.md","source":"@site/blog/2023-02-16-gdscript-array/index.md","title":"GDScript Array","description":"Em vez de focar no que eu deveria para fazer um jogo, eu me distrai tentando ganhar desempenho onde n\xe3o precisava...","date":"2023-02-16T00:00:00.000Z","formattedDate":"February 16, 2023","tags":[{"label":"godot","permalink":"/blog/tags/godot"},{"label":"gdscript","permalink":"/blog/tags/gdscript"},{"label":"array","permalink":"/blog/tags/array"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://media.discordapp.net/attachments/807746464833863709/1110163082984034334/discord.png","key":"thiagola92-derp"}],"frontMatter":{"authors":"thiagola92-derp","tags":["godot","gdscript","array"]},"unlisted":false,"prevItem":{"title":"GDScript RefCounted","permalink":"/blog/godot-refcounted"},"nextItem":{"title":"Git Book","permalink":"/blog/2023/02/08/git-book"}},"content":"Em vez de focar no que eu deveria para fazer um jogo, eu me distrai tentando ganhar desempenho onde n\xe3o precisava...\\n\\n------\\n\\nEu pretendia ter um Array de [buffs](https://en.wikipedia.org/wiki/Status_effect) e a ideia era verificar se cada um dos buffs j\xe1 expirou para remover quando eles acabassem. Primeira coisa que pensei foi em percorrer ele e ir removendo um a um os que expiraram.\\n\\nConforme fui olhando a documenta\xe7\xe3o de [Array](https://docs.godotengine.org/en/stable/classes/class_array.html) percebi um desafio que me chamou aten\xe7\xe3o... Remo\xe7\xe3o pode ser custoso:\\n\\n```gdscript\\nvoid\xa0erase\xa0(Variant\xa0value)\\n```\\n\\n> Note: On large arrays, this method will be slower if the removed element is close to the beginning of the array (index 0). This is because all elements placed after the removed element have to be reindexed.\\n\\n```gdscript\\nvoid\xa0remove\xa0(int\xa0position)\\n```\\n\\n> Note: On large arrays, this method will be slower if the removed element is close to the beginning of the array (index 0). This is because all elements placed after the removed element have to be reindexed.\\n\\n```gdscript\\nVariant\xa0pop_front()\\n```\\n\\n> Note: On large arrays, this method is much slower than pop_back as it will reindex all the array\'s elements every time it\'s called. The larger the array, the slower pop_front will be.\\n\\nPrimeiro fiz o c\xf3digo mais simples para isto, juntar todos que expiraram e depois remove-los um a um:\\n\\n```gdscript\\nvar expired: Array[Buff] = []\\n\\nfor buff in _buffs:\\n    if buff.timeout():\\n        expired.append(buff)\\n\\nfor buff in expired:\\n    _buffs.erase(buff)\\n```\\n\\nPensei nisto porque sei que n\xe3o posso remover elementos do Array enquanto o percorro, isso iria causar uma bagun\xe7a durante o processo (pode fazer com que voc\xea pule elementos enquanto percorre e reindexia).\\n\\nMas o que eu aprendi em uma aula da faculdade \xe9 que posso evitar este problema se eu percorrer o Array de tr\xe1s para frente (apenas use isso se voc\xea n\xe3o liga para a ordem em que os elementos v\xe3o ser removidos).\\n\\n```gdscript\\nfor in in range(_buffs.size() -1, -1, -1):\\n    if _buffs[i].timeout():\\n        _buffs.erase(_buffs[i])\\n```\\n\\nBem mais r\xe1pido que a vers\xe3o anterior e o Godot ainda consegue me sugerir os m\xe9todos a serem usados de cada elementos (pois eu usei tipagem no Array).\\n\\nN\xe3o satisfeito com o fato que reindexar tem um custo grande, resolvi fazer mais uma tentativa:\\n\\n```gdscript\\nvar up_to_date: Array[Buff] = []\\n\\nfor buff in _buffs:\\n    if not buff.timeout():\\n        up_to_date.append(buff)\\n\\n_buffs = up_to_date\\n```\\n\\nEm vez de me preocupar em remover, apenas anoto os buffs bons para depois sobreescrever o Array.  \\n\\nLado positivo: `append()` \xe9 bem mais barato que `erase()` pois n\xe3o precisa reindexar.  \\n\\nCada uma dessas maneira melhorou para quando eu precisava remover **MUITOS** elementos de um Array **MUITO** grande.  \\n\\nPor exemplo, no caso de um Array com 5k ok e 5k precisando ser removidos a diferen\xe7a foi de 648117\xb5s para 2286\xb5s (at\xe9 eu estou me perguntando se eu medi corretamente isto pq isso seria um aumento de 28.000%?)  \\n\\nVoltando para a realidade... Isto n\xe3o \xe9 um caso normal e as chances disso acontecer em um jogo \xe9 quase imposs\xedvel (at\xe9 para MMORPG 5k buffs \xe9 muito).  \\n\\nPelo lado positivo est\xe1 fun\xe7\xe3o n\xe3o \xe9 custosa, mesmo nos casos pequenos ela chega a ter o custo de 0~100% a mais que anterior.\\n\\n## Note\\n\\nDepois de tudo isso eu pensei... eu n\xe3o deveria estar dando `queue_free()` nestes meus Nodes? \ud83e\udd14\\n\\nN\xe3o era mais f\xe1cil deixar que os Nodes dessem `queue_free()` neles mesmo quando dessem timeout? \ud83e\udd14"},{"id":"/2023/02/08/git-book","metadata":{"permalink":"/blog/2023/02/08/git-book","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-02-08-git-book/index.md","source":"@site/blog/2023-02-08-git-book/index.md","title":"Git Book","description":"Tirei essa semana para ler alguns capitulos do livro Pro Git.","date":"2023-02-08T00:00:00.000Z","formattedDate":"February 8, 2023","tags":[{"label":"git","permalink":"/blog/tags/git"},{"label":"documentation","permalink":"/blog/tags/documentation"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["git","documentation"]},"unlisted":false,"prevItem":{"title":"GDScript Array","permalink":"/blog/2023/02/16/gdscript-array"}},"content":"Tirei essa semana para ler alguns capitulos do livro [Pro Git](https://git-scm.com/book/en/v2).  \\n\\nEu uso [Git](https://en.wikipedia.org/wiki/Git) a anos e entendo boa parte dos comandos principais que se precisa no dia a dia... Mas \xe9 sempre bom uma leitura sobre o assunto bem organizado/explicado.  \\n\\nMeu foco foi em capitulos que pudessem introduzir conhecimento novo ou fortalecer conhecimento pr\xe9vio:  \\n[Getting Started](https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control)  \\n[Git Basics](https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository)  \\n[Git Branching](https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell)  \\n\\nDois capitulos possuem partes que me interessam e ainda estou para olhar:  \\n[Git Tools](https://git-scm.com/book/en/v2/Git-Tools-Revision-Selection)  \\n[Customizing Git](https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration)  \\n\\nDito isto, n\xe3o devo terminar de ler o livro pois alguns capitulos s\xe3o bem espec\xedficos:  \\n[Git on the Server](https://git-scm.com/book/en/v2/Git-on-the-Server-The-Protocols)  \\n[GitHub](https://git-scm.com/book/en/v2/GitHub-Account-Setup-and-Configuration)  \\n\\n## Notes\\n\\n\xc9 chato que o livro mant\xe9m uns comandos mais antigos pois alguns sistemas operacionais n\xe3o utilizam Git relativamente mais recente (pelo menos Git de 2020 seria bom)  \\n\\nGithub cobre bem as novidades do Git: https://github.blog/?s=Highlights+from+Git"}]}')}}]);