"use strict";(self.webpackChunkthiagola_92_github_io=self.webpackChunkthiagola_92_github_io||[]).push([[2205],{9813:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2023/09/22/mongodb-gui","metadata":{"permalink":"/pt-br/blog/2023/09/22/mongodb-gui","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-09-22-mongodb-gui/index.md","source":"@site/blog/2023-09-22-mongodb-gui/index.md","title":"MongoDB GUI","description":"Em 2019 eu comecei a trabalhar em uma startup que usava banco de dados MongoDB.","date":"2023-09-22T00:00:00.000Z","formattedDate":"22 de setembro de 2023","tags":[{"label":"mongo","permalink":"/pt-br/blog/tags/mongo"},{"label":"mongodb","permalink":"/pt-br/blog/tags/mongodb"},{"label":"gui","permalink":"/pt-br/blog/tags/gui"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["mongo","mongodb","gui"]},"nextItem":{"title":"Wang Tiles pt. 2","permalink":"/pt-br/blog/2023/09/21/wang-tiles-2"}},"content":"Em 2019 eu comecei a trabalhar em uma startup que usava banco de dados [MongoDB](https://www.mongodb.com/).  \\n\\nNa \xe9poca mantermos diversas licen\xe7as da interface gr\xe1fica [Studio 3T](https://studio3t.com/) n\xe3o era uma boa ideia, n\xe3o eramos uma empresa lucrativa e o uso dela por pessoa n\xe3o iria valer a pena.  \\n\\nE por isso comecei a buscar por um interface gr\xe1fica que fosse me satisfazer.  \\n\\n## Robot 3T\\n\\nUma alternativa considerada foi [Robo 3T/Robomongo](https://robomongo.org/) mas pelo fato dele ter sido adquirido pelo Studio 3T j\xe1 n\xe3o era um bom sinal para mim.  \\n\\n\xc9 muito normal ver empresas grandes comprando concorrentes e depois deixando eles aos poucos sumirem, ent\xe3o meu palpite era que Robot 3T n\xe3o iria receber tantas atualiza\xe7\xf5es e n\xe3o cresceria como ferramenta.  \\n\\n**Hoje em em 2023**: Fazendo 6 anos desde que foi adquirido e uma vers\xe3o de gra\xe7a do Studio 3T foi lan\xe7ada para substituir o Robo 3T que foi descontinuado.  \\n\\n## Mongo-Express\\n\\nUtilizei [mongo-express](https://github.com/mongo-express/mongo-express) por um tempo e satisfazia o m\xednimo que eu precisava mas a interface gr\xe1fica n\xe3o me agradava.  \\n\\n**Hoje em em 2023**:  Parece ter mantido a mesma interface, o que n\xe3o me atrai.  \\n\\n## QueryAssist\\n\\nEm 2020, [QueryAssist](https://twitter.com/QueryAssist) foi a ferramenta que eu decidi utilizar sempre para interagir com o Mongo.  \\n\\nEla possuia uma vers\xe3o gratuita mas voc\xea podia comprar a vers\xe3o vital\xedcia e ganhar mais funcionalidades. A vers\xe3o gratuita era mais que o suficiente para mim e funcionava muito bem.   \\n\\nInfelizmente durou pouco, fui notando a falta de atualiza\xe7\xe3o no blog e nos posts do Twitter. Claramente um sinal que a ferramenta iria desaparecer, por causa disso decidi retornar a minha busca por outra interface gr\xe1fica antes que est\xe1 parece de funcionar sem aviso pr\xe9vio.  \\n\\n**Hoje em em 2023**: Site deles foi desligado e eles n\xe3o tem postagens novas desde 2020.  \\n\\n## MongoDB Compass\\n\\n[MongoDB Compass](https://www.mongodb.com/products/tools/compass) parece estar em constru\xe7\xe3o desde 2015, mas na \xe9poca que eu estava buscando interfaces gr\xe1ficas era como se ele **n\xe3o existisse** para mim. Meu palpite era que n\xe3o estava divulgando j\xe1 que n\xe3o estava pronto para produ\xe7\xe3o \ud83e\udd14.  \\n\\nTudo que posso dizer \xe9 que quando finalmente descobri a exist\xeancia dele, a aus\xeancia de alguma funcionalidade n\xe3o me agradou...  \\n\\n**Hoje em em 2023**: Aposto que hoje em dia j\xe1 devem ter implementado a funcionalidade que eu queria mas n\xe3o estou em dia com as ferramentas do Mongo para saber.  \\n\\n## MongoDB for VS Code\\n\\nQuando [MongoDB for VS Code](https://www.mongodb.com/products/tools/vs-code) lan\xe7ou oficialmente para mim era um sinal que minha busca tinha terminado, pois era uma ferramenta desenvolvida pelos mesmos criadores do MongoDB e que era s\xf3 uma quest\xe3o de tempo at\xe9 implementarem diversas funcionalidades legais.  \\n\\nNesta \xe9poca eu at\xe9 parei o desenvolvimento de uma ferramenta que eu estava construindo.  \\n\\n**Hoje em em 2023**: Parece que a extens\xe3o apenas foi criada para fazer o m\xednimo e n\xe3o deve evoluir muito."},{"id":"/2023/09/21/wang-tiles-2","metadata":{"permalink":"/pt-br/blog/2023/09/21/wang-tiles-2","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-09-21-wang-tiles-2/index.md","source":"@site/blog/2023-09-21-wang-tiles-2/index.md","title":"Wang Tiles pt. 2","description":"Na primeira parte n\xf3s focamos exclusivamente em tiles que precisavam apenas satisfazer uma rela\xe7\xe3o com os adjacentes. Por\xe9m existe casos onde rela\xe7\xe3o com as diagonais tamb\xe9m \xe9 importante.","date":"2023-09-21T00:00:00.000Z","formattedDate":"21 de setembro de 2023","tags":[{"label":"wang","permalink":"/pt-br/blog/tags/wang"},{"label":"tiles","permalink":"/pt-br/blog/tags/tiles"},{"label":"godot","permalink":"/pt-br/blog/tags/godot"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["wang","tiles","godot"]},"prevItem":{"title":"MongoDB GUI","permalink":"/pt-br/blog/2023/09/22/mongodb-gui"},"nextItem":{"title":"Wang Tiles pt. 1","permalink":"/pt-br/blog/2023/09/19/wang-tiles"}},"content":"Na [**primeira parte**](../2023-09-19-wang-tiles/index.md) n\xf3s focamos exclusivamente em tiles que precisavam apenas satisfazer uma rela\xe7\xe3o com os adjacentes. Por\xe9m existe casos onde rela\xe7\xe3o com as diagonais tamb\xe9m \xe9 importante.  \\n\\nVamos organizar em 3 tipos:\\n- **Sides** (visto anteriormente)\\n    - O foco era casar a adjacente.\\n- **Corners** (ser\xe1 visto)\\n    - O foco vai ser casar **duas** adjacentes e **uma** diagonal.\\n- **Corners and Sides** (ser\xe1 visto)\\n    - O foco vai ser resolver **corners** e **sides**.\\n\\nA seguinte imagem desmonstra como cada tipo deve casar:  \\n\\n![Compara\xe7\xe3o entre os 3 tipos de tiles](./matching.svg)  \\n\\nTirando isto a l\xf3gica principal de Wang tiles permanece, ou seja, n\xe3o precisamos falar dos mesmos assuntos vistos na primeira parte pois voc\xea s\xf3 precisa adaptar a maneira de casar tiles.  \\n\\nPor\xe9m iremos mostrar para cada um dos tipos:\\n- Todos os possiveis tiles\\n- M\xednimo de tiles considerando rota\xe7\xe3o e reflex\xe3o\\n\\n-----------------------------------\\n\\n## Sides\\n\\n![Todos os possiveis tiles para \\"sides\\"](./sides.svg)  \\n\\n16 tiles  \\n\\n### Minimal  \\n\\n![O m\xednimo tiles para \\"sides\\"](./sides_minimalist.svg)  \\n\\n6 tiles  \\n\\n-----------------------------------\\n\\n## Corners\\n\\n![Todos os possiveis tiles para \\"corners\\"](./corners.svg)  \\n\\n16 tiles  \\n\\n### Minimal  \\n\\n![Todos os possiveis tiles para \\"corners\\"](./corners_minimalist.svg)  \\n\\n6 tiles  \\n\\n-----------------------------------\\n\\n## Corners and Sides\\n\\n:::note\\n\\nClique nas imagens para abrir em outra janela e depois de bastante zoom.  \\nE lembre que para restar o zoom existe o atalho `Ctrl+0`.  \\n\\n:::\\n\\n[![Todos possiveis tiles para \\"corners and sides\\"](./corners_sides.svg)](./corners_sides.svg)  \\n\\n256 tiles  \\n\\n### Minimal  \\n\\n![Todos os possiveis tiles para \\"corners\\"](./corners_sides_minimalist.svg)  \\n\\n51 tiles  \\n\\n-----------------------------------\\n\\n## References\\n\\n- [cr31 website](http://www.cr31.co.uk/stagecast/wang/intro.html)"},{"id":"/2023/09/19/wang-tiles","metadata":{"permalink":"/pt-br/blog/2023/09/19/wang-tiles","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-09-19-wang-tiles/index.md","source":"@site/blog/2023-09-19-wang-tiles/index.md","title":"Wang Tiles pt. 1","description":"(Wang tiles foi proposto pelo matem\xe1tico Hao Wang em 1961)","date":"2023-09-19T00:00:00.000Z","formattedDate":"19 de setembro de 2023","tags":[{"label":"wang","permalink":"/pt-br/blog/tags/wang"},{"label":"tiles","permalink":"/pt-br/blog/tags/tiles"},{"label":"godot","permalink":"/pt-br/blog/tags/godot"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["wang","tiles","godot"]},"prevItem":{"title":"Wang Tiles pt. 2","permalink":"/pt-br/blog/2023/09/21/wang-tiles-2"},"nextItem":{"title":"Tumblr","permalink":"/pt-br/blog/2023/09/16/tumblr"}},"content":"(Wang tiles foi proposto pelo matem\xe1tico Hao Wang em 1961)  \\n\\nAssuma que teremos um conjunto de tiles onde cada lado est\xe1 pintado de apenas uma cor. Por exemplo:  \\n\\n![Exemplo de 5 tiles diferentes](./tiles.svg)  \\n\\n1. Cada lado com uma cor.  \\n2. Dois lados com a mesma cor.  \\n3. Todos os lados com a mesma cor.\\n4. Dois lados adjacentes com a mesma cor.\\n5. Varia\xe7\xe3o das cores j\xe1 vistas s\xf3 que em posi\xe7\xf5es diferentes.\\n\\n:::note\\n\\nPor simplicidade mudaremos para duas cores apenas.  \\n\\n:::\\n\\nA ideia \xe9 reutilizar os mesmos tiles quantas vezes quisermos para botar eles lado a lado e formar um plano, por\xe9m com as cores laterais do tiles sempre casando. No exemplo seguinte temos 5 tiles e 2 exemplos de planos formados por eles:  \\n\\n![Exemplo utilizando 5 tiles diferentes para criar 2 combina\xe7\xf5es de plano](./tiles_match.svg)  \\n\\nImportante notar que:\\n- Tiles **n\xe3o** podem se sobrepor.  \\n- Tiles **n\xe3o** podem ser rotacionados ou refletidos.  \\n\\nPois n\xe3o \xe9 poss\xedvel saber se seriam tiles v\xe1lidos sem conhecer a imagem utilizada neles.  \\n\\n## Automation\\n\\nEmbora reutiliza\xe7\xe3o de tiles para gerar diversos planos/mapas n\xe3o seja especial, Wang tiles adiciona a l\xf3gica de relacionar os tiles entre si. Isto nos permite verificar se um tile \xe9 v\xe1lido numa determinada posi\xe7\xe3o.  \\n\\nPor exemplo, possuindo 2 cores e 4 lados, podemos formar 16 (2<sup>4</sup>) tiles diferentes:  \\n\\n![Todas os poss\xedveis tiles com duas cores e quatro lados](./sides.svg)  \\n\\n:::note\\n\\nAdicionamos um quadrado cinza no centro de cada tile.\\n\\n:::\\n\\nBotamos estes tiles na game engine [Godot](https://godotengine.org/) e nela definimos a rela\xe7\xe3o entre os tiles.  \\n\\nAo come\xe7ar a pintar tiles dentro da game engine, podemos ver que ela consegue verificar qual tile \xe9 v\xe1lido naquela posi\xe7\xe3o ou se precisa alterar os vizinhos.  \\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/aWyol4H4Csc?si=JpoIgIEVf9v2dJ45\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>  \\n\\nEm segundos conseguimos construir planos onde os tiles tem uma conex\xe3o entre si.  \\n\\n## Variations\\n\\n\xc9 importante notar que n\xe3o h\xe1 problema criar varia\xe7\xf5es do mesmo tile. Por exemplo:  \\n\\n![Mesmos 16 por\xe9m com a adi\xe7\xe3o de 3 tiles com todos os lados verdes](./sides_with_trees.svg)  \\n\\nNo momento de preencher por um tile v\xe1lido naquela posi\xe7\xe3o, a ferramenta iria ter que escolher entre 4 tiles diferentes. Algumas ferramentas como Godot escolheram aleatoriamente:  \\n\\nAntes  \\n![Exemplo de plano criado utilizando os 16 tiles](./plane00.png)  \\n\\nDepois  \\n![Exemplo 3 de plano criado utilizando os tiles, por\xe9m com \xe1rvores](./plane01.png)  \\n\\n## Rotation & Reflection\\n\\nNa proposta de Wang n\xe3o se pode rotacionar e refletir tiles pois n\xe3o existe garantia que a imagem continuar\xe1 fazendo sentido ap\xf3s rotacionada ou refletida.  \\n\\nPor\xe9m como criador dos tiles, somos capazes de deduzir est\xe1 informa\xe7\xe3o e apenas fazer os tiles necess\xe1rios. Vamos pegar este conjunto de tiles:  \\n\\n![Todas os poss\xedveis tiles com duas cores e quatro lados](./sides.svg)  \\n\\nAlguns destes tiles s\xe3o varia\xe7\xf5es dos anteriores por\xe9m rotacionados ou refletidos. Levando isto em conta, podemos minimizar para 6 tiles apenas:  \\n\\n![Seis tiles que conseguem representar os mesmo tiles acima](./sides_minimalist.svg)  \\n\\n\xc9 importante notar que s\xf3 \xe9 poss\xedvel se conhecermos a imagem. Botando a mesma \xe1rvore utilizada anteriormente em um dos tiles, podemos ver o tile perder o sentido quando rotacionado mas n\xe3o quando refletido:  \\n\\n![\xc1rvore adicionada a um tile e suas varia\xe7\xf5es de rota\xe7\xe3o e reflex\xe3o](./tile_with_tree.svg)  \\n\\n## Example\\n\\nTodos nossos tiles tem sido com cores, por\xe9m as cores apenas servem para representar a rela\xe7\xe3o entre os tiles.  \\n\\nPara deixar isto claro, vamos substituir o desenho dos tiles por desenhos que melhor representem um labirinto. Vamos trocar **azul por arbustos** e **verde por terra**:  \\n\\n![Compara\xe7\xe3o do tiles bases com tiles do labirinto](./maze_tiles.svg)  \\n\\nUtilizando estes tiles com suas rota\xe7\xf5es/relex\xf5es, podemos criar em segundos o nosso labirinto:  \\n\\n![Tiles do labirinto](./maze.png)  \\n\\n:::note\\n\\nEste labirinto est\xe1 com cara de circuitos da placa m\xe3e. \ud83e\udd14\\n\\n:::\\n\\n## References\\n\\n- [cr31 website](http://www.cr31.co.uk/stagecast/wang/intro.html)  \\n- [Wikipedia](https://en.wikipedia.org/wiki/Wang_tile)"},{"id":"/2023/09/16/tumblr","metadata":{"permalink":"/pt-br/blog/2023/09/16/tumblr","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-09-16-tumblr/index.md","source":"@site/blog/2023-09-16-tumblr/index.md","title":"Tumblr","description":"Estou experimentando alternativas j\xe1 que o Tumblr me deixou puto.","date":"2023-09-16T00:00:00.000Z","formattedDate":"16 de setembro de 2023","tags":[{"label":"tumblr","permalink":"/pt-br/blog/tags/tumblr"},{"label":"website","permalink":"/pt-br/blog/tags/website"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://media.discordapp.net/attachments/807746464833863709/1110163211476533258/twitter.png","key":"thiagola92-angry"}],"frontMatter":{"authors":"thiagola92-angry","tags":["tumblr","website"]},"prevItem":{"title":"Wang Tiles pt. 1","permalink":"/pt-br/blog/2023/09/19/wang-tiles"},"nextItem":{"title":"Sieve","permalink":"/pt-br/blog/2023/05/12/sieve"}},"content":"Estou experimentando alternativas j\xe1 que o Tumblr me deixou puto.  \\nE a pior parte \xe9 que foram funcionalidades importantes para um site de blogs!  \\n\\n## Text Editor\\n\\n![Imagem ilustrativa. Uma caneta escrevendo num papel, no papel tem diversas linhas e uma delas \xe9 um video \ud83e\udd23](./text_editor.svg)\\n\\nPrimeiro preciso falar dos 3 editores de texto que o Tumblr fornece:\\n- Rich Text (default)\\n    - **Positivo**: Os criadores do site gastaram tempo planejando como melhor te passar a habilidade de escrever texto em negrito/it\xe1lico ou como inserir links/imagens/videos.  \\n    - **Negativo**: N\xe3o existe garantia que possa mover seu texto para outros blogs sem perder qualidade, as chances de estar preso ao Tumblr s\xe3o altas.  \\n- HTML\\n    - **Positivo**: Todos os websites s\xe3o feitos utilizando HTML, ent\xe3o o \xfanico limite do que se pode fazer \xe9 o quanto o Tumblr limitou de utiliza\xe7\xe3o.  \\n    - **Negativo**: N\xe3o \xe9 pr\xe1tico de escrever ou alterar sem ajuda de editores de texto modernos.  \\n- Markdown\\n    - **Positivo**: Criada para provid\xeanciar formata\xe7\xe3o ao texto sem dificultar a legibilidade. Por baixo dos panos faz uma convers\xe3o para HTML, ent\xe3o tamb\xe9m \xe9 normal ver essa linguagem aceitar funcionalidade do HTML.  \\n    - **Negativo**: Relativamente limitado de como se pode formatar seu texto.  \\n\\nNa minha cabe\xe7a HTML e Markdown parecem existir apenas para enfeitar, eles n\xe3o parecem dar suporte para nada que n\xe3o seja poss\xedvel no Rich Text. Funcionalidades simples como a linha horizontal n\xe3o s\xe3o implementadas e apenas recebemos o aviso:\\n\\n> Contents contains unsupported HTML, the post may not be what you expected.  \\n\\n> Contents contains unsupported Markdown, the post may not be what you expected.  \\n\\nEu entendo filtrar funcionalidades do HTML \xe9 aceit\xe1vel pois poderia ser perigoso permitir tudo. Por\xe9m filtrar funcionalidade do Markdown n\xe3o faz sentido j\xe1 que a linguagem j\xe1 foi feita para ser bem limitada e n\xe3o oferecer nenhum risco (estou considerando Markdown sem HTML).  \\n\\nNo final ambos acabam sendo uma vers\xe3o mais limitada que o pr\xf3prio Rich Text. Se tentarmos ser otimistas, podemos dizer que agora podemos exportar para HTML/Markdown e levar para outros sites.  \\n\\nAgora vamos ver os pr\xf3ximos detalhes que me incomodaram, tipo o fato do Tumblr gostar de alterar o seu texto...\\n\\n## Switching Text Editors\\n\\n![Setas apontando para os 3 tipos de formatos permitidos, sinalizando que est\xe1 indo de um para o outro](./switch.svg)\\n\\nPrimeiro vamos deixar claro que \xe9 um bom senso na vida **n\xe3o** alterar algo que voc\xea v\xe1 precisar da vers\xe3o original mais tarde. E no caso do Tumblr eu n\xe3o tenho certeza de qual formato \xe9 o original entre Rich Text, HTML e Markdown (eu apostaria no Rich Text por ser o formato padr\xe3o).  \\n\\nO problema que me deparei foi que ao trocar de editor de texto, nem todas as funcionalidades dos editores de texto s\xe3o conversiveis entre eles, e n\xe3o parece ter uma regra do que vai acontecer com a funcionalidade quando voc\xea trocar. Exemplos:  \\n\\n- **Rich text to HTML/Markdown**\\n    - A funcionalidade \\"read more\\" vai ser **removido**.  \\n- **Rich text to Markdown**\\n    - Texto em Lucille vai ficar **invis\xedvel durante a edi\xe7\xe3o** por\xe9m ainda vai estar presente quando publicado.\\n\\nSe voc\xea decidir voltar para o editor de texto anterior, voc\xea pode ter perdido algo da formata\xe7\xe3o ou pode ter se mantido.  \\n\\n## Preview\\n\\n![Imagem ilustrativa do post entregando como \u2b50 e saindo como \ud83d\udca9](./preview_breaking.svg)\\n\\nNormalmente visualiza\xe7\xe3o pr\xe9via seria apenas para demonstrar como o seu trabalho ir\xe1 ficar quando finalizado, sem alterar em nada o escrito...  \\n\\nPor algum motivo Tumblr decide alterar o seu trabalho durante a prepara\xe7\xe3o da visualiza\xe7\xe3o, ou seja, grande chance de alterarem seu HTML ou Markdown. Nestes casos diga adeus a qualquer organiza\xe7\xe3o que tivesse sido usada, pois agora ter\xe1 que lidar com o c\xf3digo da maneira que o Tumblr deixou.  \\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/uQBsBePphYI\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>  \\n\\n## Hide Request Referer\\n\\n![Pessoa se escondendo atr\xe1s de um muro](./hidding.svg)  \\n\\nQuando voc\xea clica em um link de um site, o seu navegador ir\xe1 fazer a requisi\xe7\xe3o do conte\xfado daquele link para depois exibir ele na sua tela. Neste caso \xe9 normal enviar para o link que voc\xea clicou de onde voc\xea est\xe1 vindo, para que o site que vai te enviar o conte\xfado saber de onde est\xe1 vindo o tr\xe1fico.  \\n\\nTumblr obrigatoriamente altera todos seus links que levem a sites exteriores, justamente para que consiga esconder este tipo de informa\xe7\xe3o. Por exemplo:  \\n\\n<iframe width=\\"560\\" height=\\"315\\" src=\\"https://www.youtube.com/embed/ullzdbGvQp8?si=oPAob5XZzFmYSX9T\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" allowfullscreen></iframe>  \\n\\nExistem casos que voc\xea realmente n\xe3o quer que o outro site saiba de onde est\xe1 vindo o tr\xe1fico. Mas eu imagino que exista casos onde voc\xea quer que o outro lado saiba que voc\xea est\xe1 levando tr\xe1fico a eles.  \\n\\n![Minha configura\xe7\xe3o de privacidade no tumblr](./settings.png)  \\n\\nNote como ambos \\"Hide thiagola92 from people without an account\\" e \\"Discourage searching of thiagola92\\" est\xe3o desligados mas mesmo assim eu recebo aquela prote\xe7\xe3o de privacidade.  \\n\\n## Undo?\\n\\n![Pessoa confusa](./confuse.svg)  \\n\\nAviso logo que eu n\xe3o consegui reproduzir esse problema que eu tive um dia qualquer, mas basicamente quando eu apertei `Ctrl+z` o post desfez tudo at\xe9 a minha \xfaltima inser\xe7\xe3o de imagem.  \\n\\nComo n\xe3o conseguir reproduzir, pode ter sido um bug do dia...\\n\\n## Conclusion\\n\\n![Pessoa surpresa](./surprised.svg)  \\n\\nNo final das contas, todas essas chatisses me levaram a experimentar outras maneiras de compartilhar conte\xfado. Ainda n\xe3o estou completamente feliz mas est\xe1 me satisfazendo.  \\n\\n**Observa\xe7\xe3o**: Recentemente eu descobri que Tumblr tinha sido comprado pela mesma empresa do [Wordpress](https://en.wikipedia.org/wiki/WordPress.com) ent\xe3o isso deve explicar o pouco carinho que o website tem recebido em quest\xe3o de funcionalidade."},{"id":"/2023/05/12/sieve","metadata":{"permalink":"/pt-br/blog/2023/05/12/sieve","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-05-12-sieve/index.md","source":"@site/blog/2023-05-12-sieve/index.md","title":"Sieve","description":"Enquanto estava explorando as aplica\xe7\xf5es do Murena Cloud acabei parando para olhar o servi\xe7o de email deles. Nisso acabei descobrindo que eles utilizam a linguagem de programa\xe7\xe3o Sieve para filtro de email.","date":"2023-05-12T00:00:00.000Z","formattedDate":"12 de maio de 2023","tags":[{"label":"sieve","permalink":"/pt-br/blog/tags/sieve"},{"label":"programming language","permalink":"/pt-br/blog/tags/programming-language"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["sieve","programming language"]},"prevItem":{"title":"Tumblr","permalink":"/pt-br/blog/2023/09/16/tumblr"},"nextItem":{"title":"SVG","permalink":"/pt-br/blog/2023/04/18/svg"}},"content":"Enquanto estava explorando as aplica\xe7\xf5es do [Murena Cloud](https://murena.com/) acabei parando para olhar o servi\xe7o de email deles. Nisso acabei descobrindo que eles utilizam a linguagem de programa\xe7\xe3o [Sieve](http://sieve.info/) para filtro de email.  \\n\\nO que me deixou a desejar que [Gmail](https://en.wikipedia.org/wiki/Gmail) usasse pois deixaria f\xe1cil de automatizar algumas tarefas. Al\xe9m disso seria interessante os servidores de email usarem a mesma linguagem para filtros de email.  \\n\\nInfelizmente a linguagem parece pouco popular e n\xe3o acho que v\xe1 ficar tanto tempo viva... Mas me chamou tanta aten\xe7\xe3o que tentei fazer um [pull request](https://github.com/adambard/learnxinyminutes-docs/pull/4661) para adicionar ela no [Learn X in Y minutes](https://learnxinyminutes.com/)."},{"id":"/2023/04/18/svg","metadata":{"permalink":"/pt-br/blog/2023/04/18/svg","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-04-18-svg/index.md","source":"@site/blog/2023-04-18-svg/index.md","title":"SVG","description":"Eu tenho explorado maneiras de fazer gr\xe1fico para o meu jogo.","date":"2023-04-18T00:00:00.000Z","formattedDate":"18 de abril de 2023","tags":[{"label":"svg","permalink":"/pt-br/blog/tags/svg"},{"label":"inkscape","permalink":"/pt-br/blog/tags/inkscape"},{"label":"aseprite","permalink":"/pt-br/blog/tags/aseprite"},{"label":"art","permalink":"/pt-br/blog/tags/art"},{"label":"2d","permalink":"/pt-br/blog/tags/2-d"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["svg","inkscape","aseprite","art","2d"]},"prevItem":{"title":"Sieve","permalink":"/pt-br/blog/2023/05/12/sieve"},"nextItem":{"title":"GDScript RefCounted","permalink":"/pt-br/blog/godot-refcounted"}},"content":"Eu tenho explorado maneiras de fazer gr\xe1fico para o meu jogo.  \\n\\n## Pixel art\\n\\nMeu plano sempre foi fazer algo simples, e originalmente a ideia seria pixel art com [Aseprite](https://www.aseprite.org/), por\xe9m com o tempo eu percebi que mesmo coisas \\"simples\\" em pixel art me dariam trabalho \ud83d\ude06.  \\n\\nInfelizmente eu n\xe3o lembro dos problemas que tive durante a utiliza\xe7\xe3o mas acredito que seja pelo fato de eu n\xe3o conhecer boas pr\xe1ticas de arte para jogos em geral (e eu n\xe3o tinha planos de me aventurar em detalhes sobre assunto).  \\n\\nEu n\xe3o queria entender como fazer para a arte n\xe3o perde qualidade depois de alterar a escala, ou como a fazer anima\xe7\xf5es boas, ... O foco para mim sempre foi aprender a utilizar bem [Godot](https://godotengine.org/).  \\n\\n## SVG\\n\\nO interesse come\xe7ou pelo fato de SVG conseguir escalar para diversos tamanhos sem perda de qualidade. Isto quer dizer que eu poderia fazer em um tamanho pequeno e escalar no jogo sem que ficasse esquisito.  \\n\\nIsso pode ser f\xe1cilmente demonstrado alterando duas propriedades da imagem SVG, que por sua vez \xe9 algo simples de fazer (abrir a imagem com um editor de texto e alterar).  \\n\\n![Pessoa dentro de uma aura circular que se expande verticalmente](./example01.svg)\\n![Pessoa em p\xe9 com os bra\xe7os semi levantados e pernas abertas](./example02.svg)\\n![Aura circular que se expande verticalmente](./example03.svg)  \\n\\nEstas 3 imagems possuem 16 pixel para `width` e `height`.  \\n\\n```svg\\n<svg\\n   width=\\"16\\"\\n   height=\\"16\\"\\n   ...\\n></svg>\\n```\\n\\nAgora alterando elas para respectivamente 64, 128 e 256:  \\n\\n![Pessoa dentro de uma aura circular que se expande verticalmente](./example01_big.svg)\\n![Pessoa em p\xe9 com os bra\xe7os semi levantados e pernas abertas](./example02_big.svg)\\n![Aura circular que se expande verticalmente](./example03_big.svg)  \\n\\nZero perda de qualidade e tudo que eu fiz foi alterar a propriedades dentro da imagem.  \\n\\n```svg title=\\"\xdaltima imagem\\"\\n<svg\\n   width=\\"256\\"\\n   height=\\"256\\"\\n   ...\\n></svg>\\n```\\n\\n## Aseprite\\n\\nAseprite exporta para SVG de uma maneira bem prec\xe1ria. Cada pixel \xe9 transformado em um quadrado, cada quadrado \xe9 uma linha do tipo:  \\n\\n```svg\\n<rect x=\\"1\\" y=\\"1\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n```\\n\\nPara representar um ret\xe2ngulo de 10 pixels, ele iria fazer 10 quadrados um no lado do outro.\\n\\nO que \xe9 horr\xedvel quando voc\xea entende que a qualidade do SVG vem pelo fato de voc\xea conseguir representar uma forma geom\xe9trica com uma tag apenas.  \\n\\n```svg title=\\"Aseprite\\"\\n<rect x=\\"1\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"2\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"3\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"4\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"5\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"6\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"7\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"8\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"9\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n<rect x=\\"10\\" y=\\"5\\" width=\\"1\\" height=\\"1\\" fill=\\"#000000\\" />\\n```\\n\\n```svg title=\\"Escrito a m\xe3o\\"\\n<rect x=\\"1\\" y=\\"5\\" width=\\"10\\" height=\\"1\\" fill=\\"#000000\\" />\\n```\\n\\nOs dois geram a mesma imagem por\xe9m o do Aseprite utiliza muitos mais bytes que o outro.\\n\\n## Inkscape\\n\\nEu tive muita avers\xe3o ao [Inkscape](https://inkscape.org/) no in\xedcio e passei um bom tempo procurando por ferramenta alternativa. N\xe3o que Inkscape seja uma ferramenta ruim, mas ao me ver \xe9 ferramenta avan\xe7ada que a muito tempo se tornou visualmente inst\xe1vel.  \\n\\nO visual de uma ferramenta precisa ser flex\xedvel a ponto de aprender o como certas features n\xe3o est\xe3o sendo bem entregues a novos usu\xe1rios.  \\n\\nComo ferramenta, seu objetivo \xe9 ajudar o usu\xe1rio a alcan\xe7ar o seu objetivo com o m\xednimo de esfor\xe7o. Isto inclui o usu\xe1rio n\xe3o ter que buscar tutoriais ou videos na internet para utilizar a ferramenta.  \\n\\n## Conclusion\\n\\nMuitas altern\xe1tivas ainda estavam incompletas ou eram utilizadas de maneiras que eu n\xe3o gostaria (era uma ferramenta web).  \\n\\nEu optei por utilizar Inkscape mesmo por ser a ferramenta mais completa dispon\xedvel e de **gra\xe7a**."},{"id":"godot-refcounted","metadata":{"permalink":"/pt-br/blog/godot-refcounted","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-02-18-gdscript-refcounted/index.md","source":"@site/blog/2023-02-18-gdscript-refcounted/index.md","title":"GDScript RefCounted","description":"Eu passei um dia inteiro curioso para saber o como funcionava contagem por refer\xeancia no GDScript (n\xe3o o conceito mas sim os detalhes tecnicos). Triste por ver que a documenta\xe7\xe3o n\xe3o conseguiu tirar as d\xfavidas que eu tinha e at\xe9 pensei que s\xf3 saberia mais testando ou olhando o c\xf3digo em C++.","date":"2023-02-18T00:00:00.000Z","formattedDate":"18 de fevereiro de 2023","tags":[{"label":"godot","permalink":"/pt-br/blog/tags/godot"},{"label":"gdscript","permalink":"/pt-br/blog/tags/gdscript"},{"label":"refcounted","permalink":"/pt-br/blog/tags/refcounted"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"slug":"godot-refcounted","title":"GDScript RefCounted","authors":"thiagola92-calm","tags":["godot","gdscript","refcounted"]},"prevItem":{"title":"SVG","permalink":"/pt-br/blog/2023/04/18/svg"},"nextItem":{"title":"GDScript Array","permalink":"/pt-br/blog/2023/02/16/gdscript-array"}},"content":"Eu passei um dia inteiro curioso para saber o como funcionava contagem por refer\xeancia no GDScript (n\xe3o o conceito mas sim os detalhes tecnicos). Triste por ver que a documenta\xe7\xe3o n\xe3o conseguiu tirar as d\xfavidas que eu tinha e at\xe9 pensei que s\xf3 saberia mais testando ou olhando o c\xf3digo em C++.\\n\\nAt\xe9 que por acaso esbarrei em um coment\xe1rio de um video que simplesmente explica **muito** bem.\\n\\n\\n> I\'ve been following along in the course, but this particular video contains a lot of misinformation about Godot\'s internals. I\'ll clarify below:\\n> \\n> All variables defined in Godot\'s scripting API are wrapped in an object called a Variant. Each Variant is capable of storing different data types (int, string, bool, Object, Array, Dictionary, Color, Transform, etc.). You can see a list of the supported types `TYPE_*` enum values in the @GlobalScope class API documentation. This Variant class is why GDScript is able to change variable data types dynamically. Internally, every variable is a Variant. When you specify that a variable is typed and can only contain a single type, it is the GDScript language implementation, not Godot Engine, that blocks the type change.\\n> \\n> Now, if a Variant B is assigned to another Variant A, then MOST of the time, the B\'s value is \\"copied by value\\", meaning that the direct value is copied from B to A. There is no reference counting of any kind. They are primitive values. In fact, reference counting primitive values is generally a waste of time and less performant than just copying them directly. This is because, for reference counting, you have to pass around a memory address in order to refer to the variable (because there is only one instance of the variable), and then getting the variable involves looking up the memory address. But for primitive numeric values such as int, float, or bool, passing the direct value takes just as much memory (less than 64 bits or 8 bytes) as passing a memory address. And if you pass a direct value, then the other Variant doesn\'t have to look up the value in the first place; they already have it.\\n> \\n> There are only three data types in Godot 3.2.x and prior that \\"copy by reference\\", i.e. pass a memory address when assigning to a new variable: Object, Array, and Dictionary. EVERYTHING else will copy by value. In Godot 4.0 and beyond, the various Pool*Array classes, such as PoolIntArray, PoolStringArray, etc., will also be updated to copy by reference. With \\"copy by reference\\" data types, if you create one of those values and assign it to two variables, then modifying either one of the variables\' values will modify both variables\' values, since they both refer to the same memory address.\\n> \\n> ```\\n> var x = [1, 2, 3]\\n> var y = x\\n> x.push_back(4) # y is now also [1,2,3,4]\\n> ```\\n> \\n> As for reference counting, that is ONLY supported in Object classes that extend the Reference class. The top of the class hierarchy looks a bit like this...\\n> \\n> - Object  \\n>   - Node  \\n>     - CanvasItem  \\n>       - Node2D  \\n>       - Control  \\n>     - Spatial  \\n>   - Reference  \\n>     - Resource  \\n> \\n> So, Object has only direct new/free methods for allocating and deleting memory. Node and its subtypes can allocate memory, but 1) they can `.free()` immediately just like Objects or `.queue_free()` to schedule their deletion till the next frame (where you can more safely delete a large group of nodes at once), and 2) if you delete a Node, it also deletes all of that Node\'s children, so an entire tree of nodes can be deleted just by deleting the root node of that tree. With Reference, you never delete it directly. It just auto-deletes when you stop having any references to it due to the fact that it actually DOES do reference-counting.\\n> \\n> ```\\n> var ref = Reference.new()\\n> ref = null # the Reference object has now been freed\\n> ```\\n> \\n> Resources behave just like References, except in their case, they can track their reference by their filepath as well. That is, if you do `load(\\"res://my_file.gd\\")`, then you may end up loading a cached instance rather than allocating an entirely new object. If the engine\'s internal ResourceCache finds that the resource has already been loaded, then the `load()` function will just return the memory address of the existing object rather than creating a new one.\\n> \\n> Also note that the practice of creating an object pool for nodes and the like can be useful, but for different reasons than in other engines. This topic is quite advanced for people who may be learning programming for the first time, but: in stuff like C# (Unity), memory is \\"garbage collected\\", i.e. the program tracks memory for you and auto-deletes it on your behalf. This can lead to random pauses in a game if the garbage collector suddenly starts up and interrupts gameplay to clean up memory. Object pooling, i.e. creating a group of objects and then just cycling through them rather than deleting and creating constantly, was a strategy to re-use existing memory for objects so as to stop the garbage collector from needing to run in the first place. But Godot does memory allocation manually and in small increments. It is designed in such a way that constantly creating and deleting objects doesn\'t lead to long-term memory fragmentation, i.e. it doesn\'t mess up your computer. You can read about this in the \\"development\\" section of the official documentation. Anyway, object pooling IS useful if, for performance reasons, you don\'t want to waste TIME deleting and creating large objects, but you won\'t need to worry about stuttering or memory issues, so most of the time, it\'s perfectly fine in Godot to just create and delete objects as you need them.\\n\\n*Algumas adapta\xe7\xf5es foram feitas para melhorar aleitura (adicionar nova linha, transformar em bullet points, etc) mas nenhuma altera\xe7\xe3o em palavras ou frases foram feitas.\\n\\n## Reference\\n\\n- [Video com o coment\xe1rio](https://www.youtube.com/watch?v=9LaB6wbZepg)  \\n- [A pessoa do coment\xe1rio tem um canal que fala bem sobre Godot](https://www.youtube.com/channel/UC7uU5XaPB9uYKlowYOhEHnA)"},{"id":"/2023/02/16/gdscript-array","metadata":{"permalink":"/pt-br/blog/2023/02/16/gdscript-array","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-02-16-gdscript-array/index.md","source":"@site/blog/2023-02-16-gdscript-array/index.md","title":"GDScript Array","description":"Em vez de focar no que eu deveria para fazer um jogo, eu me distrai tentando ganhar desempenho onde n\xe3o precisava...","date":"2023-02-16T00:00:00.000Z","formattedDate":"16 de fevereiro de 2023","tags":[{"label":"godot","permalink":"/pt-br/blog/tags/godot"},{"label":"gdscript","permalink":"/pt-br/blog/tags/gdscript"},{"label":"array","permalink":"/pt-br/blog/tags/array"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://media.discordapp.net/attachments/807746464833863709/1110163082984034334/discord.png","key":"thiagola92-derp"}],"frontMatter":{"authors":"thiagola92-derp","tags":["godot","gdscript","array"]},"prevItem":{"title":"GDScript RefCounted","permalink":"/pt-br/blog/godot-refcounted"},"nextItem":{"title":"Git Book","permalink":"/pt-br/blog/2023/02/08/git-book"}},"content":"Em vez de focar no que eu deveria para fazer um jogo, eu me distrai tentando ganhar desempenho onde n\xe3o precisava...\\n\\n------\\n\\nEu pretendia ter um Array de [buffs](https://en.wikipedia.org/wiki/Status_effect) e a ideia era verificar se cada um dos buffs j\xe1 expirou para remover quando eles acabassem. Primeira coisa que pensei foi em percorrer ele e ir removendo um a um os que expiraram.\\n\\nConforme fui olhando a documenta\xe7\xe3o de [Array](https://docs.godotengine.org/en/stable/classes/class_array.html) percebi um desafio que me chamou aten\xe7\xe3o... Remo\xe7\xe3o pode ser custoso:\\n\\n```gdscript\\nvoid\xa0erase\xa0(Variant\xa0value)\\n```\\n\\n> Note: On large arrays, this method will be slower if the removed element is close to the beginning of the array (index 0). This is because all elements placed after the removed element have to be reindexed.\\n\\n```gdscript\\nvoid\xa0remove\xa0(int\xa0position)\\n```\\n\\n> Note: On large arrays, this method will be slower if the removed element is close to the beginning of the array (index 0). This is because all elements placed after the removed element have to be reindexed.\\n\\n```gdscript\\nVariant\xa0pop_front()\\n```\\n\\n> Note: On large arrays, this method is much slower than pop_back as it will reindex all the array\'s elements every time it\'s called. The larger the array, the slower pop_front will be.\\n\\nPrimeiro fiz o c\xf3digo mais simples para isto, juntar todos que expiraram e depois remove-los um a um:\\n\\n```gdscript\\nvar expired: Array[Buff] = []\\n\\nfor buff in _buffs:\\n    if buff.timeout():\\n        expired.append(buff)\\n\\nfor buff in expired:\\n    _buffs.erase(buff)\\n```\\n\\nPensei nisto porque sei que n\xe3o posso remover elementos do Array enquanto o percorro, isso iria causar uma bagun\xe7a durante o processo (pode fazer com que voc\xea pule elementos enquanto percorre e reindexia).\\n\\nMas o que eu aprendi em uma aula da faculdade \xe9 que posso evitar este problema se eu percorrer o Array de tr\xe1s para frente (apenas use isso se voc\xea n\xe3o liga para a ordem em que os elementos v\xe3o ser removidos).\\n\\n```gdscript\\nfor in in range(_buffs.size() -1, -1, -1):\\n    if _buffs[i].timeout():\\n        _buffs.erase(_buffs[i])\\n```\\n\\nBem mais r\xe1pido que a vers\xe3o anterior e o Godot ainda consegue me sugerir os m\xe9todos a serem usados de cada elementos (pois eu usei tipagem no Array).\\n\\nN\xe3o satisfeito com o fato que reindexar tem um custo grande, resolvi fazer mais uma tentativa:\\n\\n```gdscript\\nvar up_to_date: Array[Buff] = []\\n\\nfor buff in _buffs:\\n    if not buff.timeout():\\n        up_to_date.append(buff)\\n\\n_buffs = up_to_date\\n```\\n\\nEm vez de me preocupar em remover, apenas anoto os buffs bons para depois sobreescrever o Array.  \\n\\nLado positivo: `append()` \xe9 bem mais barato que `erase()` pois n\xe3o precisa reindexar.  \\n\\nCada uma dessas maneira melhorou para quando eu precisava remover **MUITOS** elementos de um Array **MUITO** grande.  \\n\\nPor exemplo, no caso de um Array com 5k ok e 5k precisando ser removidos a diferen\xe7a foi de 648117\xb5s para 2286\xb5s (at\xe9 eu estou me perguntando se eu medi corretamente isto pq isso seria um aumento de 28.000%?)  \\n\\nVoltando para a realidade... Isto n\xe3o \xe9 um caso normal e as chances disso acontecer em um jogo \xe9 quase imposs\xedvel (at\xe9 para MMORPG 5k buffs \xe9 muito).  \\n\\nPelo lado positivo est\xe1 fun\xe7\xe3o n\xe3o \xe9 custosa, mesmo nos casos pequenos ela chega a ter o custo de 0~100% a mais que anterior.\\n\\n## Note\\n\\nDepois de tudo isso eu pensei... eu n\xe3o deveria estar dando `queue_free()` nestes meus Nodes? \ud83e\udd14\\n\\nN\xe3o era mais f\xe1cil deixar que os Nodes dessem `queue_free()` neles mesmo quando dessem timeout? \ud83e\udd14"},{"id":"/2023/02/08/git-book","metadata":{"permalink":"/pt-br/blog/2023/02/08/git-book","editUrl":"https://github.com/thiagola92/thiagola92.github.io/tree/master/blog/2023-02-08-git-book/index.md","source":"@site/blog/2023-02-08-git-book/index.md","title":"Git Book","description":"Tirei essa semana para ler alguns capitulos do livro Pro Git.","date":"2023-02-08T00:00:00.000Z","formattedDate":"8 de fevereiro de 2023","tags":[{"label":"git","permalink":"/pt-br/blog/tags/git"},{"label":"documentation","permalink":"/pt-br/blog/tags/documentation"}],"hasTruncateMarker":false,"authors":[{"name":"Thiago Lages de Alencar","title":"Desenvolvedor de Software","url":"https://github.com/thiagola92","imageURL":"https://cdn.discordapp.com/attachments/807746464833863709/1110163174289850378/tiktok.png","key":"thiagola92-calm"}],"frontMatter":{"authors":"thiagola92-calm","tags":["git","documentation"]},"prevItem":{"title":"GDScript Array","permalink":"/pt-br/blog/2023/02/16/gdscript-array"}},"content":"Tirei essa semana para ler alguns capitulos do livro [Pro Git](https://git-scm.com/book/en/v2).  \\n\\nEu uso [Git](https://en.wikipedia.org/wiki/Git) a anos e entendo boa parte dos comandos principais que se precisa no dia a dia... Mas \xe9 sempre bom uma leitura sobre o assunto bem organizado/explicado.  \\n\\nMeu foco foi em capitulos que pudessem introduzir conhecimento novo ou fortalecer conhecimento pr\xe9vio:  \\n[Getting Started](https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control)  \\n[Git Basics](https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository)  \\n[Git Branching](https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell)  \\n\\nDois capitulos possuem partes que me interessam e ainda estou para olhar:  \\n[Git Tools](https://git-scm.com/book/en/v2/Git-Tools-Revision-Selection)  \\n[Customizing Git](https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration)  \\n\\nDito isto, n\xe3o devo terminar de ler o livro pois alguns capitulos s\xe3o bem espec\xedficos:  \\n[Git on the Server](https://git-scm.com/book/en/v2/Git-on-the-Server-The-Protocols)  \\n[GitHub](https://git-scm.com/book/en/v2/GitHub-Account-Setup-and-Configuration)  \\n\\n## Notes\\n\\n\xc9 chato que o livro mant\xe9m uns comandos mais antigos pois alguns sistemas operacionais n\xe3o utilizam Git relativamente mais recente (pelo menos Git de 2020 seria bom)  \\n\\nGithub cobre bem as novidades do Git: https://github.blog/?s=Highlights+from+Git"}]}')}}]);